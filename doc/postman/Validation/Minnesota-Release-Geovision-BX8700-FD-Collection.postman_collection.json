{
	"info": {
		"_postman_id": "7bb31d0c-e8ff-4fd8-ba01-a6f6c22720b6",
		"name": "Minnesota-Release-Geovision-BX8700-FD-Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "System Function",
			"item": [
				{
					"name": "Get all devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkInterfaces\": {\n        \"InterfaceToken\": \"0\",\n        \"Enabled\": true,\n        \"NetworkInterface\": {\n            \"IPv4\": {\n                \"Enabled\": true,\n                \"DHCP\": true\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{metadata_host}}:{{metadata_port}}/api/v3/device/all",
							"protocol": "http",
							"host": [
								"{{metadata_host}}"
							],
							"port": "{{metadata_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"all"
							]
						},
						"description": "To get all onvif devices change {device_service_name} environment varibale to device-onvif-camera"
					},
					"response": []
				},
				{
					"name": "Get device information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DeviceInformation",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DeviceInformation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get system date and time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/SystemDateAndTime",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"SystemDateAndTime"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set system date and time manual",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SystemDateAndTime\": {\n        \"DateTimeType\": \"Manual\",\n        \"DaylightSavings\": false,\n        \"TimeZone\": {\n            \"TZ\": \"UTC-1:0\"\n        },\n        \"UTCDateTime\": {\n            \"Time\": {\n                \"Hour\": 7,\n                \"Minute\": 40,\n                \"Second\": 11\n            },\n            \"Date\": {\n                \"Year\": 2022,\n                \"Month\": 3,\n                \"Day\": 30\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/SystemDateAndTime",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"SystemDateAndTime"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set system date and time NTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" setTimeout(function(){",
									"          console.log(\"Sleeping for 6 seconds before next request.\");",
									"  }, 6000);",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SystemDateAndTime\": {\n        \"DateTimeType\": \"NTP\",\n        \"DaylightSavings\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/SystemDateAndTime",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"SystemDateAndTime"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auto Discovery",
			"item": [
				{
					"name": "Get discovery mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DiscoveryMode",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DiscoveryMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set discovery mode to 'NonDiscoverable\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DiscoveryMode\": {\n        \"DiscoveryMode\": \"NonDiscoverable\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DiscoveryMode",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DiscoveryMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set discovery mode to 'Discoverable\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DiscoveryMode\": {\n        \"DiscoveryMode\": \"Discoverable\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DiscoveryMode",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DiscoveryMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DiscoveryScopes",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DiscoveryScopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									" setTimeout(function(){",
									"          console.log(\"Sleeping for 3 seconds before next request.\");",
									"  }, 3000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AddDiscoveryScopes\": {\n        \"ScopeItem\": [\n            \"test.com\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/AddDiscoveryScopes",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"AddDiscoveryScopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DiscoveryScopes\": {\n        \"ScopeItem\": \"test5.com\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DiscoveryScopes",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DiscoveryScopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"RemoveDiscoveryScopes\": {\n        \"ScopeItem\": [\n            \"test.com\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/RemoveDiscoveryScopes",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"RemoveDiscoveryScopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get endpoint reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/EndpointReference",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"EndpointReference"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Video Streaming",
			"item": [
				{
					"name": "Get profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"// saving the API Response as a variable",
									"let response = pm.response.json();",
									"profiles = response.event.readings[0].objectValue.Profiles;",
									"pm.collectionVariables.set('profiles', profiles);",
									"profiles.forEach(profile => {",
									"    console.log(profile.Token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MediaProfiles",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MediaProfiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stream uri for Profile1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"uri_enc\", btoa(JSON.stringify({",
									"    \"StreamSetup\" : {",
									"        \"Stream\" : \"RTP-Unicast\",",
									"        \"Transport\" : {",
									"            \"Protocol\" : \"RTSP\"",
									"        }",
									"    },",
									"    \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token",
									"})));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/StreamUri?jsonObject={{uri_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"StreamUri"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{uri_enc}}",
									"description": "Base64 encoded json string"
								}
							]
						},
						"description": "Test steps:\n\n1\\. Get profile token by executing get profiles API\n\n2) Get Base 64 encoded output of below json input:\n{\n    \"StreamSetup\" : {\n        \"Stream\" : \"RTP-Unicast\",\n        \"Transport\" : {\n            \"Protocol\" : \"RTSP\"\n        }\n    },\n    \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token\n}\n\n3) Parse encoded output as parameters in API."
					},
					"response": []
				},
				{
					"name": "Get stream uri for Profile2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"uri_enc\", btoa(JSON.stringify({",
									"    \"StreamSetup\" : {",
									"        \"Stream\" : \"RTP-Unicast\",",
									"        \"Transport\" : {",
									"            \"Protocol\" : \"RTSP\"",
									"        }",
									"    },",
									"    \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[1].Token",
									"})));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/StreamUri?jsonObject={{uri_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"StreamUri"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{uri_enc}}",
									"description": "Base64 encoded json string"
								}
							]
						},
						"description": "Test steps:\n\n1\\. Get profile token by executing get profiles API\n\n2) Get Base 64 encoded output of below json input:\n{\n    \"StreamSetup\" : {\n        \"Stream\" : \"RTP-Unicast\",\n        \"Transport\" : {\n            \"Protocol\" : \"RTSP\"\n        }\n    },\n    \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token\n}\n\n3) Parse encoded output as parameters in API."
					},
					"response": []
				}
			]
		},
		{
			"name": "User Handling",
			"item": [
				{
					"name": "Get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/Users",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CreateUsers\": {\n        \"User\": [\n            {\n                \"Username\": \"Test\",\n                \"Password\" : \"Tes123456!\",\n                \"UserLevel\": \"User\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/CreateUsers",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"CreateUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Users\": {\n        \"User\": [\n            {\n                \"Username\": \"Test\",\n                \"Password\": \"Tes123456!\",\n                \"UserLevel\": \"Operator\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/Users",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"Users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DeleteUsers\": {\n        \"Username\": [\"Test\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DeleteUsers",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DeleteUsers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metadata Configuration",
			"item": [
				{
					"name": "Get metadata configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MetadataConfigurations",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MetadataConfigurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific metadata configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"metadata_enc\", btoa(JSON.stringify({",
									"    \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].MetadataConfiguration.Token",
									"})));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MetadataConfiguration?jsonObject={{metadata_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MetadataConfiguration"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{metadata_enc}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get compatible metadata configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"profile_enc\", btoa(JSON.stringify({",
									"   \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token",
									"})));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/CompatibleMetadataConfigurations?jsonObject={{profile_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"CompatibleMetadataConfigurations"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{profile_enc}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metadata configuration options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"",
									"pm.collectionVariables.set(\"mdoptions_enc\", btoa(JSON.stringify({",
									"   \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].MetadataConfiguration.Token,",
									"   \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token",
									"})));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MetadataConfigurationOptions?jsonObject={{mdoptions_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MetadataConfigurationOptions"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{mdoptions_enc}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add metadata configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"mdoptions_enc\", btoa(JSON.stringify({",
									"   \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].MetadataConfiguration.Token,",
									"   \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token",
									"})));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AddMetadataConfiguration\": {\n        \"ProfileToken\":  \"Profile2\",\n        \"ConfigurationToken\": \"MD_Config\"\n\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/AddMetadataConfiguration",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"AddMetadataConfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set metadata configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"",
									"pm.collectionVariables.set(\"mdoptions_enc\", btoa(JSON.stringify({",
									"   \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].MetadataConfiguration.Token,",
									"   \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[0].Token",
									"})));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"MetadataConfiguration\": {\n        \"Configuration\": {\n            \"Token\": \"MD_Config\",\n           \"UseCount\": 1\n            \n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MetadataConfiguration",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MetadataConfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove metadata configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"",
									"pm.collectionVariables.set(\"mdoptions_enc\", btoa(JSON.stringify({",
									"   \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].MetadataConfiguration.Token,",
									"   \"ProfileToken\" : pm.collectionVariables.get(\"profiles\")[1].Token",
									"})));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"RemoveMetadataConfiguration\": {\n        \"ProfileToken\": \"Profile2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/RemoveMetadataConfiguration",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"RemoveMetadataConfiguration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Video Encoder Configuration",
			"item": [
				{
					"name": "Get video encoder configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"videoencoder_enc\", btoa(JSON.stringify({",
									"    \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].VideoEncoderConfiguration.Token",
									"})));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/VideoEncoderConfiguration?jsonObject={{videoencoder_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"VideoEncoderConfiguration"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{videoencoder_enc}}",
									"description": "Base64 encoded json string"
								}
							]
						},
						"description": "Test steps:\n\n1\\. Get video encoder configuration token by executing get profiles API\n2. Update configuration_token env variable in postman with value retrieved in above step"
					},
					"response": []
				},
				{
					"name": "Get video encoder configuration options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"",
									"pm.collectionVariables.set(\"videoencoder_enc\", btoa(JSON.stringify({",
									"    \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].VideoEncoderConfiguration.Token",
									"})));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "/* Test steps\n1) Get video encoder configuration token by executing get profiles API\n2) Update configuration_token env variable in postman with value retrieved in above step\n*/",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/VideoEncoderConfigurationOptions?jsonObject={{videoencoder_enc}}",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"VideoEncoderConfigurationOptions"
							],
							"query": [
								{
									"key": "jsonObject",
									"value": "{{videoencoder_enc}}",
									"description": "Base64 encoded json string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set video encoder configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"let profiles = pm.collectionVariables.get(\"profiles\");",
									"if(!profiles || profiles.length == 0) {",
									"    postman.setNextRequest(\"Get profiles\");",
									"    return;",
									"}",
									"pm.collectionVariables.set(\"videoencoder_enc\", btoa(JSON.stringify({",
									"    \"ConfigurationToken\" : pm.collectionVariables.get(\"profiles\")[0].VideoEncoderConfiguration.Token",
									"})));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"VideoEncoderConfiguration\": {\n        \"Configuration\": {\n            \"Encoding\": \"H264\",\n            \"H264\": {\n                \"GovLength\": 20,\n                \"H264Profile\": \"Main\"\n            },\n            \"Resolution\": {\n                \"Height\": 1920,\n                \"Width\": 2560\n            },\n            \"SessionTimeout\": \"PT30M\",\n            \"Token\": \"VE_Config\",\n            \"UseCount\": 1\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/VideoEncoderConfiguration",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"VideoEncoderConfiguration"
							]
						},
						"description": "Test steps:\n\n1\\. Get video encoder configuration token by executing get profiles API\n2. Update configuration_token env variable in postman with value retrieved in above step"
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Configuration",
			"item": [
				{
					"name": "Get host name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/Hostname",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"Hostname"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set host name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Hostname\": {\n        \"Name\": \"My-test-Camera\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/Hostname",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"Hostname"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network interfaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkInterfaces",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkInterfaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set network interfaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkInterfaces\": {\n        \"InterfaceToken\": \"eth0\",\n        \"Enabled\": true,\n        \"NetworkInterface\": {\n            \"IPv4\": {\n                \"Enabled\": true,\n                \"DHCP\": true\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkInterfaces",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkInterfaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set network interfaces (rever to original)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkInterfaces\": {\n        \"InterfaceToken\": \"eth0\",\n        \"NetworkInterface\": {\n            \"IPv6\": {\n                \"Enabled\": false,\n                \"DHCP\": \"Auto\",\n                \"AcceptRouterAdvert\": false\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v2/device/name/{{camera_name}}/NetworkInterfaces",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v2",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkInterfaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network default gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkDefaultGateway",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkDefaultGateway"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set network default gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkDefaultGateway\": {\n        \"NetworkGateway\": {\n            \"IPv4Address\": \"192.168.4.2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkDefaultGateway",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkDefaultGateway"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network protocols",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkProtocols",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkProtocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set network protocols",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkProtocols\": {\n        \"NetworkProtocols\": [\n            {\n                \"Enabled\": false,\n                \"Name\": \"HTTPS\"\n            },\n            {\n                \"Enabled\": false,\n                \"Name\": \"RTSP\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkProtocols",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkProtocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set network protocols (revert back to original)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"NetworkProtocols\": {\n        \"NetworkProtocols\": [\n            {\n                \"Enabled\": true,\n                \"Name\": \"HTTPS\"\n            },\n            {\n                \"Enabled\": true,\n                \"Name\": \"RTSP\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/NetworkProtocols",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"NetworkProtocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DNS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DNS",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DNS"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set DNS- updating dhcp to false",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DNS\": {\n        \"FromDHCP\": false\n     \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DNS",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DNS"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set DNS- updating dhcp to true",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DNS\": {\n        \"FromDHCP\": true\n     \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DNS",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DNS"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Capabilities",
			"item": [
				{
					"name": "Get all camera capabilities Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/Capabilities",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"Capabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device service capabilities Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/DeviceCapabilities",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"DeviceCapabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get media service capabilities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/MediaCapabilities",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"MediaCapabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get imaging service capabilities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/ImagingCapabilities",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"ImagingCapabilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get  event service capabilities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{command_host}}:{{command_port}}/api/v3/device/name/{{camera_name}}/EventCapabilities",
							"protocol": "http",
							"host": [
								"{{command_host}}"
							],
							"port": "{{command_port}}",
							"path": [
								"api",
								"v3",
								"device",
								"name",
								"{{camera_name}}",
								"EventCapabilities"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "profile_enc",
			"value": ""
		},
		{
			"key": "ptz_enc",
			"value": ""
		},
		{
			"key": "node_enc",
			"value": ""
		},
		{
			"key": "videoencoder_enc",
			"value": ""
		},
		{
			"key": "uri_enc",
			"value": ""
		},
		{
			"key": "profiles",
			"value": ""
		},
		{
			"key": "metadata_enc",
			"value": ""
		},
		{
			"key": "mdoptions_enc",
			"value": ""
		}
	]
}