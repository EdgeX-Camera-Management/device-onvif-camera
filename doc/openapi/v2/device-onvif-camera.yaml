openapi: 3.0.0
info:
  title: EdgeX Onvif Device Service
  description: EdgeX Onvif Device Service REST APIs
  version: 2.2.0
servers:
- url: http://0.0.0.0:59882
tags:
- name: Network Configuration
- name: System Function
- name: Metadata Configuration
- name: Video Streaming
- name: Video Encoder Configuration
- name: User Handling
- name: Auto Discovery
- name: PTZ
- name: PTZ - Capabilities
- name: PTZ - Configuration
- name: PTZ - Actuation
- name: PTZ - Preset
- name: PTZ - Home Position
- name: PTZ - Auxiliary
- name: Event Handling
- name: Analytics
- name: Analytics - Profile Configuration
- name: Analytics - Modules
- name: Analytics - Rules
- name: Custom
  description: >-
    Custom commands outside of the ONVIF spec handled by the device service
    directly.
paths:
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Hostname:
    get:
      tags:
      - Network Configuration
      summary: Hostname
      description: |-
        This operation is used by an endpoint to get the hostname from a device. The device shall return its hostname configurations through the GetHostname command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetHostnameResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 6ad6d2d6-51af-4084-8a6a-952928942732
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: Hostname
                  origin: 1659655574277981200
                  readings:
                  - id: b8e4ba90-2aeb-4336-a5ca-923456cff383
                    origin: 1659655574277981200
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: Hostname
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      HostnameInformation:
                        FromDHCP: false
                        Name: hostname
        '400': &id001
          description: Request is in an invalid state
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400Example:
                  $ref: '#/components/examples/400Example'
        '404': &id002
          description: The requested resource does not exist
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404Example:
                  $ref: '#/components/examples/404Example'
        '423': &id003
          description: The device is locked (AdminState)
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                423Example:
                  $ref: '#/components/examples/423Example'
        '500': &id004
          description: An unexpected error occurred on the server
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500Example:
                  $ref: '#/components/examples/500Example'
        '503': &id005
          description: Service Unavailable
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                503Example:
                  $ref: '#/components/examples/503Example'
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetHostname
    put:
      tags:
      - Network Configuration
      summary: SetHostname
      description: |-
        This operation sets the hostname on a device. It shall be possible to set the device hostname configurations through the SetHostname command.  
        A device shall accept string formatted according to RFC 1123 section 2.1 or alternatively to RFC 952, other string shall be considered as invalid strings.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Hostname:
                  $ref: '#/components/schemas/device_SetHostname'
              required:
              - Hostname
              type: object
            example:
              Hostname:
                Name: localhost555
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': &id006
          description: OK
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetHostname
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DNS:
    get:
      tags:
      - Network Configuration
      summary: DNS
      description: |-
        This operation gets the DNS settings from a device. The device shall return its DNS configurations through the GetDNS command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetDNSResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: d2d2541f-2feb-490f-bf89-b7407d3078d3
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: DNS
                  origin: 1659671999397808400
                  readings:
                  - id: 3ad48fbe-1e98-4c90-a26e-f83a391c4d8c
                    origin: 1659671999397808400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: DNS
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      DNSInformation: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetDNS
    put:
      tags:
      - Network Configuration
      summary: SetDNS
      description: |-
        This operation sets the DNS settings on a device. It shall be possible to set the device DNS configurations through the SetDNS command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DNS:
                  $ref: '#/components/schemas/device_SetDNS'
              required:
              - DNS
              type: object
            example:
              DNS:
                FromDHCP: true
                DNSManual:
                  Type: IPv4
                  IPv4Address: 192.168.12.1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetDNS
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/NetworkInterfaces:
    get:
      tags:
      - Network Configuration
      summary: NetworkInterfaces
      description: |-
        This operation gets the network interface configuration from a device. The device shall support return of network interface configuration settings as defined by the NetworkInterface type through the GetNetworkInterfaces command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetNetworkInterfacesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: acc3a74d-852a-4c0c-bf31-dbc06d8a0782
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: NetworkInterfaces
                  origin: 1659655709817960400
                  readings:
                  - id: 74571fe4-731a-4925-99eb-7d4c317834f6
                    origin: 1659655709817960400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkInterfaces
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkInterfaces:
                        Enabled: true
                        IPv4:
                          Config:
                            DHCP: false
                            Manual:
                              Address: 10.0.0.195
                              PrefixLength: 24
                          Enabled: true
                        Info:
                          HwAddress: 10:27:F5:EA:88:F4
                          MTU: 1500
                          Name: eth0
                        Token: eth0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetNetworkInterfaces
    put:
      tags:
      - Network Configuration
      summary: SetNetworkInterfaces
      description: |-
        This operation sets the network interface configuration on a device. The device shall support network configuration of supported network interfaces through the SetNetworkInterfaces command.

        For interoperability with a client unaware of the IEEE 802.11 extension a device shall retain its IEEE 802.11 configuration if the IEEE 802.11 configuration element isn’t present in the request.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                NetworkInterfaces:
                  $ref: '#/components/schemas/device_SetNetworkInterfaces'
              required:
              - NetworkInterfaces
              type: object
            example:
              NetworkInterfaces:
                InterfaceToken: eth0
                NetworkInterface:
                  Enabled: true
                  IPv4:
                    DHCP: true
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetNetworkInterfaces
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/NetworkProtocols:
    get:
      tags:
      - Network Configuration
      summary: NetworkProtocols
      description: |-
        This operation gets defined network protocols from a device. The device shall support the GetNetworkProtocols command returning configured network protocols.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetNetworkProtocolsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 193b3677-23c8-4d89-852e-73a1aabf445e
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: NetworkProtocols
                  origin: 1659671976670370300
                  readings:
                  - id: d3a47ec4-3b43-413a-9a67-42f54487cfa5
                    origin: 1659671976670370300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkProtocols
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkProtocols:
                      - Enabled: true
                        Name: HTTPS
                        Port: 443
                      - Enabled: true
                        Name: RTSP
                        Port: 554
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetNetworkProtocols
    put:
      tags:
      - Network Configuration
      summary: SetNetworkProtocols
      description: |-
        This operation configures defined network protocols on a device. The device shall support configuration of defined network protocols through the SetNetworkProtocols command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                NetworkProtocols:
                  $ref: '#/components/schemas/device_SetNetworkProtocols'
              required:
              - NetworkProtocols
              type: object
            example:
              NetworkProtocols:
                NetworkProtocols:
                - Name: HTTP
                  Enabled: true
                  Port: 2020
                - Name: HTTPS
                  Enabled: false
                  Port: 443
                - Name: RTSP
                  Enabled: true
                  Port: 554
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetNetworkProtocols
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/NetworkDefaultGateway:
    get:
      tags:
      - Network Configuration
      summary: NetworkDefaultGateway
      description: |-
        This operation gets the default gateway settings from a device. The device shall support the GetNetworkDefaultGateway command returning configured default gateway address(es).

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetNetworkDefaultGatewayResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 78915210-fab0-4018-a8ed-72f793c2cbc7
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: NetworkDefaultGateway
                  origin: 1659671987813255200
                  readings:
                  - id: c348128d-0c51-4470-a978-b431302906a0
                    origin: 1659671987813255200
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkDefaultGateway
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkGateway: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetNetworkDefaultGateway
    put:
      tags:
      - Network Configuration
      summary: SetNetworkDefaultGateway
      description: |-
        This operation sets the default gateway settings on a device. The device shall support configuration of default gateway through the SetNetworkDefaultGateway command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                NetworkDefaultGateway:
                  $ref: '#/components/schemas/device_SetNetworkDefaultGateway'
              required:
              - NetworkDefaultGateway
              type: object
            example:
              NetworkDefaultGateway:
                IPv4Address: 192.168.12.1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetNetworkDefaultGateway
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/NetworkConfiguration:
    get:
      tags:
      - Network Configuration
      summary: NetworkConfiguration
      description: >-
        Used to retrieve network resources for a device such as Hostname, DNS,
        NetworkInterfaces, NetworkProtocols and NetworkDefaultGateway.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: b34fe9d1-78f9-4b49-961b-80a252e084c4
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: NetworkConfiguration
                  origin: 1659656577804929300
                  readings:
                  - id: 67e318f5-4426-48ff-8235-4a2471e47baf
                    origin: 1659656577804929300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: Hostname
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      HostnameInformation:
                        FromDHCP: false
                        Name: hostname
                  - id: 76cfd2b5-f178-4d16-88d1-6b04f129a867
                    origin: 1659656577804929300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: DNS
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      DNSInformation: {}
                  - id: 301b79ab-c92d-4a3f-9776-9a71f6c3c340
                    origin: 1659656577804929300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkInterfaces
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkInterfaces:
                        Enabled: true
                        IPv4:
                          Config:
                            DHCP: false
                            Manual:
                              Address: 10.0.0.188
                              PrefixLength: 24
                          Enabled: true
                        Info:
                          HwAddress: 10:27:F5:EA:88:F4
                          MTU: 1500
                          Name: eth0
                        Token: eth0
                  - id: cc1d5230-06a8-4515-822e-187ba07d0efc
                    origin: 1659656577804929300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkProtocols
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkProtocols:
                      - Enabled: true
                        Name: HTTPS
                        Port: 443
                      - Enabled: true
                        Name: RTSP
                        Port: 554
                  - id: 81f9c4e6-1cfd-487a-a05b-b8ea5b39ffcf
                    origin: 1659656577804929300
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: NetworkDefaultGateway
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      NetworkGateway: {}
    put:
      tags:
      - Network Configuration
      summary: SetNetworkConfiguration
      description: >-
        Used to configure network resources for a device such as Hostname, DNS,
        NetworkInterfaces, NetworkProtocols and NetworkDefaultGateway.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Hostname:
                  Name: localhost
                DNS:
                  FromDHCP: false
                  DNSManual:
                    Type: IPv4
                    IPv4Address: 192.168.12.1
                NetworkInterfaces:
                  InterfaceToken: eth0
                  NetworkInterface:
                    Enabled: true
                    IPv4:
                      DHCP: false
                NetworkProtocols:
                  NetworkProtocols:
                  - Name: HTTP
                    Enabled: true
                    Port: 80
                NetworkDefaultGateway:
                  IPv4Address: 192.168.12.1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                statusCode: 200
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DeviceInformation:
    get:
      tags:
      - System Function
      summary: DeviceInformation
      description: |-
        This operation gets basic device information from the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetDeviceInformationResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: a025e1b1-7e2b-4db8-95b6-7dac978e9c97
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: DeviceInformation
                  origin: 1659672857568971800
                  readings:
                  - id: 3039ffbc-165a-46ef-849b-95c7df9aacfa
                    origin: 1659672857568971800
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: DeviceInformation
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      FirmwareVersion: 1.1.16 Build 211209 Rel.37726n(4555)
                      HardwareId: '1.0'
                      Manufacturer: TP-Link
                      Model: C200
                      SerialNumber: 00c20000
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetDeviceInformation
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SystemDateAndTime:
    get:
      tags:
      - System Function
      summary: SystemDateAndTime
      description: |-
        This operation gets the device system date and time. The device shall support the return of the daylight saving setting and of the manual system date and time (if applicable) or indication of NTP time (if applicable) through the GetSystemDateAndTime command.

        A device shall provide the UTCDateTime information.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetSystemDateAndTimeResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: da6f552e-e4b3-4d75-a2ce-989745b8ef7b
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: SystemDateAndTime
                  origin: 1659672865881317600
                  readings:
                  - id: aa61a541-beb5-4be0-bb7a-625ce60a980e
                    origin: 1659672865881317600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: SystemDateAndTime
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      SystemDateAndTime:
                        DateTimeType: NTP
                        DaylightSavings: true
                        Extension: ''
                        LocalDateTime:
                          Date:
                            Month: '8'
                            Year: '2022'
                            Day: '11'
                          Time:
                            Hour: '21'
                            Minute: '14'
                            Second: '25'
                        TimeZone:
                          TZ: >
                            GMT+08:00DST+07:00,M3.2.0/02:00:00,M11.1.0/02:00:00
                        UTCDateTime:
                          Date:
                            Month: '8'
                            Year: '2022'
                            Day: '11'
                          Time:
                            Hour: '4'
                            Minute: '14'
                            Second: '25'
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetSystemDateAndTime
    put:
      tags:
      - System Function
      summary: SetSystemDateAndTime
      description: |-
        This operation sets the device system date and time. The device shall support the configuration of the daylight saving setting and of the manual system date and time (if applicable) or indication of NTP time (if applicable) through the SetSystemDateAndTime command.

        If system time and date are set manually, the client shall include UTCDateTime in the request.

        A TimeZone token which is not formed according to the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.

        The DayLightSavings flag should be set to true to activate any DST settings of the TimeZone string. Clear the DayLightSavings flag if the DST portion of the TimeZone settings should be ignored.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ | Tapo does not support setting the `DaylightSavings` field to `false`. Regardless of the setting, the camera will always use daylight savings time. |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SystemDateAndTime:
                  $ref: '#/components/schemas/device_SetSystemDateAndTime'
              required:
              - SystemDateAndTime
              type: object
            example:
              SystemDateAndTime:
                DateTimeType: Manual
                DaylightSavings: false
                UTCDateTime:
                  Date:
                    Month: 12
                    Year: 2021
                    Day: 11
                  Time:
                    Hour: 5
                    Minute: 48
                    Second: 20
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetSystemDateAndTime
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SetSystemFactoryDefault:
    put:
      tags:
      - System Function
      summary: SetSystemFactoryDefault
      description: |-
        This operation reloads the parameters on the device to their factory default values.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SetSystemFactoryDefault:
                  $ref: '#/components/schemas/device_SetSystemFactoryDefault'
              required:
              - SetSystemFactoryDefault
              type: object
            example:
              SetSystemFactoryDefault:
                FactoryDefault: Soft
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetSystemFactoryDefault
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RebootNeeded:
    get:
      tags:
      - System Function
      summary: RebootNeeded
      description: >-
        Indicates whether or not a reboot is required after configuration
        updates.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolEventResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: cb3b3a49-86e4-44e3-b2a0-426b08168ae1
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: RebootNeeded
                  origin: 1659672882772484400
                  readings:
                  - id: f56f48df-d664-4179-98d1-abcb496f07bc
                    origin: 1659672882772484400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: RebootNeeded
                    profileName: onvif-camera
                    valueType: Bool
                    value: 'false'
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SystemReboot:
    put:
      tags:
      - System Function
      summary: SystemReboot
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SystemReboot:
                  $ref: '#/components/schemas/device_SystemReboot'
              required:
              - SystemReboot
              type: object
            example:
              SystemReboot: {}
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SystemReboot
      description: This operation reboots the device.
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/MetadataConfigurations:
    get:
      tags:
      - Metadata Configuration
      summary: MetadataConfigurations
      description: |-
        This operation lists all existing metadata configurations. The client need not know anything apriori about the metadata in order to use the command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetMetadataConfigurationsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 1acba723-b1b1-4790-8e80-9d554cacaedc
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: MetadataConfigurations
                  origin: 1659659180814799600
                  readings:
                  - id: 8c59a3a8-401b-4e18-8af5-9a98efe7f410
                    origin: 1659659180814799600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: MetadataConfigurations
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Configurations: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetMetadataConfigurations
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/MetadataConfiguration:
    get:
      tags:
      - Metadata Configuration
      summary: MetadataConfiguration
      description: |-
        The GetMetadataConfiguration command fetches the metadata configuration if the metadata token is known.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{EDGEX_MEDIA_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Token of the requested metadata configuration.


          **Schema Reference:** [media_GetMetadataConfiguration](#media_GetMetadataConfiguration)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetMetadataConfigurationResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 53480499-ece4-4437-b795-0ff4f57a564a
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                  profileName: onvif-camera
                  sourceName: MetadataConfiguration
                  origin: 1663974689815368400
                  readings:
                  - id: b6cda316-6a50-4990-8279-e2777be95c79
                    origin: 1663974689815368400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                    resourceName: MetadataConfiguration
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Configuration: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetMetadataConfiguration
    put:
      tags:
      - Metadata Configuration
      summary: SetMetadataConfiguration
      description: |-
        This operation modifies a metadata configuration. The ForcePersistence flag indicates if the changes shall remain after reboot of the device. Changes in the Multicast settings shall always be persistent. Running streams using this configuration may be updated immediately according to the new settings. The changes are not guaranteed to take effect unless the client requests a new stream URI and restarts any affected streams. NVC methods for changing a running stream are out of scope for this specification.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                MetadataConfiguration:
                  $ref: '#/components/schemas/media_SetMetadataConfiguration'
              required:
              - MetadataConfiguration
              type: object
            example:
              MetadataConfiguration:
                ForcePersistence: true
                Configuration:
                  token: '{{MEDIA_CONFIG_TOKEN}}'
                  Analytics: true
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.SetMetadataConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/CompatibleMetadataConfigurations:
    get:
      tags:
      - Metadata Configuration
      summary: CompatibleMetadataConfigurations
      description: |-
        This operation requests all the metadata configurations of the device that are compatible with a certain media profile. Each of the returned configurations shall be a valid input parameter for the AddMetadataConfiguration command on the media profile. The result varies depending on the capabilities, configurations and settings in the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{EDGEX_MEDIA_PROFILE_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ProfileToken": "<ProfileToken>"
          }
          ```

          **Field Descriptions:**
            - **ProfileToken** _[string]_
          <br/>    Contains the token of an existing media profile the configurations shall be compatible with.


          **Schema Reference:** [media_GetCompatibleMetadataConfigurations](#media_GetCompatibleMetadataConfigurations)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetCompatibleMetadataConfigurationsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 410b5658-82d9-488c-a5c4-c69f0ff6d273
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: CompatibleMetadataConfigurations
                  origin: 1659659188300470500
                  readings:
                  - id: 86aa4298-c8ee-4c74-afc9-73104bb3cd11
                    origin: 1659659188300470500
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: CompatibleMetadataConfigurations
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Configurations: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetCompatibleMetadataConfigurations
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/MetadataConfigurationOptions:
    get:
      tags:
      - Metadata Configuration
      summary: MetadataConfigurationOptions
      description: |-
        This operation returns the available options (supported values and ranges for metadata configuration parameters) for changing the metadata configuration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{EDGEX_MEDIA_PROFILE_AND_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>",
            "ProfileToken": "<ProfileToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Optional metadata configuration token that specifies an existing configuration that the options are intended for.
            - **ProfileToken** _[string]_
          <br/>    Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.


          **Schema Reference:** [media_GetMetadataConfigurationOptions](#media_GetMetadataConfigurationOptions)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetMetadataConfigurationOptionsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: f296e8b5-707f-4e66-9388-918821b83a19
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: MetadataConfigurationOptions
                  origin: 1659659194429862100
                  readings:
                  - id: f8efa15a-612d-4532-b40b-4e895cecb3bd
                    origin: 1659659194429862100
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: MetadataConfigurationOptions
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Options: {}
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetMetadataConfigurationOptions
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AddMetadataConfiguration:
    put:
      tags:
      - Metadata Configuration
      summary: AddMetadataConfiguration
      description: |-
        This operation adds a Metadata configuration to an existing media profile. If a configuration exists in the media profile, it will be replaced. The change shall be persistent. Adding a MetadataConfiguration to a Profile means that streams using that profile contain metadata. Metadata can consist of events, PTZ status, and/or video analytics data.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AddMetadataConfiguration:
                  $ref: '#/components/schemas/media_AddMetadataConfiguration'
              required:
              - AddMetadataConfiguration
              type: object
            example:
              AddMetadataConfiguration:
                ProfileToken: '{{MEDIA_PROFILE}}'
                ConfigurationToken: '{{MEDIA_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.AddMetadataConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RemoveMetadataConfiguration:
    put:
      tags:
      - Metadata Configuration
      summary: RemoveMetadataConfiguration
      description: |-
        This operation removes a MetadataConfiguration from an existing media profile. If the media profile does not contain a MetadataConfiguration, the operation has no effect. The removal shall be persistent.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RemoveMetadataConfiguration:
                  $ref: '#/components/schemas/media_RemoveMetadataConfiguration'
              required:
              - RemoveMetadataConfiguration
              type: object
            example:
              RemoveMetadataConfiguration:
                ProfileToken: '{{MEDIA_PROFILE}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.RemoveMetadataConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Profiles:
    get:
      tags:
      - Video Streaming
      summary: Profiles
      description: |-
        Any endpoint can ask for the existing media profiles of a device using the GetProfiles command. Pre-configured or dynamically configured profiles can be retrieved using this command. This command lists all configured profiles in a device. The client does not need to know the media profile in order to use the command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetProfilesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: e6560b52-1952-4d66-9f53-3cf27d48b3c0
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: Profiles
                  origin: 1659656314715442700
                  readings:
                  - id: 5c7bc03c-308f-4b2c-8bc9-2e59da7d6f65
                    origin: 1659656314715442700
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: Profiles
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Profiles:
                      - AudioEncoderConfiguration:
                          Bitrate: 131072
                          Encoding: G711
                          Multicast:
                            Address:
                              IPv4Address: 0.0.0.0
                              Type: IPv4
                            AutoStart: false
                            Port: 0
                            TTL: 0
                          Name: AudioEncoder_1
                          SampleRate: 8000
                          SessionTimeout: PT0H1M5S
                          Token: microphone
                          UseCount: 2
                        AudioSourceConfiguration:
                          Name: AudioSourceConfig
                          SourceToken: raw_as1
                          Token: asconf
                          UseCount: 2
                        Extension:
                        Fixed: true
                        MetadataConfiguration:
                        Name: mainStream
                        PTZConfiguration:
                          DefaultAbsolutePantTiltPositionSpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                          DefaultContinuousPanTiltVelocitySpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                          DefaultPTZSpeed: {}
                          DefaultPTZTimeout: PT0H0M20S
                          DefaultRelativePanTiltTranslationSpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                          PanTiltLimits:
                            Range:
                              URI: ''
                              XRange:
                                Max: 170
                                Min: -170
                              YRange:
                                Max: 35
                                Min: -32
                          Token: PTZConfiguration0
                        Token: profile_1
                        VideoAnalyticsConfiguration:
                          AnalyticsEngineConfiguration:
                            AnalyticsModule:
                            - Name: MyCellMotionModule
                              Parameters:
                                ElementItem:
                                - Name: Layout
                                SimpleItem:
                                - Name: Sensitivity
                                  Value: medium
                                - Name: Enabled
                                  Value: off
                              Type: tt:CellMotionEngine
                            - Name: MyTamperDetecModule
                              Parameters:
                                SimpleItem:
                                - Name: Sensitivity
                                - Name: Enabled
                              Type: tt:TamperEngine
                          Name: VideoAnalyticsName
                          RuleEngineConfiguration:
                            Rule:
                              Name: MyTamperDetectorRule
                              Parameters:
                                SimpleItem:
                                - Name: ActiveCells
                                  Value: 0P8A8A==
                                - Name: MinCount
                                  Value: '5'
                                - Name: AlarmOnDelay
                                  Value: '1000'
                                - Name: AlarmOffDelay
                                  Value: '1000'
                              Type: tt:TamperDetector
                          Token: VideoAnalyticsToken
                          UseCount: 2
                        VideoEncoderConfiguration:
                          Encoding: H264
                          H264:
                            GovLength: 25
                            H264Profile: Main
                          Multicast:
                            Address:
                              IPv4Address: 0.0.0.0
                              Type: IPv4
                            AutoStart: false
                            Port: 0
                            TTL: 0
                          Name: VideoEncoder_1
                          Quality: 3
                          RateControl:
                            BitrateLimit: 1024
                            EncodingInterval: 1
                            FrameRateLimit: 15
                          Resolution:
                            Height: 1080
                            Width: 1920
                          SessionTimeout: PT0H1M5S
                          Token: main
                          UseCount: 1
                        VideoSourceConfiguration:
                          Bounds:
                            Height: 720
                            Width: 1280
                            X: 0
                            Y: 0
                          Extension:
                          Name: VideoSourceConfig
                          SourceToken: raw_vs1
                          Token: vsconf
                          UseCount: 2
                          ViewMode: ''
                      - AudioEncoderConfiguration:
                          Bitrate: 131072
                          Encoding: G711
                          Multicast:
                            Address:
                              IPv4Address: 0.0.0.0
                              Type: IPv4
                            AutoStart: false
                            Port: 0
                            TTL: 0
                          Name: AudioEncoder_1
                          SampleRate: 8000
                          SessionTimeout: PT0H1M5S
                          Token: microphone
                          UseCount: 2
                        AudioSourceConfiguration:
                          Name: AudioSourceConfig
                          SourceToken: raw_as1
                          Token: asconf
                          UseCount: 2
                        Extension:
                        Fixed: true
                        MetadataConfiguration:
                        Name: minorStream
                        PTZConfiguration:
                          DefaultAbsolutePantTiltPositionSpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                          DefaultContinuousPanTiltVelocitySpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                          DefaultPTZSpeed: {}
                          DefaultPTZTimeout: PT0H0M20S
                          DefaultRelativePanTiltTranslationSpace: >-
                            http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                          PanTiltLimits:
                            Range:
                              URI: ''
                              XRange:
                                Max: 170
                                Min: -170
                              YRange:
                                Max: 35
                                Min: -32
                          Token: PTZConfiguration0
                        Token: profile_2
                        VideoAnalyticsConfiguration:
                          AnalyticsEngineConfiguration:
                            AnalyticsModule:
                            - Name: MyCellMotionModule
                              Parameters:
                                ElementItem:
                                - Name: Layout
                                SimpleItem:
                                - Name: Sensitivity
                                  Value: medium
                                - Name: Enabled
                                  Value: off
                              Type: tt:CellMotionEngine
                            - Name: MyTamperDetecModule
                              Parameters:
                                SimpleItem:
                                - Name: Sensitivity
                                - Name: Enabled
                              Type: tt:TamperEngine
                          Name: VideoAnalyticsName
                          RuleEngineConfiguration:
                            Rule:
                              Name: MyTamperDetectorRule
                              Parameters:
                                SimpleItem:
                                - Name: ActiveCells
                                  Value: 0P8A8A==
                                - Name: MinCount
                                  Value: '5'
                                - Name: AlarmOnDelay
                                  Value: '1000'
                                - Name: AlarmOffDelay
                                  Value: '1000'
                              Type: tt:TamperDetector
                          Token: VideoAnalyticsToken
                          UseCount: 2
                        VideoEncoderConfiguration:
                          Encoding: H264
                          H264:
                            GovLength: 25
                            H264Profile: Main
                          Multicast:
                            Address:
                              IPv4Address: 0.0.0.0
                              Type: IPv4
                            AutoStart: false
                            Port: 0
                            TTL: 0
                          Name: VideoEncoder_2
                          Quality: 3
                          RateControl:
                            BitrateLimit: 256
                            EncodingInterval: 1
                            FrameRateLimit: 15
                          Resolution:
                            Height: 360
                            Width: 640
                          SessionTimeout: PT0H1M5S
                          Token: minor
                          UseCount: 1
                        VideoSourceConfiguration:
                          Bounds:
                            Height: 720
                            Width: 1280
                            X: 0
                            Y: 0
                          Extension:
                          Name: VideoSourceConfig
                          SourceToken: raw_vs1
                          Token: vsconf
                          UseCount: 2
                          ViewMode: ''
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetProfiles
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/StreamUri:
    get:
      tags:
      - Video Streaming
      summary: StreamUri
      description: |-
        This operation requests a URI that can be used to initiate a live media stream using RTSP as the control protocol. The returned URI shall remain valid indefinitely even if the profile is changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S).

        The correct syntax for the StreamSetup element for these media stream setups defined in 5.1.1 of the streaming specification are as follows:  
        RTP unicast over UDP: StreamType = "RTP_unicast", TransportProtocol = "UDP"  
        RTP over RTSP over HTTP over TCP: StreamType = "RTP_unicast", TransportProtocol = "HTTP"  
        RTP over RTSP over TCP: StreamType = "RTP_unicast", TransportProtocol = "RTSP"

        If a multicast stream is requested at least one of VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration shall have a valid multicast setting.

        For full compatibility with other ONVIF services a device should not generate Uris longer than 128 octets.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ProfileToken": "<ProfileToken>",
            "StreamSetup": {
              "Stream": "RTP-Unicast|RTP-Multicast",
              "Transport": {
                "Protocol": "UDP|TCP|RTSP|HTTP",
                "Tunnel": { $ref: onvif_Transport }
              }
            }
          }
          ```

          **Field Descriptions:**
            - **ProfileToken** _[string]_
          <br/>    The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
            - **StreamSetup** _[object]_
          <br/>    Stream Setup that should be used with the uri
              - **Stream** _[string]_
          <br/>      Defines if a multicast or unicast stream is requested
          <br/>      _Enum: ['RTP-Unicast', 'RTP-Multicast']_
              - **Transport** _[object]_
                - **Protocol** _[string]_
          <br/>        Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
          <br/>        _Enum: ['UDP', 'TCP', 'RTSP', 'HTTP']_
                - **Tunnel** _[Recursive object of type [onvif_Transport](#onvif_Transport)]_
          <br/>        Optional element to describe further tunnel options. This element is normally not needed


          **Schema Reference:** [media_GetStreamUri](#media_GetStreamUri)

          **Example:**<br/>
          ```json
          {"ProfileToken":"profile_1"}
          ```
        example: '{{EDGEX_MEDIA_PROFILE_BASE64}}'
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetStreamUriResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 0ef64d9b-ba26-49a9-9a9f-5ec6f7b47190
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: StreamUri
                  origin: 1659656323588827000
                  readings:
                  - id: 255085ba-4399-489d-aa34-cab5e1379281
                    origin: 1659656323588827000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: StreamUri
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      MediaUri:
                        InvalidAfterConnect: false
                        InvalidAfterReboot: false
                        Timeout: PT0H0M2S
                        Uri: rtsp://10.0.0.188:554/stream1
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetStreamUri
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Snapshot:
    get:
      tags:
      - Video Streaming
      summary: Snapshot
      description: |-
        This request returns a snapshot of the video stream at the time the command is given.

        It is returned in a binary format.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ | You must use `Digest Auth` or `Both` as the Auth-Mode in order for this to work. |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinaryEventResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 5fdf593f-2a92-4a71-b08c-791d7a27fdff
                  deviceName: Intel-SimCamera-003caffe-6392-4bb2-a5a4-f027d2e89ee1
                  profileName: onvif-camera
                  sourceName: Snapshot
                  origin: 1665415500727830500
                  readings:
                  - id: d04a9dad-feb9-4099-a524-8a4b4cf2cc37
                    origin: 1665415500727830500
                    deviceName: Intel-SimCamera-003caffe-6392-4bb2-a5a4-f027d2e89ee1
                    resourceName: Snapshot
                    profileName: onvif-camera
                    valueType: Binary
                    binaryValue: >-
                      /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACAAKADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzGwiBtoGx/wAs1/kK0BGPSotPH+g23/XFP5CreKxOyOwxVqTYuOlAWn7eKQFd1VQDtH3hUgtoz1QUsq/u2PoM1PikBCLWL+4KelkhOQSAOp3dKoX+sQWalVO+X0HasB9bumOfMP0oDmR2T6c/klt/4d/5VRvNOkhxvQrkcblH4/rmsaz8TT25bzP3qMCNp7Z9K3IvGcU0C211F5kROTnG4dOh7dKYXTMPysXeMV0MKgDpVC4+xTXiy2QkMXPDNuI4rRgGcUBYsqgFSgUiLUoFMmwzbU8a0wLzVmMAimMlij713+h2a2lhEpX52G5vxrj9Nthc3kUJGQx5HtXoUaYFBUELIgYZ2ivLviHKJ47tAoxDAyj8ia9TkkWGF5HOFUc15H4oJm03UZW5LQyH9DTiKo9DmdPQ/YbbH/PFP5CrgWoNNP8AxLbX/rin8hVwVIR2GBacFp4UU8LSAryL8hqrqF4LTTTICN54XNaEi/Ka5LXpi8kcfZF6e5oAxXcscmoy1KetMaqSMGLuGacGqIU8A02gNK0vWhTAJByDXX6bMLiFXXvXBxiur8NSMZBGx+X0rKRvTd3Y6VBUyjirM1uoCOg4bP5j/IqMJirTHKNhgFSxjmgJTo1IamSdL4Xh3X5fH3Vrs8Yrl/Csf7yZ/Yf1rqyKGaIyddlMemOF43naa8419c6HqJx/y7Sf+gmvQPExItIVHQuc/lXB6+MeH9SP/TtJ/wCgmtYGFU5jTVH9mWn/AFxT+Qq2FqjppP8AZ1qP+mKfyFaS9KxNI7ABTgKUCngDFICMjiuG1cEXsoPrXdtiuP8AEUW25V/7wNBMjnj1ptPbrTcc1Zix8MZedR2zzVuWEKpUDBBp1lDj5z+FWbiA7t46GspT1OmnT0uVbOHfLg9K9G0Lw8xtYLuAr5chYZZuflxk1wtpFtkz2r03w5K7aBdRXczrHbyRNGuBwH3A4+vH6UblU9GdHe2sP2Nx5iBtxK57np/9euaxTjfSSjBOBTQaqBdRp7CgU9Rg01aeOtUYnV+FjzN9BXUiuS8Ln/SWX1WuvUc0MtGJ4nQ/Z7Y44yf6VwfiEY8P6l/17Sf+gmvR/ESb9MiOORJ/MH/CvP8AxGn/ABT2pHt9lk/9BNbwOeocPp0MzWFqwdR+5T+Qq4ILr+8lJpqj+zbP/rhH/wCg1eVaxNY7FURXX95Kf9nu/wC+lWwKkAqWhmU7XKnBWsvWIxJYuzD5lwRXTyRFkIUZasPVrO5Ns6LBISeOmR+lAmjidhJp6QMx6VrLpk0Ry8R/KmPHtbGMVnKdg5CONdiYFWuGhwagqzEm5BWL1N4qxNZoN4wK9C1R/M0jSQEVWNth2A5faxVc/QAVwtpGVbPpXpviH+zrTR9Ks1niFxDHlgvcNz/P+daxYmjnIweKsqKbGqkDBzU6rWyMhB0p69aAlSpHVNEm1oD7L+L3OK7pBXnunnyriJ/Rga9CRuhpFplTWofM05sdVIavPfEq48Nap/16S/8AoBr064QTwPGf4gRXm/iZMeGtVyOlpLn/AL5NaQdkY1Fc4fTR/wASyz/64R/+gitFU4qrpUQ/sqyZ8qot48+v3RVpbiVFkiixhxg5QE/gSMj8KzNI7DguFLZGB1yRU9ncWRLLc7xgfK688+mPSs1oHbr+tK6i3i3NwPWpGaUVxam4wqMAOjMe/wBKW8vbSGM+dIq56AnrXPPeSSf8e2UTvIR/IUiwRiOS6nbeQPvSck0mxsklubedW8mVW9s1nOFOeBVS65BuYE8tg33R3FSRP5ihgeDUNDI3t1ZvkGCe1WLa3YcEVNboplBIq/GirIDjjvUuJdN62Io4SozViOEzq4X74rUisEnjPkgucZwAc04RQ2MrJEfMZ12yHHAPfFZ6nZaJjQve2hyrnGehGQa7BrcMsUsQIiliWQE+pHI/A5H4VkSxqyHI6dvSum0TbqPh2W3zmeyJdB3MZ64+h5/GtoHNWguhnhcdadkZ4pWpoHNanMWYeor0G1ffBG2eqivPYuldxob79PXnOKBo0+1cL42h8rQ9ZHrZyn/xw13ijNcj4/hx4c1WT1sZh+SGriRI820qEyaZp/p9mj/9BFX/ALKELEjHyk1Z0qK3g8M6bPMQo+yQkk+6CqNzJc3zYhR0i6Db94/X0qTSOxBcXKR/u41MkvoOg+pqolpNeEGYb8fgo/DvWpDpSR7TIM8Z254/+vV4g8jtxxQBhLZbPv8AJxj2rO1k+UkcC/Vh/KukkT94KwdcXzbmCJRl8HP41IGBGXkcKo9eKfYj9y6n7ytW9Y6X9nUtImZT+lZWwWepTQkYWTFS0ImgilyCBVxGYfeHNWEgCqAKUw07DLNrfvAwaGRo3HQqcVNJ4j1JeWuBKAc/vYlfH0yKzfLxUU/EJpWK5mbNv4kt7ydY9StIgrHDS267Hx/ujg/lWnaXn/CO67b3sJM9jJkpIoIEsZ4I+o9PUVwg4OeldZ4d1GC7h/si+ZVhIzDKesT+v0PQ/wD1qaQc76nS3doslst/asj28nQK2Sh9D+uKoVZ0OO7sdSksJ4d0E64kiZlyfQqSeTyDx1pLu0ksrh4ZR8ynGexHqKohjI+ldd4ZkzbyR+hBrkYq6Xw04W4ZP7woBHVKOK5vx9Hu8Fas392zm/8AQDXTAVheN03+BtcA6ixmP/jhoTJkeZeHLO717TtOjJKWsFtEq8dwgGa6+TSI7WFYoo8d/c1ifDS8M1ra2RXIS3VgfbA6/mK7u5T94D6AD880zWOxxU0Oxm44BqnIPmf6VuXsWC59WNY7rjf+FANFJxjrWNEq3XiBuMiPp9f8mtq6bylZj0GKo+H7cOs923LSNwfYf/XzQKxcljwM4rkNfQpepMBkcV2tyMRmuU1yJpIjjtzQFjT2DaCPTNMJpdOzLpcUjctt5PrSN1pNA0Rmqs/3TVo1Vn+6akCi9EZ/eDmnPUaffBpCO80u7l1fTWtnAluI1zbydHXH8Oe4PTnuRWvaX8eu2yQ3Mu27hG1JG4Dj0Y/ng/nWH4UMQdAW2kNuVj0Hrn/Pb61P4gtRo2us8OPKb54+OxP9Dx+FaDZfMTRMVdSpBxg1q6LKIr6LJwCcU2yceIbMTmBI5EGxpI3ySccbl9Kr2hMcqHuDQQeg1i+M/wDkR9e/7B8//otq2QQyhhyCMg1jeMv+RH1//sHT/wDotqhEyPK/BVzNptnZ6pAhkighjS6XuFIHP0+6fqK9ZiCXUMkqOGVgpUjuMZz+teWeE3XTH0l35tru0ijnB6cxjr7cg13VnIfDepCwlY/2bdHNu78+W3dCfx4qzaOwavCqwu4HaudnGE3Y9K7PVYF+zyrjI25FchIM24GOQcH8KCjn9dfZa3PbGz9RV7TrT7JYRRbcYHP1qjrdu1zfQQJ/y3Khh64P+Ga2ieKDMqXY+Suc1FC6sAOororr7hrHukySfagaZR0K7zpzI3WJsEexq64RvmQ9e1ZGiyiLUrq2b+Mfyz/jWq8TQZK8x9vagZC/ANUZjk1cnOY2+lZrNkVBJHIeaYpwaefmBpi9aQjc0q+e2ZSDxmuo1S5i1rTkjRv9Ig+aMqOq/wAQ/kR9CPSuDSUoKtW+rzWjAxvg1SYzsfD815YKZIbqAQvjzY2BLcfh/UVsEICrxNlHG9T/AD/XIrz2PV5RNuAVAeyjArqfD9691DJGzjMeHUH0PDY/Hb+tO4HpumS+bpsDbs8YNUPGX/Ij6/8A9g6f/wBFtS+HHLWTgn7r8UnjL/kR9f8A+wdP/wCi2oM5H//Z
                    mediaType: image/jpeg
                    value: ''
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetVideoEncoderConfigurations:
    get:
      tags:
      - Video Encoder Configuration
      summary: VideoEncoderConfigurations
      description: >-
        This operation lists all existing video encoder configurations of a
        device. This command lists all configured video encoder configurations
        in a device. The client need not know anything apriori about the video
        encoder configurations in order to use the command.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetVideoEncoderConfigurationsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 1ee4ca7f-fb95-46b3-8e6d-8542b45b22d4
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetVideoEncoderConfigurations
                  origin: 1659659203023412500
                  readings:
                  - id: dd2b4e0e-9a62-49bc-a80b-071d4b1ed8e1
                    origin: 1659659203023412500
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetVideoEncoderConfigurations
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Configurations:
                        Encoding: H264
                        H264:
                          GovLength: 25
                          H264Profile: Main
                        Multicast:
                          Address:
                            IPv4Address: 0.0.0.0
                            Type: IPv4
                          AutoStart: false
                          Port: 0
                          TTL: 0
                        Name: VideoEncoder_2
                        Quality: 3
                        RateControl:
                          BitrateLimit: 256
                          EncodingInterval: 1
                          FrameRateLimit: 15
                        Resolution:
                          Height: 360
                          Width: 640
                        SessionTimeout: PT0H1M5S
                        Token: minor
                        UseCount: 1
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetVideoEncoderConfigurations
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/VideoEncoderConfiguration:
    get:
      tags:
      - Video Encoder Configuration
      summary: VideoEncoderConfiguration
      description: |-
        If the video encoder configuration token is already known, the encoder configuration can be fetched through the GetVideoEncoderConfiguration command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{EDGEX_MEDIA_VIDEO_ENCODER_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Token of the requested video encoder configuration.


          **Schema Reference:** [media_GetVideoEncoderConfiguration](#media_GetVideoEncoderConfiguration)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetVideoEncoderConfigurationResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 598079d0-d169-4385-86f3-cb7a106345a5
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: VideoEncoderConfiguration
                  origin: 1659659207626081000
                  readings:
                  - id: 86aed436-65cb-4162-b3e6-14def8e4e4d3
                    origin: 1659659207626081000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: VideoEncoderConfiguration
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Configuration:
                        Encoding: H264
                        H264:
                          GovLength: 25
                          H264Profile: Main
                        Multicast:
                          Address:
                            IPv4Address: 0.0.0.0
                            Type: IPv4
                          AutoStart: false
                          Port: 0
                          TTL: 0
                        Name: VideoEncoder_1
                        Quality: 3
                        RateControl:
                          BitrateLimit: 1024
                          EncodingInterval: 1
                          FrameRateLimit: 15
                        Resolution:
                          Height: 1080
                          Width: 1920
                        SessionTimeout: PT0H1M5S
                        Token: main
                        UseCount: 1
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetVideoEncoderConfiguration
    put:
      tags:
      - Video Encoder Configuration
      summary: SetVideoEncoderConfiguration
      description: |-
        This operation modifies a video encoder configuration. The ForcePersistence flag indicates if the changes shall remain after reboot of the device. Changes in the Multicast settings shall always be persistent. Running streams using this configuration may be immediately updated according to the new settings. The changes are not guaranteed to take effect unless the client requests a new stream URI and restarts any affected stream. NVC methods for changing a running stream are out of scope for this specification.

        SessionTimeout is provided as a hint for keeping rtsp session by a device. If necessary the device may adapt parameter values for SessionTimeout elements without returning an error. For the time between keep alive calls the client shall adhere to the timeout value signaled via RTSP.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                VideoEncoderConfiguration:
                  $ref: '#/components/schemas/media_SetVideoEncoderConfiguration'
              required:
              - VideoEncoderConfiguration
              type: object
            example:
              VideoEncoderConfiguration:
                ForcePersistence: false
                Configuration:
                  token: '{{EDGEX_MEDIA_VIDEO_ENCODER_TOKEN}}'
                  Encoding: H264
                  Quality: 3
                  Resolution:
                    Width: 1920
                    Height: 1080
                  Multicast:
                    Address:
                      Type: IPv4
                      IPv4Address: 0.0.0.0
                    Port: 8860
                    TTL: 1
                    AutoStart: false
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                message: >-
                  request failed, status code: 500, err:
                  {"apiVersion":"v2","message":"error writing DeviceResourece
                  VideoEncoderConfiguration for
                  TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4 -\u003e
                  failed to execute write command, \u003cnil\u003e -\u003e
                  invalid request for the function
                  'SetVideoEncoderConfiguration' of web service 'Media'. Onvif
                  error: fault reason: , fault detail: , fault code:
                  SOAP-ENV:Sender  ","statusCode":500}
                statusCode: 500
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.SetVideoEncoderConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/VideoEncoderConfigurationOptions:
    get:
      tags:
      - Video Encoder Configuration
      summary: VideoEncoderConfigurationOptions
      description: |-
        This operation returns the available options (supported values and ranges for video encoder configuration parameters) when the video encoder parameters are reconfigured.

        For JPEG, MPEG4 and H264 extension elements have been defined that provide additional information. A device must provide the XxxOption information for all encodings supported and should additionally provide the corresponding XxxOption2 information.

        This response contains the available video encoder configuration options. If a video encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{EDGEX_MEDIA_PROFILE_VIDEO_ENCODER_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>",
            "ProfileToken": "<ProfileToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
            - **ProfileToken** _[string]_
          <br/>    Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.


          **Schema Reference:** [media_GetVideoEncoderConfigurationOptions](#media_GetVideoEncoderConfigurationOptions)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media_GetVideoEncoderConfigurationOptionsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 187b2e94-6efe-421f-b618-186a20fd41df
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: VideoEncoderConfigurationOptions
                  origin: 1659659212171416600
                  readings:
                  - id: 0b709715-f644-4cf0-a477-dcc3b5ef218c
                    origin: 1659659212171416600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: VideoEncoderConfigurationOptions
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Options:
                        Extension:
                          H264:
                            BitrateRange:
                              Max: 1024
                              Min: 256
                            EncodingIntervalRange:
                              Max: 1
                              Min: 1
                            FrameRateRange:
                              Max: 15
                              Min: 1
                            GovLengthRange:
                              Max: 25
                              Min: 25
                            H264ProfilesSupported:
                            - Main
                            ResolutionsAvailable:
                            - Height: 1080
                              Width: 1920
                            - Height: 720
                              Width: 1280
                            - Height: 360
                              Width: 640
                        H264:
                          EncodingIntervalRange:
                            Max: 1
                            Min: 1
                          FrameRateRange:
                            Max: 15
                            Min: 1
                          GovLengthRange:
                            Max: 25
                            Min: 25
                          H264ProfilesSupported:
                          - Main
                          ResolutionsAvailable:
                          - Height: 1080
                            Width: 1920
                          - Height: 720
                            Width: 1280
                          - Height: 360
                            Width: 640
                        QualityRange:
                          Max: 5
                          Min: 1
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.GetVideoEncoderConfigurationOptions
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Users:
    get:
      tags:
      - User Handling
      summary: Get users
      description: |-
        This operation lists the registered users and corresponding credentials on a device. The device shall support retrieval of registered device users and their credentials for the user token through the GetUsers command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ | Tapo returns `200 OK` for all User Management commands, but none of them actually do anything. The only way to modify the users is through the Tapo app. |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetUsersResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 8e524ecd-674d-4dd8-b728-de78b8245189
                  deviceName: Intel-SimCamera-003caffe-6392-4bb2-a5a4-f027d2e89ee1
                  profileName: onvif-camera
                  sourceName: Users
                  origin: 1664077238993899500
                  readings:
                  - id: f5086b88-9876-4627-91d5-7ce39431652e
                    origin: 1664077238993899500
                    deviceName: Intel-SimCamera-003caffe-6392-4bb2-a5a4-f027d2e89ee1
                    resourceName: Users
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      User:
                      - UserLevel: Administrator
                        Username: admin
                      - UserLevel: User
                        Username: user
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetUsers
    put:
      tags:
      - User Handling
      summary: Set users
      description: |-
        This operation creates new device users and corresponding credentials on a device for authentication purposes. The device shall support creation of device users and their credentials through the CreateUsers command. Either all users are created successfully or a fault message shall be returned without creating any user.

        ONVIF compliant devices are recommended to support password length of at least 28 bytes, as clients may follow the password derivation mechanism which results in 'password equivalent' of length 28 bytes, as described in section 3.1.2 of the ONVIF security white paper.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ | Tapo returns `200 OK` for all User Management commands, but none of them actually do anything. The only way to modify the users is through the Tapo app. |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Users:
                  $ref: '#/components/schemas/device_SetUser'
              required:
              - Users
              type: object
            example:
              Users:
                User:
                - Username: user1
                  Password: Password1!
                  UserLevel: Administrator
                - Username: user2
                  Password: Password1!
                  UserLevel: Operator
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetUser
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/CreateUsers:
    put:
      tags:
      - User Handling
      summary: Create Users
      description: |-
        This operation creates new device users and corresponding credentials on a device for authentication purposes. The device shall support creation of device users and their credentials through the CreateUsers command. Either all users are created successfully or a fault message shall be returned without creating any user.

        ONVIF compliant devices are recommended to support password length of at least 28 bytes, as clients may follow the password derivation mechanism which results in 'password equivalent' of length 28 bytes, as described in section 3.1.2 of the ONVIF security white paper.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ | Tapo returns `200 OK` for all User Management commands, but none of them actually do anything. The only way to modify the users is through the Tapo app. |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                CreateUsers:
                  $ref: '#/components/schemas/device_CreateUsers'
              required:
              - CreateUsers
              type: object
            example:
              CreateUsers:
                User:
                - Username: user1
                  Password: Password1!
                  UserLevel: User
                - Username: user2
                  Password: Password1!
                  UserLevel: User
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.CreateUsers
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DeleteUsers:
    put:
      tags:
      - User Handling
      summary: Delete users
      description: |-
        This operation deletes users on a device. The device shall support deletion of device users and their credentials through the DeleteUsers command. A device may have one or more fixed users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message shall be returned and no users be deleted.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ | Tapo returns `200 OK` for all User Management commands, but none of them actually do anything. The only way to modify the users is through the Tapo app. |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DeleteUsers:
                  $ref: '#/components/schemas/device_DeleteUsers'
              required:
              - DeleteUsers
              type: object
            example:
              DeleteUsers:
                Username:
                - user1
                - user2
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.DeleteUsers
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DiscoveryMode:
    get:
      tags:
      - Auto Discovery
      summary: GetDiscoveryMode
      description: |-
        This operation gets the discovery mode of a device. See Section 7.2 for the definition of the different device discovery modes. The device shall support retrieval of the discovery mode setting through the GetDiscoveryMode command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetDiscoveryModeResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 8155efce-41b5-412f-a25d-b63bed015d63
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: DiscoveryMode
                  origin: 1659656339306907600
                  readings:
                  - id: 099efd6b-d5fa-44a3-98f2-67eb72a1659f
                    origin: 1659656339306907600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: DiscoveryMode
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      DiscoveryMode: Discoverable
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetDiscoveryMode
    put:
      tags:
      - Auto Discovery
      summary: Set DiscoveryMode
      description: |-
        This operation sets the discovery mode operation of a device. See Section 7.2 for the definition of the different device discovery modes. The device shall support configuration of the discovery mode setting through the SetDiscoveryMode command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DiscoveryMode:
                  $ref: '#/components/schemas/device_SetDiscoveryMode'
              required:
              - DiscoveryMode
              type: object
            example:
              DiscoveryMode:
                DiscoveryMode: Discoverable
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetDiscoveryMode
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AddScopes:
    put:
      tags:
      - Auto Discovery
      summary: Add Scopes
      description: |-
        This operation adds new configurable scope parameters to a device. The scope parameters are used in the device discovery to match a probe message. The device shall support addition of discovery scope parameters through the AddScopes command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AddScopes:
                  $ref: '#/components/schemas/device_AddScopes'
              required:
              - AddScopes
              type: object
            example:
              AddScopes:
                ScopeItem:
                - http//:123
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.AddScopes
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Scopes:
    get:
      tags:
      - Auto Discovery
      summary: Get Scopes
      description: |-
        This operation requests the scope parameters of a device. The scope parameters are used in the device discovery to match a probe message, see Section 7. The Scope parameters are of two different types:  
        \- Fixed  
        \- Configurable  
        Fixed scope parameters are permanent device characteristics and cannot be removed through the device management interface. The scope type is indicated in the scope list returned in the get scope parameters response. A device shall support retrieval of discovery scope parameters through the GetScopes command. As some scope parameters are mandatory, the device shall return a non-empty scope list in the response.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/device_GetScopesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 05f573f4-0836-45ad-b9ba-c393f9927586
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: Scopes
                  origin: 1659659228090509000
                  readings:
                  - id: ea858652-cb16-432c-bf45-f9785cd00d85
                    origin: 1659659228090509000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: Scopes
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Scopes:
                      - ScopeDef: Fixed
                        ScopeItem: onvif://www.onvif.org/name/TP-IPC
                      - ScopeDef: Fixed
                        ScopeItem: onvif://www.onvif.org/hardware/MODEL
                      - ScopeDef: Fixed
                        ScopeItem: onvif://www.onvif.org/Profile/Streaming
                      - ScopeDef: Fixed
                        ScopeItem: onvif://www.onvif.org/location/ShenZhen
                      - ScopeDef: Fixed
                        ScopeItem: onvif://www.onvif.org/type/NetworkVideoTransmitter
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.GetScopes
    put:
      tags:
      - Auto Discovery
      summary: Put Scopes
      description: |-
        This operation sets the scope parameters of a device. The scope parameters are used in the device discovery to match a probe message. This operation replaces all existing configurable scope parameters (not fixed parameters). If this shall be avoided, one should use the scope add command instead.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Scopes:
                  $ref: '#/components/schemas/device_SetScopes'
              required:
              - Scopes
              type: object
            example:
              Scopes:
                Scopes:
                - http//:123
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.SetScopes
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RemoveScopes:
    put:
      tags:
      - Auto Discovery
      summary: Remove Scopes
      description: |-
        This operation deletes scope-configurable scope parameters from a device. The scope parameters are used in the device discovery to match a probe message, see Section 7. The device shall support deletion of discovery scope parameters through the RemoveScopes command

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ✔️ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ✔️ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RemoveScopes:
                  $ref: '#/components/schemas/device_RemoveScopes'
              required:
              - RemoveScopes
              type: object
            example:
              RemoveScopes:
                ScopeItem:
                - onvif://www.onvif.org/name/Geovision
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                message: >-
                  request failed, status code: 500, err:
                  {"apiVersion":"v2","message":"error writing DeviceResourece
                  RemoveScopes for
                  Intel-SimCamera-003caffe-6392-4bb2-a5a4-f027d2e89ee1 -\u003e
                  failed to execute write command, \u003cnil\u003e -\u003e
                  invalid request for the function 'RemoveScopes' of web service
                  'Device'. Onvif error: fault reason: Trying to Remove scope
                  which does not exist, fault detail: , fault code: s:Sender
                  ter:InvalidArgVal ter:NoScope","statusCode":500}
                statusCode: 500
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/device/wsdl/devicemgmt.wsdl#op.RemoveScopes
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetNodes:
    get:
      tags:
      - PTZ - Capabilities
      summary: GetNodes
      description: |-
        Get the descriptions of the available PTZ Nodes.

        A PTZ-capable device may have multiple PTZ Nodes. The PTZ Nodes may represent mechanical PTZ drivers, uploaded PTZ drivers or digital PTZ drivers. PTZ Nodes are the lowest level entities in the PTZ control API and reflect the supported PTZ capabilities. The PTZ Node is referenced either by its name or by its reference token.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetNodesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: dfe1b38e-1590-43c4-ab12-432ed5219476
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetNodes
                  origin: 1659656363928092200
                  readings:
                  - id: a47fe9e2-b007-4b5e-891b-3d50062b468f
                    origin: 1659656363928092200
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetNodes
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZNode:
                      - HomeSupported: true
                        Name: Node0
                        SupportedPTZSpaces:
                          AbsolutePanTiltPositionSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          AbsoluteZoomPositionSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ContinuousPanTiltVelocitySpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                            XRange:
                              Max: 1
                              Min: -1
                            YRange:
                              Max: 1
                              Min: -1
                          ContinuousZoomVelocitySpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          Extension: ''
                          PanTiltSpeedSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace
                            XRange:
                              Max: 0
                              Min: 0
                          RelativePanTiltTranslationSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          RelativeZoomTranslationSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ZoomSpeedSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                        Token: Node0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetNodes
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetNode:
    get:
      tags:
      - PTZ - Capabilities
      summary: GetNode
      description: |-
        Get a specific PTZ Node identified by a reference token or a name.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "NodeToken": "<NodeToken>"
          }
          ```

          **Field Descriptions:**
            - **NodeToken** _[string]_
          <br/>    Token of the requested PTZNode.


          **Schema Reference:** [ptz_GetNode](#ptz_GetNode)

          **Example:**<br/>
          ```json
          {"NodeToken": "Node0"}
          ```
        example: eyJOb2RlVG9rZW4iOiAiTm9kZTAifQ==
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetNodeResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 713edf3b-f049-456b-8f3b-4a2dccca683f
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetNode
                  origin: 1659656370279599600
                  readings:
                  - id: 42af41ee-f72d-4f0c-95cf-0e8326f6d154
                    origin: 1659656370279599600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetNode
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZNode:
                        HomeSupported: true
                        Name: Node0
                        SupportedPTZSpaces:
                          AbsolutePanTiltPositionSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          AbsoluteZoomPositionSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ContinuousPanTiltVelocitySpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                            XRange:
                              Max: 1
                              Min: -1
                            YRange:
                              Max: 1
                              Min: -1
                          ContinuousZoomVelocitySpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          Extension: ''
                          PanTiltSpeedSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace
                            XRange:
                              Max: 0
                              Min: 0
                          RelativePanTiltTranslationSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          RelativeZoomTranslationSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ZoomSpeedSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                        Token: Node0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetNode
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetConfigurations:
    get:
      tags:
      - PTZ - Configuration
      summary: GetConfigurations
      description: |-
        Get all the existing PTZConfigurations from the device.  
        The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move requests without the need to specify a certain coordinate system. The default Speeds are introduced to control the speed of move requests (absolute, relative, preset), where no explicit speed has been set.  
        The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the coordinate system for which the limits have been specified. That means that even if movements are specified in a different coordinate system, the requested movements shall be transformed to the coordinate system of the limits where the limits can be checked. When a relative or continuous movements is specified, which would leave the specified limits, the PTZ unit has to move along the specified limits. The Zoom Limits have to be interpreted accordingly.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetConfigurationsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: b46d0e1e-f173-4bf0-8e35-984395952b09
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetConfigurations
                  origin: 1659656376998679000
                  readings:
                  - id: edf84087-d700-4967-bf5a-3e76e3c8ec18
                    origin: 1659656376998679000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetConfigurations
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZConfiguration:
                      - DefaultAbsolutePantTiltPositionSpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                        DefaultContinuousPanTiltVelocitySpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                        DefaultPTZSpeed: {}
                        DefaultPTZTimeout: PT0H0M20S
                        DefaultRelativePanTiltTranslationSpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                        PanTiltLimits:
                          Range:
                            URI: ''
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                        Token: PTZConfiguration0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetConfigurations
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Configuration:
    get:
      tags:
      - PTZ - Configuration
      summary: GetConfiguration
      description: |-
        Get a specific PTZconfiguration from the device, identified by its reference token or name.

        The default Position/Translation/Velocity Spaces are introduced to allow NVCs sending move requests without the need to specify a certain coordinate system. The default Speeds are introduced to control the speed of move requests (absolute, relative, preset), where no explicit speed has been set.

        The allowed pan and tilt range for Pan/Tilt Limits is defined by a two-dimensional space range that is mapped to a specific Absolute Pan/Tilt Position Space. At least one Pan/Tilt Position Space is required by the PTZNode to support Pan/Tilt limits. The limits apply to all supported absolute, relative and continuous Pan/Tilt movements. The limits shall be checked within the coordinate system for which the limits have been specified. That means that even if movements are specified in a different coordinate system, the requested movements shall be transformed to the coordinate system of the limits where the limits can be checked. When a relative or continuous movements is specified, which would leave the specified limits, the PTZ unit has to move along the specified limits. The Zoom Limits have to be interpreted accordingly.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "PTZConfigurationToken": "<PTZConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **PTZConfigurationToken** _[string]_
          <br/>    Token of the requested PTZConfiguration.


          **Schema Reference:** [ptz_GetConfiguration](#ptz_GetConfiguration)

          **Example:**<br/>
          ```json
          {"PTZConfigurationToken": "PTZConfiguration0"}
          ```
        example: eyJQVFpDb25maWd1cmF0aW9uVG9rZW4iOiAiUFRaQ29uZmlndXJhdGlvbjAifQ==
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetConfigurationResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 13f39ebb-cde4-4d99-bbc2-b207c4a40ca3
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: Configuration
                  origin: 1659656383599131400
                  readings:
                  - id: 3a5e5c97-268a-4c84-ae79-f51ada66889e
                    origin: 1659656383599131400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: Configuration
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZConfiguration:
                        DefaultAbsolutePantTiltPositionSpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                        DefaultContinuousPanTiltVelocitySpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                        DefaultPTZSpeed: {}
                        DefaultPTZTimeout: PT0H0M20S
                        DefaultRelativePanTiltTranslationSpace: >-
                          http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                        PanTiltLimits:
                          Range:
                            URI: ''
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                        Token: PTZConfiguration0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetConfiguration
    put:
      tags:
      - PTZ - Configuration
      summary: SetConfiguration
      description: |-
        Set/update a existing PTZConfiguration on the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Configuration:
                  $ref: '#/components/schemas/ptz_SetConfiguration'
              required:
              - Configuration
              type: object
            example:
              Configuration:
                PTZConfiguration:
                  Token: '{{PTZ_CONFIG_TOKEN}}'
                  NodeToken: '{{PTZ_NODE_TOKEN}}'
                  PanTiltLimits:
                    Range:
                      XRange:
                        Max: 170
                        Min: -170
                      YRange:
                        Max: 35
                        Min: -32
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.SetConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetConfigurationOptions:
    get:
      tags:
      - PTZ - Configuration
      summary: GetConfigurationOptions
      description: |-
        List supported coordinate systems including their range limitations. Therefore, the options MAY differ depending on whether the PTZ Configuration is assigned to a Profile containing a Video Source Configuration. In that case, the options may additionally contain coordinate systems referring to the image coordinate system described by the Video Source Configuration. If the PTZ Node supports continuous movements, it shall return a Timeout Range within which Timeouts are accepted by the PTZ Node.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Token of an existing configuration that the options are intended for.


          **Schema Reference:** [ptz_GetConfigurationOptions](#ptz_GetConfigurationOptions)

          **Example:**<br/>
          ```json
          {"ConfigurationToken": "PTZConfiguration0"}
          ```
        example: eyJDb25maWd1cmF0aW9uVG9rZW4iOiAiUFRaQ29uZmlndXJhdGlvbjAifQ==
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetConfigurationOptionsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 418fbbf5-6628-4033-8d7b-0811968dcee8
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetConfigurationOptions
                  origin: 1659671766926306000
                  readings:
                  - id: 7ceb7891-b7af-4cfe-9bbb-2d0fb3bead14
                    origin: 1659671766926306000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetConfigurationOptions
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZConfigurationOptions:
                        PTZTimeout:
                          Max: PT0H0M20S
                          Min: PT0H0M20S
                        Spaces:
                          AbsolutePanTiltPositionSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          AbsoluteZoomPositionSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ContinuousPanTiltVelocitySpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace
                            XRange:
                              Max: 1
                              Min: -1
                            YRange:
                              Max: 1
                              Min: -1
                          ContinuousZoomVelocitySpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          Extension: ''
                          PanTiltSpeedSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace
                            XRange:
                              Max: 0
                              Min: 0
                          RelativePanTiltTranslationSpace:
                            URI: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace
                            XRange:
                              Max: 170
                              Min: -170
                            YRange:
                              Max: 35
                              Min: -32
                          RelativeZoomTranslationSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
                          ZoomSpeedSpace:
                            URI: ''
                            XRange:
                              Max: 0
                              Min: 0
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetConfigurationOptions
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AddPTZConfiguration:
    put:
      tags:
      - PTZ - Configuration
      summary: AddPTZConfiguration
      description: |-
        Add a new PTZConfiguration on the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AddPTZConfiguration:
                  $ref: '#/components/schemas/media_AddPTZConfiguration'
              required:
              - AddPTZConfiguration
              type: object
            example:
              AddPTZConfiguration:
                ProfileToken: '{{MEDIA_PROFILE}}'
                ConfigurationToken: '{{PTZ_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.AddPTZConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RemovePTZConfiguration:
    put:
      tags:
      - PTZ - Configuration
      summary: RemovePTZConfiguration
      description: |-
        Remove a PTZConfiguration on the device.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RemovePTZConfiguration:
                  $ref: '#/components/schemas/media_RemovePTZConfiguration'
              required:
              - RemovePTZConfiguration
              type: object
            example:
              RemovePTZConfiguration:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/media/wsdl/media.wsdl#op.RemovePTZConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AbsoluteMove:
    put:
      tags:
      - PTZ - Actuation
      summary: AbsoluteMove
      description: |-
        Operation to move pan,tilt or zoom to a absolute destination.

        The speed argument is optional. If an x/y speed value is given it is up to the device to either use the x value as absolute resoluting speed vector or to map x and y to the component speed. If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AbsoluteMove:
                  $ref: '#/components/schemas/ptz_AbsoluteMove'
              required:
              - AbsoluteMove
              type: object
            example:
              AbsoluteMove:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
                Position:
                  PanTilt:
                    x: 0
                    y: 0
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.AbsoluteMove
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RelativeMove:
    put:
      tags:
      - PTZ - Actuation
      summary: RelativeMove
      description: |-
        Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the PTZNode supports at least one relative Pan/Tilt or Zoom space.

        The speed argument is optional. If an x/y speed value is given it is up to the device to either use the x value as absolute resoluting speed vector or to map x and y to the component speed. If the speed argument is omitted, the default speed set by the PTZConfiguration will be used.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RelativeMove:
                  $ref: '#/components/schemas/ptz_RelativeMove'
              required:
              - RelativeMove
              type: object
            example:
              RelativeMove:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
                Translation:
                  PanTilt:
                    x: 0
                    y: 0
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.RelativeMove
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/ContinuousMove:
    put:
      tags:
      - PTZ - Actuation
      summary: ContinuousMove
      description: |-
        Operation for continuous Pan/Tilt and Zoom movements. The operation is supported if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the space argument is omitted, the default space set by the PTZConfiguration will be used.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ContinuousMove:
                  $ref: '#/components/schemas/ptz_ContinuousMove'
              required:
              - ContinuousMove
              type: object
            example:
              ContinuousMove:
                ProfileToken: '{{MEDIA_PROFILE}}'
                Velocity:
                  PanTilt:
                    x: -1
                    y: -1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.ContinuousMove
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetStatus:
    get:
      tags:
      - PTZ - Actuation
      summary: GetStatus
      description: |-
        Operation to request PTZ status for the Node in the selected profile.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ProfileToken": "<ProfileToken>"
          }
          ```

          **Field Descriptions:**
            - **ProfileToken** _[string]_
          <br/>    A reference to the MediaProfile where the PTZStatus should be requested.


          **Schema Reference:** [ptz_GetStatus](#ptz_GetStatus)

          **Example:**<br/>
          ```json
          {"ProfileToken":"profile_1"}
          ```
        example: eyJQcm9maWxlVG9rZW4iOiJwcm9maWxlXzEifQ==
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetStatusResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: c8ad64b4-db58-4c9b-9896-82fff02544c9
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetStatus
                  origin: 1659659252963492000
                  readings:
                  - id: 71444c1c-9e85-4852-9c1e-9bd9eba8d616
                    origin: 1659659252963492000
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetStatus
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      PTZStatus:
                        MoveStatus:
                          PanTilt: IDLE
                        Position:
                          PanTilt:
                            Space: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            X: 82
                            Y: -5
                        UtcTime: '2022-08-05T00:27:32Z'
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetStatus
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Stop:
    put:
      tags:
      - PTZ - Actuation
      summary: Stop
      description: |-
        Operation to stop ongoing pan, tilt and zoom movements of absolute relative and continuous type. If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing pan, tilt and zoom movements.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Stop:
                  $ref: '#/components/schemas/ptz_Stop'
              required:
              - Stop
              type: object
            example:
              Stop:
                ProfileToken: '{{MEDIA_PROFILE}}'
                PanTilt: true
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.Stop
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SetPreset:
    put:
      tags:
      - PTZ - Preset
      summary: SetPreset
      description: |-
        The SetPreset command saves the current device position parameters so that the device can move to the saved preset position through the GotoPreset operation. In order to create a new preset, the SetPresetRequest contains no PresetToken. If creation is successful, the Response contains the PresetToken which uniquely identifies the Preset. An existing Preset can be overwritten by specifying the PresetToken of the corresponding Preset. In both cases (overwriting or creation) an optional PresetName can be specified. The operation fails if the PTZ device is moving during the SetPreset operation. The device MAY internally save additional states such as imaging properties in the PTZ Preset which then should be recalled in the GotoPreset operation.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SetPreset:
                  $ref: '#/components/schemas/ptz_SetPreset'
              required:
              - SetPreset
              type: object
            example:
              SetPreset:
                PresetName: Preset1
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.SetPreset
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetPresets:
    get:
      tags:
      - PTZ - Preset
      summary: GetPresets
      description: |-
        Operation to request all PTZ presets for the PTZNode in the selected profile. The operation is supported if there is support for at least on PTZ preset by the PTZNode.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ProfileToken": "<ProfileToken>"
          }
          ```

          **Field Descriptions:**
            - **ProfileToken** _[string]_
          <br/>    A reference to the MediaProfile where the operation should take place.


          **Schema Reference:** [ptz_GetPresets](#ptz_GetPresets)

          **Example:**<br/>
          ```json
          Json: 
          ```json
          {"ProfileToken":"PROFILE_3305967797"}
          ```

          Base64:
          ```
          eyJQcm9maWxlVG9rZW4iOiJQUk9GSUxFXzMzMDU5Njc3OTcifQ==
          ```
          ```
        example: '{{PTZ_CONFIG_TOKEN_BASE64}}'
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/ptz_GetPresetsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 79dde7e3-9730-4d33-aa9f-48e499b23207
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetPresets
                  origin: 1659659260936957200
                  readings:
                  - id: 5816a933-ec39-4c58-b8cf-aa3fc8dcbd19
                    origin: 1659659260936957200
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetPresets
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Preset:
                      - Name: Marked Position 2
                        PTZPosition:
                          PanTilt:
                            Space: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            X: 169
                            Y: -5
                        Token: Preset2
                      - Name: Marked Position 3
                        PTZPosition:
                          PanTilt:
                            Space: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            X: 115
                            Y: 13
                        Token: Preset3
                      - Name: preset4
                        PTZPosition:
                          PanTilt:
                            Space: >-
                              http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace
                            X: 134
                            Y: 13
                        Token: Preset4
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GetPresets
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GotoPreset:
    put:
      tags:
      - PTZ - Preset
      summary: GotoPreset
      description: |-
        Operation to go to a saved preset position for the PTZNode in the selected profile. The operation is supported if there is support for at least on PTZ preset by the PTZNode.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                GotoPreset:
                  $ref: '#/components/schemas/ptz_GotoPreset'
              required:
              - GotoPreset
              type: object
            example:
              GotoPreset:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
                PresetToken: Preset1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GotoPreset
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RemovePreset:
    put:
      tags:
      - PTZ - Preset
      summary: RemovePreset
      description: |-
        Operation to remove a PTZ preset for the Node in the selected profile. The operation is supported if the PresetPosition capability exists for teh Node in the selected profile.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ✔️ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RemovePreset:
                  $ref: '#/components/schemas/ptz_RemovePreset'
              required:
              - RemovePreset
              type: object
            example:
              RemovePreset:
                ProfileToken: '{{MEDIA_PROFILE}}'
                PresetToken: Preset1
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.RemovePreset
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GotoHomePosition:
    put:
      tags:
      - PTZ - Home Position
      summary: GotoHomePosition
      description: |-
        Operation to move the PTZ device to it's "home" position. The operation is supported if the HomeSupported element in the PTZNode is true.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                GotoHomePosition:
                  $ref: '#/components/schemas/ptz_GotoHomePosition'
              required:
              - GotoHomePosition
              type: object
            example:
              GotoHomePosition:
                ProfileToken: '{{MEDIA_PROFILE}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.GotoHomePosition
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SetHomePosition:
    put:
      tags:
      - PTZ - Home Position
      summary: SetHomePosition
      description: |-
        Operation to save current position as the home position. The SetHomePosition command returns with a failure if the “home” position is fixed and cannot be overwritten. If the SetHomePosition is successful, it is possible to recall the Home Position with the GotoHomePosition command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SetHomePosition:
                  $ref: '#/components/schemas/ptz_SetHomePosition'
              required:
              - SetHomePosition
              type: object
            example:
              SetHomePosition:
                ProfileToken: '{{MEDIA_PROFILE}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.SetHomePosition
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/SendAuxiliaryCommand:
    put:
      tags:
      - PTZ - Auxiliary
      summary: SendAuxiliaryCommand
      description: |-
        Manage auxiliary commands supported by a device, such as controlling an Infrared (IR) lamp, a heater or a wiper or a thermometer that is connected to the device.

        The supported commands can be retrieved via the AuxiliaryCommands capability.

        Although the name of the auxiliary commands can be freely defined, commands starting with the prefix tt: are reserved to define frequently used commands and these reserved commands shall all share the "tt:command|parameter" syntax.  
        tt:Wiper|On – Request to start the wiper.  
        tt:Wiper|Off – Request to stop the wiper.  
        tt:Washer|On – Request to start the washer.  
        tt:Washer|Off – Request to stop the washer.  
        tt:WashingProcedure|On – Request to start the washing procedure.  
        tt: WashingProcedure |Off – Request to stop the washing procedure.  
        tt:IRLamp|On – Request to turn ON an IR illuminator attached to the unit.  
        tt:IRLamp|Off – Request to turn OFF an IR illuminator attached to the unit.  
        tt:IRLamp|Auto – Request to configure an IR illuminator attached to the unit so that it automatically turns ON and OFF.  
        A device that indicates auxiliary service capability shall support this command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                SendAuxiliaryCommand:
                  $ref: '#/components/schemas/ptz_SendAuxiliaryCommand'
              required:
              - SendAuxiliaryCommand
              type: object
            example:
              SendAuxiliaryCommand:
                ProfileToken: '{{MEDIA_PROFILE}}'
                AuxiliaryData: '123'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/ptz/wsdl/ptz.wsdl#op.SendAuxiliaryCommand
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetEventProperties:
    get:
      tags:
      - Event Handling
      summary: GetEventProperties
      description: >-
        The WS-BaseNotification specification defines a set of OPTIONAL
        WS-ResouceProperties. This specification does not require the
        implementation of the WS-ResourceProperty interface. Instead, the
        subsequent direct interface shall be implemented by an ONVIF compliant
        device in order to provide information about the FilterDialects, Schema
        files and topics supported by the device.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/event_GetEventPropertiesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 925ca37f-2ed6-43f9-b9e3-4c31849325b7
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: GetEventProperties
                  origin: 1659659240585563600
                  readings:
                  - id: dc1e5896-00d9-4e4d-85f7-2dbca9a4b8cb
                    origin: 1659659240585563600
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: GetEventProperties
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      FixedTopicSet: true
                      MessageContentFilterDialect: >-
                        http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter
                      MessageContentSchemaLocation: http://www.onvif.org/onvif/ver10/schema/onvif.xsd
                      TopicExpressionDialect: >-
                        http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete
                      TopicNamespaceLocation: http://www.onvif.org/onvif/ver10/topics/topicns.xml
                      TopicSet:
                        tns1:RuleEngine:
                          '#seq': 0
                          CellMotionDetector:
                            '#seq': 0
                            Motion:
                              '#attr':
                                wstop:topic:
                                  '#seq': 0
                                  '#text': 'true'
                              '#seq': 0
                              tt:MessageDescription:
                                '#attr':
                                  IsProperty:
                                    '#seq': 0
                                    '#text': 'true'
                                '#seq': 0
                                tt:Data:
                                  '#seq': 1
                                  tt:SimpleItemDescription:
                                    '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': IsMotion
                                      Type:
                                        '#seq': 0
                                        '#text': xsd:boolean
                                    '#seq': 0
                                tt:Source:
                                  '#seq': 0
                                  tt:SimpleItemDescription:
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': VideoSourceConfigurationToken
                                      Type:
                                        '#seq': 0
                                        '#text': tt:ReferenceToken
                                    '#seq': 0
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': VideoAnalyticsConfigurationToken
                                      Type:
                                        '#seq': 0
                                        '#text': tt:ReferenceToken
                                    '#seq': 1
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': Rule
                                      Type:
                                        '#seq': 0
                                        '#text': xsd:string
                                    '#seq': 2
                          TamperDetector:
                            '#seq': 1
                            Tamper:
                              '#attr':
                                wstop:topic:
                                  '#seq': 0
                                  '#text': 'true'
                              '#seq': 0
                              tt:MessageDescription:
                                '#attr':
                                  IsProperty:
                                    '#seq': 0
                                    '#text': 'true'
                                '#seq': 0
                                tt:Data:
                                  '#seq': 1
                                  tt:SimpleItemDescription:
                                    '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': IsTamper
                                      Type:
                                        '#seq': 0
                                        '#text': xsd:boolean
                                    '#seq': 0
                                tt:Source:
                                  '#seq': 0
                                  tt:SimpleItemDescription:
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': VideoSourceConfigurationToken
                                      Type:
                                        '#seq': 0
                                        '#text': tt:ReferenceToken
                                    '#seq': 0
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': VideoAnalyticsConfigurationToken
                                      Type:
                                        '#seq': 0
                                        '#text': tt:ReferenceToken
                                    '#seq': 1
                                  - '#attr':
                                      Name:
                                        '#seq': 1
                                        '#text': Rule
                                      Type:
                                        '#seq': 0
                                        '#text': xsd:string
                                    '#seq': 2
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver10/events/wsdl/event.wsdl#op.GetEventProperties
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/BaseNotificationSubscription:
    put:
      tags:
      - Event Handling
      summary: BaseNotificationSubscription
      description: Create a subscription to subscribe the event from the camera
      requestBody:
        content:
          application/json:
            schema:
              properties:
                BaseNotificationSubscription:
                  properties:
                    InitialTerminationTime:
                      $ref: '#/components/schemas/wsnt_AbsoluteOrRelativeTimeType'
                    TopicFilter:
                      type: string
                  type: object
              required:
              - BaseNotificationSubscription
              type: object
            example:
              BaseNotificationSubscription:
                TopicFilter: tns1:RuleEngine/TamperDetector/Tamper
                InitialTerminationTime: PT180S
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/PullPointSubscription:
    put:
      tags:
      - Event Handling
      summary: PullPointSubscription
      description: >-
        This method returns a PullPointSubscription that can be polled using
        PullMessages. This message contains the same elements as the
        SubscriptionRequest of the WS-BaseNotification without the
        ConsumerReference.


        If no Filter is specified the pullpoint notifies all occurring events to
        the client.


        This method is mandatory.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                PullPointSubscription:
                  properties:
                    MessageContentFilter:
                      type: string
                    InitialTerminationTime:
                      $ref: '#/components/schemas/wsnt_AbsoluteOrRelativeTimeType'
                    MessageTimeout:
                      $ref: '#/components/schemas/wsnt_AbsoluteOrRelativeTimeType'
                  type: object
              required:
              - PullPointSubscription
              type: object
            example:
              PullPointSubscription:
                MessageContentFilter: boolean(//tt:SimpleItem[@Name="Rule"])
                InitialTerminationTime: PT120S
                MessageTimeout: PT20S
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/UnsubscribeCameraEvent:
    put:
      tags:
      - Event Handling
      summary: UnsubscribeCameraEvent
      description: >-
        The device shall provide the following Unsubscribe command for all
        SubscriptionManager endpoints returned by the
        CreatePullPointSubscription command.


        This command shall terminate the lifetime of a pull point.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                UnsubscribeCameraEvent:
                  type: object
              required:
              - UnsubscribeCameraEvent
              type: object
            example:
              UnsubscribeCameraEvent: {}
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Media2Profiles:
    get:
      tags:
      - Analytics - Profile Configuration
      summary: GetProfiles
      description: |-
        Any endpoint can ask for the existing media profiles of a device using the GetProfiles command. Pre-configured or dynamically configured profiles can be retrieved using this command. This command lists all configured profiles in a device. The client does not need to know the media profile in order to use the command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "Token": "<Token>",
            "Type": []
          }
          ```

          **Field Descriptions:**
            - **Token** _[string]_
          <br/>    Optional token of the requested profile.
            - **Type** _[array]_
          <br/>    The types shall be provided as defined by tr2:ConfigurationEnumeration.


          **Schema Reference:** [media2_GetProfiles](#media2_GetProfiles)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                message: >-
                  request failed, status code: 500, err:
                  {"apiVersion":"v2","message":"error reading DeviceResourece
                  Media2Profiles for
                  TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4 -\u003e
                  failed to execute read command -\u003e invalid request for the
                  function 'GetProfiles' of web service 'Media2'. Onvif error:
                  fault reason: Method 'tr2:GetProfiles' not implemented: method
                  name or namespace not recognized, fault detail: , fault code:
                  SOAP-ENV:Sender  ","statusCode":500}
                statusCode: 500
        '200':
          description: OK
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media2_GetProfilesResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400': *id001
        '404': *id002
        '423': *id003
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/media/wsdl/media.wsdl#op.GetProfiles
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetAnalyticsConfigurations:
    get:
      tags:
      - Analytics - Profile Configuration
      summary: GetAnalyticsConfigurations
      description: |-
        By default this operation lists all existing video analytics configurations for a device. Provide a profile token to list only configurations that are compatible with the profile. If a configuration token is provided only a single configuration will be returned.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: object
              example:
                apiVersion: v2
                message: >-
                  request failed, status code: 500, err:
                  {"apiVersion":"v2","message":"error reading DeviceResourece
                  GetAnalyticsConfigurations for
                  TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4 -\u003e
                  failed to execute read command -\u003e invalid request for the
                  function 'GetAnalyticsConfigurations' of web service 'Media2'.
                  Onvif error: fault reason: Method
                  'tr2:GetAnalyticsConfigurations' not implemented: method name
                  or namespace not recognized, fault detail: , fault code:
                  SOAP-ENV:Sender  ","statusCode":500}
                statusCode: 500
        '200':
          description: OK
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/media2_GetAnalyticsConfigurationsResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400': *id001
        '404': *id002
        '423': *id003
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/media/wsdl/media.wsdl#op.GetAnalyticsConfigurations
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AddConfiguration:
    put:
      tags:
      - Analytics - Profile Configuration
      summary: AddConfiguration
      description: |-
        This operation adds one or more Configurations to an existing media profile. If a configuration exists in the media profile, it will be replaced. A device shall support adding a compatible Configuration to a Profile containing a VideoSourceConfiguration and shall support streaming video data of such a profile.

        Note that OSD elements must be added via the CreateOSD command.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AddConfiguration:
                  $ref: '#/components/schemas/media2_AddConfiguration'
              required:
              - AddConfiguration
              type: object
            example:
              AddConfiguration:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
                Configuration:
                - Type: Analytics
                  Token: '{{ANALYTIC_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/media/wsdl/media.wsdl#op.AddConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/RemoveConfiguration:
    put:
      tags:
      - Analytics - Profile Configuration
      summary: RemoveConfiguration
      description: |-
        This operation removes the listed configurations from an existing media profile. If the media profile does not contain one of the listed configurations that item shall be ignored.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                RemoveConfiguration:
                  $ref: '#/components/schemas/media2_RemoveConfiguration'
              required:
              - RemoveConfiguration
              type: object
            example:
              RemoveConfiguration:
                ProfileToken: '{{PTZ_CONFIG_TOKEN}}'
                Configuration:
                - Type: Analytics
                  Token: '{{ANALYTIC_CONFIG_TOKEN}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/media/wsdl/media.wsdl#op.RemoveConfiguration
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetSupportedAnalyticsModules:
    get:
      tags:
      - Analytics - Modules
      summary: GetSupportedAnalyticsModules
      description: |-
        List all analytics modules that are supported by the given VideoAnalyticsConfiguration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Reference to an existing VideoAnalyticsConfiguration.


          **Schema Reference:** [analytics_GetSupportedAnalyticsModules](#analytics_GetSupportedAnalyticsModules)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetSupportedAnalyticsModulesResponse'
              examples:
                200Example:
                  $ref: '#/components/examples/200Example'
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetSupportedAnalyticsModules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/AnalyticsModules:
    get:
      tags:
      - Analytics - Modules
      summary: GetAnalyticsModules
      description: |-
        List the currently assigned set of analytics modules of a VideoAnalyticsConfiguration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{ANALYTIC_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Reference to an existing VideoAnalyticsConfiguration.


          **Schema Reference:** [analytics_GetAnalyticsModules](#analytics_GetAnalyticsModules)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetAnalyticsModulesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 76f908cd-6b34-477f-9a03-5eea4021b416
                  deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                  profileName: onvif-camera
                  sourceName: AnalyticsModules
                  origin: 1665460175164294000
                  readings:
                  - id: c5f01e17-9b31-43eb-bc55-2417617ef530
                    origin: 1665460175164294000
                    deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                    resourceName: AnalyticsModules
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      AnalyticsModule:
                      - Name: MyCellMotionModule
                        Parameters:
                          SimpleItem:
                          - Name: Sensitivity
                            Value: '6'
                        Type: tt:CellMotionEngine
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetAnalyticsModules
    put:
      tags:
      - Analytics - Modules
      summary: ModifyAnalyticsModules
      description: |-
        Modify the settings of one or more analytics modules of a VideoAnalyticsConfiguration. The modules are referenced by their names. It is allowed to pass only a subset to be modified.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                AnalyticsModules:
                  $ref: '#/components/schemas/analytics_ModifyAnalyticsModules'
              required:
              - AnalyticsModules
              type: object
            example:
              AnalyticsModules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                AnalyticsModule:
                - Name: Viproc
                  Type: '{{ANALYTIC_MODULE_TYPE}}'
                  Parameters:
                    SimpleItem:
                    - Name: '{{ANALYTIC_MODULE_OPTION_NAME}}'
                      Value: '{{ANALYTIC_MODULE_OPTION_VALUE}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.ModifyAnalyticsModules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/CreateAnalyticsModules:
    put:
      tags:
      - Analytics - Modules
      summary: CreateAnalyticsModules
      description: |-
        Add one or more analytics modules to an existing VideoAnalyticsConfiguration. The available supported types can be retrieved via GetSupportedAnalyticsModules, where the Name of the supported AnalyticsModules correspond to the type of an AnalyticsModule instance.

        Pass unique module names which can be later used as reference. The Parameters of the analytics module must match those of the corresponding AnalyticsModuleDescription.

        Although this method is mandatory a device implementation may not support adding modules. Instead it can provide a fixed set of predefined configurations via the media service functions GetCompatibleVideoAnalyticsConfigurations and GetAnalyticsConfigurations.

        The device shall ensure that a corresponding analytics engine starts operation when a client subscribes directly or indirectly for events produced by the analytics or rule engine or when a client requests the corresponding scene description stream. An analytics module must be attached to a Video source using the media profiles before it can be used. In case differing analytics configurations are attached to the same profile it is undefined which of the analytics module configuration becomes active if no stream is activated or multiple streams with different profiles are activated at the same time.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                CreateAnalyticsModules:
                  $ref: '#/components/schemas/analytics_CreateAnalyticsModules'
              required:
              - CreateAnalyticsModules
              type: object
            example:
              CreateAnalyticsModules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                AnalyticsModule:
                - Name: TestAnalyticsModule
                  Type: '{{ANALYTIC_MODULE_TYPE}}'
                  Parameters:
                    SimpleItem:
                    - Name: '{{ANALYTIC_MODULE_OPTION_NAME}}'
                      Value: '{{ANALYTIC_MODULE_OPTION_VALUE}}'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.CreateAnalyticsModules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DeleteAnalyticsModules:
    put:
      tags:
      - Analytics - Modules
      summary: DeleteAnalyticsModules
      description: |-
        Remove one or more analytics modules from a VideoAnalyticsConfiguration referenced by their names.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ❌ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DeleteAnalyticsModules:
                  $ref: '#/components/schemas/analytics_DeleteAnalyticsModules'
              required:
              - DeleteAnalyticsModules
              type: object
            example:
              DeleteAnalyticsModules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                AnalyticsModuleName:
                - TestAnalyticsModule
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.DeleteAnalyticsModules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetAnalyticsModuleOptions:
    get:
      tags:
      - Analytics - Modules
      summary: GetAnalyticsModuleOptions
      description: |-
        Return the options for the supported analytics modules that specify an Option attribute.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{ANALYTIC_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>",
            "Type": "<Type>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Reference to an existing AnalyticsConfiguration.
            - **Type** _[string]_
          <br/>    Reference to an SupportedAnalyticsModule Type returned from GetSupportedAnalyticsModules.


          **Schema Reference:** [analytics_GetAnalyticsModuleOptions](#analytics_GetAnalyticsModuleOptions)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetAnalyticsModuleOptionsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 460b6e4f-88d7-476d-ab9c-d46c5f656124
                  deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                  profileName: onvif-camera
                  sourceName: GetAnalyticsModuleOptions
                  origin: 1665460132225688000
                  readings:
                  - id: 42a9e19c-82f6-4552-9f1d-459bfc55600a
                    origin: 1665460132225688000
                    deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                    resourceName: GetAnalyticsModuleOptions
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Options:
                      - IntRange:
                          Max: 100
                          Min: 0
                        Name: Sensitivity
                        Type: tt:IntRange
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetAnalyticsModuleOptions
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetSupportedRules:
    get:
      tags:
      - Analytics - Rules
      summary: GetSupportedRules
      description: |-
        List all rules that are supported by the given VideoAnalyticsConfiguration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{ANALYTIC_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    References an existing Video Analytics configuration. The list of available tokens can be obtained
          									via the Media service GetVideoAnalyticsConfigurations method.


          **Schema Reference:** [analytics_GetSupportedRules](#analytics_GetSupportedRules)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetSupportedRulesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 4694424b-74bb-45ee-a014-ebb6d09855f9
                  deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                  profileName: onvif-camera
                  sourceName: GetSupportedRules
                  origin: 1665460098832568300
                  readings:
                  - id: 155dc49e-caa7-492c-be74-0cf150ca2302
                    origin: 1665460098832568300
                    deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                    resourceName: GetSupportedRules
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      SupportedRules:
                        RuleContentSchemaLocation: http://www.w3.org/2001/XMLSchema
                        RuleDescription:
                        - Fixed: false
                          MaxInstances: 10
                          Messages:
                            Data:
                              SimpleItemDescription:
                              - Name: IsMotion
                                Type: xs:boolean
                            IsProperty: true
                            ParentTopic: tns1:RuleEngine/CellMotionDetector/Motion
                            Source:
                              SimpleItemDescription:
                              - Name: VideoSourceConfigurationToken
                                Type: tt:ReferenceToken
                              - Name: VideoAnalyticsConfigurationToken
                                Type: tt:ReferenceToken
                              - Name: Rule
                                Type: xs:string
                          Name: tt:CellMotionDetector
                          Parameters:
                            SimpleItemDescription:
                            - Name: MinCount
                              Type: xs:integer
                            - Name: AlarmOnDelay
                              Type: xs:integer
                            - Name: AlarmOffDelay
                              Type: xs:integer
                            - Name: ActiveCells
                              Type: xs:base64Binary
                        - Fixed: false
                          MaxInstances: 10
                          Messages:
                            Data:
                              SimpleItemDescription:
                              - Name: State
                                Type: xs:boolean
                            IsProperty: true
                            ParentTopic: tns1:RuleEngine/MotionRegionDetector/Motion
                            Source:
                              SimpleItemDescription:
                              - Name: VideoSource
                                Type: tt:ReferenceToken
                              - Name: RuleName
                                Type: xs:string
                          Name: tt:MotionRegionDetector
                          Parameters:
                            ElementItemDescription:
                            - Name: MotionRegion
                        - Fixed: false
                          MaxInstances: 1
                          Messages:
                            Data:
                              ElementItemDescription:
                              - Name: Image
                              - Name: BoundingBox
                              SimpleItemDescription:
                              - Name: Likelihood
                                Type: xs:float
                              - Name: Label
                                Type: xs:string
                              - Name: ImageUri
                                Type: xs:anyURI
                              - Name: EnrollmentID
                                Type: xs:string
                              - Name: RefImageUri
                                Type: xs:anyURI
                            IsProperty: true
                            ParentTopic: tns1:RuleEngine/Recognition/Face
                            Source:
                              SimpleItemDescription:
                              - Name: VideoSource
                                Type: tt:ReferenceToken
                              - Name: AnalyticsConfiguration
                                Type: tt:ReferenceToken
                              - Name: Rule
                                Type: xs:string
                          Name: tt:FaceRecognition
                          Parameters:
                            SimpleItemDescription:
                            - Name: IncludeImage
                              Type: xs:string
                        - Fixed: false
                          MaxInstances: 1
                          Messages:
                            Data:
                              ElementItemDescription:
                              - Name: BoundingBox
                              - Name: Image
                              - Name: LicensePlateInfo
                              - Name: VehicleInfo
                              - Name: VehicleImage
                              SimpleItemDescription:
                              - Name: Likelihood
                                Type: xs:float
                              - Name: Label
                                Type: xs:string
                              - Name: ImageUri
                                Type: xs:anyURI
                              - Name: VehicleImageURI
                                Type: xs:anyURI
                            IsProperty: true
                            ParentTopic: tns1:RuleEngine/Recognition/LicensePlate
                            Source:
                              SimpleItemDescription:
                              - Name: VideoSource
                                Type: tt:ReferenceToken
                              - Name: AnalyticsConfiguration
                                Type: tt:ReferenceToken
                              - Name: Rule
                                Type: xs:string
                          Name: tt:LicensePlateRecognition
                          Parameters:
                            ElementItemDescription:
                            - Name: Region
                            - Name: SnapLine
                            SimpleItemDescription:
                            - Name: IncludeImage
                              Type: xs:string
                            - Name: PlateLocation
                              Type: xs:string
                        - Fixed: false
                          MaxInstances: 1
                          Messages:
                            Data:
                              SimpleItemDescription:
                              - Name: Count
                                Type: xs:int
                            IsProperty: true
                            ParentTopic: tns1:RuleEngine/CountAggregation/Counter
                            Source:
                              SimpleItemDescription:
                              - Name: VideoSource
                                Type: tt:ReferenceToken
                              - Name: AnalyticsConfiguration
                                Type: tt:ReferenceToken
                              - Name: Rule
                                Type: xs:string
                          Name: tt:LineCounting
                          Parameters:
                            ElementItemDescription:
                            - Name: Segments
                            SimpleItemDescription:
                            - Name: ReportTimeInterval
                              Type: xs:duration
                            - Name: ResetTime
                              Type: xs:time
                            - Name: Direction
                              Type: tt:Direction
                            - Name: PassAllPolylines
                              Type: xs:boolean
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetSupportedRules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/Rules:
    get:
      tags:
      - Analytics - Rules
      summary: GetRules
      description: |-
        List the currently assigned set of rules of a VideoAnalyticsConfiguration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{ANALYTIC_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Reference to an existing VideoAnalyticsConfiguration.


          **Schema Reference:** [analytics_GetRules](#analytics_GetRules)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetRulesResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 16f84c82-ee09-41bb-a012-27b46cff27fe
                  deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                  profileName: onvif-camera
                  sourceName: Rules
                  origin: 1665460089922944000
                  readings:
                  - id: 2f46e1f1-6f39-449a-bd68-6387db6a1008
                    origin: 1665460089922944000
                    deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                    resourceName: Rules
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      Rule:
                      - Name: MyMotionDetectorRule
                        Parameters:
                          SimpleItem:
                          - Name: MinCount
                            Value: '5'
                          - Name: AlarmOnDelay
                            Value: '1000'
                          - Name: AlarmOffDelay
                            Value: '1000'
                          - Name: ActiveCells
                            Value: zwA=
                        Type: tt:CellMotionDetector
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetRules
    put:
      tags:
      - Analytics - Rules
      summary: ModifyRules
      description: |-
        Modify one or more rules of a VideoAnalyticsConfiguration. The rules are referenced by their names.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                Rules:
                  $ref: '#/components/schemas/analytics_ModifyRules'
              required:
              - Rules
              type: object
            example:
              Rules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                Rule:
                - Name: MyMotionDetectorRule
                  Type: tt:ObjectInField
                  Parameters:
                    SimpleItem:
                    - Name: ClassFilter
                      Value: ' Bike Car Truck'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.ModifyRules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/GetRuleOptions:
    get:
      tags:
      - Analytics - Rules
      summary: GetRuleOptions
      description: |-
        Return the options for the supported rules that specify an Option attribute.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      parameters:
      - name: jsonObject
        in: query
        schema:
          type: string
        example: '{{ANALYTIC_CONFIG_TOKEN_BASE64}}'
        description: |
          **Format:**<br/>
          This field is a Base64 encoded json string.

          **JSON Schema:**
          ```yaml
          {
            "ConfigurationToken": "<ConfigurationToken>",
            "RuleType": "<RuleType>"
          }
          ```

          **Field Descriptions:**
            - **ConfigurationToken** _[string]_
          <br/>    Reference to an existing analytics configuration.
            - **RuleType** _[string]_
          <br/>    Reference to an SupportedRule Type returned from GetSupportedRules.


          **Schema Reference:** [analytics_GetRuleOptions](#analytics_GetRuleOptions)
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ObjectEventResponse'
                - properties:
                    event:
                      properties:
                        readings:
                          items:
                            properties:
                              objectValue:
                                $ref: '#/components/schemas/analytics_GetRuleOptionsResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: bf7a5fc7-7523-4690-87b7-273b2a373ed3
                  deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                  profileName: onvif-camera
                  sourceName: GetRuleOptions
                  origin: 1665460126357157600
                  readings:
                  - id: 2bdd1ff4-7d2a-441b-bbc3-dfa50c27b096
                    origin: 1665460126357157600
                    deviceName: Intel-SimCamera-001caffe-48ca-450d-bbd4-cb4f8630ef19
                    resourceName: GetRuleOptions
                    profileName: onvif-camera
                    valueType: Object
                    value: ''
                    objectValue:
                      RuleOptions:
                      - MotionRegionConfigOptions:
                          DisarmSupport: false
                          PolygonLimits:
                            Max: 0
                            Min: 0
                          PolygonSupport: false
                        Name: MotionRegion
                        Type: axt:MotionRegionConfigOptions
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.GetRuleOptions
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/CreateRules:
    put:
      tags:
      - Analytics - Rules
      summary: CreateRules
      description: |-
        Add one or more rules to an existing VideoAnalyticsConfiguration. The available supported types can be retrieved via GetSupportedRules, where the Name of the supported rule correspond to the type of an rule instance.

        Pass unique module names which can be later used as reference. The Parameters of the rules must match those of the corresponding description.

        Although this method is mandatory a device implementation must not support adding rules. Instead it can provide a fixed set of predefined configurations via the media service function GetCompatibleVideoAnalyticsConfigurations.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                CreateRules:
                  $ref: '#/components/schemas/analytics_CreateRules'
              required:
              - CreateRules
              type: object
            example:
              CreateRules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                Rule:
                - Name: Object Counting
                  Type: tt:LineCounting
                  Parameters:
                    SimpleItem:
                    - Name: Armed
                      Value: 'true'
                    ElementItem:
                    - Name: Segments
                      Polyline:
                        Point:
                        - x: '0.16'
                          y: '0.5'
                        - x: '0.16'
                          y: '-0.5'
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.CreateRules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DeleteRules:
    put:
      tags:
      - Analytics - Rules
      summary: DeleteRules
      description: |-
        Remove one or more rules from a VideoAnalyticsConfiguration.

        <details>
        <summary><strong>Tested Camera Models</strong></summary>

        Below is a list of camera models that this command has been tested against, and whether or not the command is supported.

        | Camera | Supported? &nbsp;&nbsp; | Notes |
        |--------|:------------|-------|
        | **Hikvision DFI6256TE** | ❌ |  |
        | **Tapo C200** | ❌ |  |
        | **BOSCH DINION IP starlight 6000 HD** | ✔️ |  |
        | **GeoVision GV-BX8700** | ❌ |  |
        </details>
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DeleteRules:
                  $ref: '#/components/schemas/analytics_DeleteRules'
              required:
              - DeleteRules
              type: object
            example:
              DeleteRules:
                ConfigurationToken: '{{ANALYTIC_CONFIG_TOKEN}}'
                RuleName:
                - Object Counting
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
      externalDocs:
        description: Onvif Specification
        url: https://www.onvif.org/ver20/analytics/wsdl/analytics.wsdl#op.DeleteRules
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/MACAddress:
    get:
      tags:
      - Custom
      summary: Get MACAddress
      description: This command returns the MAC address associated with a device.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEventResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 92336908-8de3-458b-9f0c-3a0d5daaf721
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: MACAddress
                  origin: 1659657259559177500
                  readings:
                  - id: 6d54121c-2d9b-4d2f-ac14-29246fb15e31
                    origin: 1659657259559177500
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: MACAddress
                    profileName: onvif-camera
                    valueType: String
                    value: 10:27:F5:EA:88:F4
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
    put:
      tags:
      - Custom
      summary: Set MACAddress
      description: >-
        MACAddress can also be set via Edgex device command. This is useful for
        setting the MAC Address for devices which do not contain 

        the MAC Address in the Endpoint Reference Address, or have been added
        manually without a MAC Address. 

        Since the MAC is used to map credentials for cameras, it is important to
        have this field filled out.


        > Note: When a camera successfully becomes `UpWithAuth`, the MAC Address
        is automatically queried and overridden by the system if available.

        Device resource MACAddress is used to set `MACAddress` of a camera.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                MACAddress:
                  type: string
              required:
              - MACAddress
              type: object
            example:
              MACAddress: 10-27-f5-ea-88-f4
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/FriendlyName:
    get:
      tags:
      - Custom
      summary: Get FriendlyName
      description: >-
        This operation is used by an endpoint to get the FriendlyName from a
        device. This is a name given to a device by a user to make the device
        more identifiable.
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringEventResponse'
              example:
                apiVersion: v2
                statusCode: 200
                event:
                  apiVersion: v2
                  id: 0505a28a-0fd9-41d4-8044-784cc089894b
                  deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                  profileName: onvif-camera
                  sourceName: FriendlyName
                  origin: 1659657288410588400
                  readings:
                  - id: 2d0def92-9e38-46bd-a72f-b512be4d5345
                    origin: 1659657288410588400
                    deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-1027f5ea88f4
                    resourceName: FriendlyName
                    profileName: onvif-camera
                    valueType: String
                    value: TP-Link C200
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
    put:
      tags:
      - Custom
      summary: Set FriendlyName
      description: >-
        This operation is used by an endpoint to set the FriendlyName of a
        device. This is a name given to a device by a user to make the device
        more identifiable.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                FriendlyName:
                  type: string
              required:
              - FriendlyName
              type: object
            example:
              FriendlyName:
                FriendlyName: My Camera
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/CustomMetadata:
    get:
      tags:
      - Custom
      summary: Get CustomMetadata
      description: >-
        **Get Custom Metadata**

        Use this command to return all of the data in the CustomMetadata field.


        **Get Specific Custom Metadata**


        Pass the `CustomMetadata` resource a query to get specific field(s) in
        CustomMetadata. The query must be a base64 encoded json object with an
        array of fields you want to access.


        1. Json object holding an array of fields you want to query.

        ```json

        '[
            "Color",
            "Location"
        ]'

        ```


        2. Use this command to convert the json object to base64.

        ```shell

        echo '[
            "Color",
            "Location"
        ]' | base64

        ```


        3. The response converted to base64.

        ```

        WwogICAgIkNvbG9yIiwKICAgICJMb2NhdGlvbiIKXQo=

        ```


        4. Use this command to query the fields you provided in the json object.

        ```shell

        curl http://localhost:59882/api/v2/device/name/<device
        name>/CustomMetadata?jsonObject=WwogICAgIkNvbG9yIiwKICAgICJMb2NhdGlvbiIKXQo=
        | jq .

        ```
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
            X-Correlation-Id:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEventResponse'
              examples:
                example-0:
                  summary: Get CustomMetadata
                  value:
                    apiVersion: v2
                    statusCode: 200
                    event:
                      apiVersion: v2
                      id: 6905a513-3aff-454b-981d-ea8e0c79f195
                      deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                      profileName: onvif-camera
                      sourceName: CustomMetadata
                      origin: 1663976147356099300
                      readings:
                      - id: c90f88b6-7e2f-4e37-8fa7-b173a4d6ffec
                        origin: 1663976147356099300
                        deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                        resourceName: CustomMetadata
                        profileName: onvif-camera
                        valueType: Object
                        value: ''
                        objectValue:
                          Business: John's Grocery Store
                          Install Date: 01/01/1970
                          Location: Front door
                example-1:
                  summary: GetSpecificCustomMetadata-multipleFields Copy
                  value:
                    apiVersion: v2
                    statusCode: 200
                    event:
                      apiVersion: v2
                      id: 0749ab9c-05b4-4515-a2b0-5d253aeb8be9
                      deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                      profileName: onvif-camera
                      sourceName: CustomMetadata
                      origin: 1663976177486172000
                      readings:
                      - id: 295d2e23-ffae-4c7e-9440-6be14fc1c93e
                        origin: 1663976177486172000
                        deviceName: TP-Link-C200-3fa1fe68-b915-4053-a3e1-cc32e5000688
                        resourceName: CustomMetadata
                        profileName: onvif-camera
                        valueType: Object
                        value: ''
                        objectValue:
                          Business: John's Grocery Store
                          Location: Front door
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
    put:
      tags:
      - Custom
      summary: Set CustomMetadata
      description: >-
        Use the CustomMetadata resource to set the fields of `CustomMetadata`.
        Choose the key/value pairs to represent your custom fields.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                CustomMetadata:
                  type: object
                  additionalProperties:
                    type: string
              required:
              - CustomMetadata
              type: object
            example:
              CustomMetadata:
                Location: Front door
                Business: John's Grocery Store
                Install Date: 01/01/1970
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
  /api/v2/device/name/{EDGEX_DEVICE_NAME}/DeleteCustomMetadata:
    put:
      tags:
      - Custom
      summary: Delete CustomMetadata
      description: >-
        Use the `DeleteCustomMetadata` resource to delete entries in custom
        metadata
      requestBody:
        content:
          application/json:
            schema:
              properties:
                DeleteCustomMetadata:
                  type: array
                  items:
                    type: string
              required:
              - DeleteCustomMetadata
              type: object
            example:
              DeleteCustomMetadata:
              - Location
              - Color
      parameters:
      - name: EDGEX_DEVICE_NAME
        in: path
        schema:
          type: string
        required: true
        example: Camera001
        description: |
          This is the device name associated with the camera. It was 
          either assigned via the auto-discovery function, or manually 
          defined when you created the device.
      responses:
        '200': *id006
        '400': *id001
        '404': *id002
        '423': *id003
        '500': *id004
        '503': *id005
components:
  schemas:
    analytics_Capabilities:
      properties:
        AnalyticsModuleOptionsSupported:
          description: Indication that the device supports the GetAnalyticsModuleOptions
            operation on the analytics interface
          type: boolean
        AnalyticsModuleSupport:
          description: Indication that the device supports the scene analytics module
            interface.
          type: boolean
        CellBasedSceneDescriptionSupported:
          description: Indication that the device produces the cell based scene description
          type: boolean
        ImageSendingType:
          description: Indication what kinds of method that the device support for
            sending image, acceptable values are defined in tt:ImageSendingType.
          type: string
        RuleOptionsSupported:
          description: Indication that the device supports the GetRuleOptions operation
            on the rules interface
          type: boolean
        RuleSupport:
          description: Indication that the device supports the rules interface and
            the rules syntax.
          type: boolean
        SupportedMetadata:
          description: Indication that the device supports the GetSupportedMetadata
            operation.
          type: boolean
      type: object
    analytics_ConfigOptions:
      properties:
        AnalyticsModule:
          description: Optional name of the analytics module this constraint applies
            to. This option is only necessary in cases where different constraints
            for elements with the same Name exist.
          type: string
        Name:
          description: "The Name of the SimpleItemDescription/ElementItemDescription\n\
            \t\t\t\t\t\t\tthe ConfigOptions applies to."
          type: string
        RuleType:
          description: The RuleType the ConfigOptions applies to if the Name attribute
            is ambiguous.
          type: string
        Type:
          description: "Type of the Rule Options represented by a unique QName. \n\
            \t\t\t\t\t\t\tThe Type defines the element contained in this structure.\n\
            \t\t\t\t\t\t\tThis attribute is deprecated since its value must be identical\
            \ to the embedded element."
          type: string
        maxOccurs:
          description: Maximum number of occurrences. Defaults to one.
          format: int32
          type: integer
        minOccurs:
          description: Minimal number of occurrences. Defaults to one.
          format: int32
          type: integer
      required:
      - Name
      type: object
    analytics_CreateAnalyticsModules:
      properties:
        AnalyticsModule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      - AnalyticsModule
      type: object
    analytics_CreateAnalyticsModulesResponse:
      type: object
    analytics_CreateRules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
        Rule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      required:
      - ConfigurationToken
      - Rule
      type: object
    analytics_CreateRulesResponse:
      type: object
    analytics_DeleteAnalyticsModules:
      properties:
        AnalyticsModuleName:
          description: Name of the AnalyticsModule to be deleted.
          items:
            type: string
          type: array
        ConfigurationToken:
          description: Reference to an existing Video Analytics configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      - AnalyticsModuleName
      type: object
    analytics_DeleteAnalyticsModulesResponse:
      type: object
    analytics_DeleteRules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
        RuleName:
          description: References the specific rule to be deleted (e.g. "MyLineDetector").
          items:
            type: string
          type: array
      required:
      - ConfigurationToken
      - RuleName
      type: object
    analytics_DeleteRulesResponse:
      type: object
    analytics_GetAnalyticsModuleOptions:
      properties:
        ConfigurationToken:
          description: Reference to an existing AnalyticsConfiguration.
          maxLength: 64
          type: string
        Type:
          description: Reference to an SupportedAnalyticsModule Type returned from
            GetSupportedAnalyticsModules.
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetAnalyticsModuleOptionsResponse:
      properties:
        Options:
          description: List of options for the specified analytics module. The response
            Options shall not contain any RuleType attribute.
          items:
            $ref: '#/components/schemas/analytics_ConfigOptions'
          type: array
      type: object
    analytics_GetAnalyticsModules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetAnalyticsModulesResponse:
      properties:
        AnalyticsModule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      type: object
    analytics_GetRuleOptions:
      properties:
        ConfigurationToken:
          description: Reference to an existing analytics configuration.
          maxLength: 64
          type: string
        RuleType:
          description: Reference to an SupportedRule Type returned from GetSupportedRules.
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetRuleOptionsResponse:
      properties:
        RuleOptions:
          description: A device shall provide respective ConfigOptions.RuleType for
            each RuleOption if the request does not specify RuleType. The response
            Options shall not contain any AnalyticsModule attribute.
          items:
            $ref: '#/components/schemas/analytics_ConfigOptions'
          type: array
      type: object
    analytics_GetRules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetRulesResponse:
      properties:
        Rule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      type: object
    analytics_GetServiceCapabilities:
      type: object
    analytics_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/analytics_Capabilities'
          - description: The capabilities for the analytics service is returned in
              the Capabilities element.
      required:
      - Capabilities
      type: object
    analytics_GetSupportedAnalyticsModules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetSupportedAnalyticsModulesResponse:
      properties:
        SupportedAnalyticsModules:
          $ref: '#/components/schemas/onvif_SupportedAnalyticsModules'
      required:
      - SupportedAnalyticsModules
      type: object
    analytics_GetSupportedMetadata:
      properties:
        Type:
          description: Optional reference to an AnalyticsModule Type returned from
            GetSupportedAnalyticsModules.
          type: string
      type: object
    analytics_GetSupportedMetadataResponse:
      properties:
        AnalyticsModule:
          items:
            $ref: '#/components/schemas/analytics_MetadataInfo'
          type: array
      type: object
    analytics_GetSupportedRules:
      properties:
        ConfigurationToken:
          description: "References an existing Video Analytics configuration. The\
            \ list of available tokens can be obtained\n\t\t\t\t\t\t\t\t\tvia the\
            \ Media service GetVideoAnalyticsConfigurations method."
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    analytics_GetSupportedRulesResponse:
      properties:
        SupportedRules:
          $ref: '#/components/schemas/onvif_SupportedRules'
      required:
      - SupportedRules
      type: object
    analytics_MetadataInfo:
      properties:
        SampleFrame:
          allOf:
          - $ref: '#/components/schemas/onvif_Frame'
          - description: Sample frame content starting with the tt:Frame node.
        Type:
          description: Reference to an AnalyticsModule Type.
          type: string
      required:
      - Type
      - SampleFrame
      type: object
    analytics_ModifyAnalyticsModules:
      properties:
        AnalyticsModule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      - AnalyticsModule
      type: object
    analytics_ModifyAnalyticsModulesResponse:
      type: object
    analytics_ModifyRules:
      properties:
        ConfigurationToken:
          description: Reference to an existing VideoAnalyticsConfiguration.
          maxLength: 64
          type: string
        Rule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      required:
      - ConfigurationToken
      - Rule
      type: object
    analytics_ModifyRulesResponse:
      type: object
    bd_Bag:
      properties:
        Category:
          description: Describe the Category of the Bag, acceptable values are defined
            in bd:KnapsackCategory.
          type: string
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Colour of the Bag, acceptable values are defined
              in tt:ColorDescriptor.
      type: object
    bd_Behaviour:
      properties:
        Activity:
          description: Describe the activity of the body, Acceptable values are defined
            in bd:HumanActivity.
          type: string
        Smoking:
          description: Acceptable values are defined in bd:Smoking.
          type: string
        UsingMobile:
          description: Acceptable values are defined in bd:UsingMobile.
          type: string
      type: object
    bd_Belonging:
      properties:
        Bag:
          allOf:
          - $ref: '#/components/schemas/bd_Bag'
          - description: Describe the Bag of the body,acceptable values are defined
              in bd:Bag
        Box:
          allOf:
          - $ref: '#/components/schemas/bd_Box'
          - description: Describe the Box luffed by the body,acceptable values are
              defined in bd:Box.
        Cart:
          allOf:
          - $ref: '#/components/schemas/bd_Cart'
          - description: Describe the Cart pushed by the body,acceptable values are
              defined in bd:Cart.
        LiftSomething:
          description: Describe if the body Lifts something.
          type: boolean
        Umbrella:
          allOf:
          - $ref: '#/components/schemas/bd_Umbrella'
          - description: Describe the Umbrella carried by the body,acceptable values
              are defined in bd:Umbrella.
        Weapon:
          description: Describe if the body carries the Weapon.
          type: boolean
      type: object
    bd_BodyMetric:
      properties:
        BodyShape:
          description: Describle the Shape of the body, acceptable values are defined
            in bd:BodyShape.
          type: string
        Height:
          description: Describe the Stature of the body, the unit is centimeter.
          format: int32
          type: integer
      type: object
    bd_BodyShape:
      enum:
      - Fat
      - Thin
      - Other
      type: string
    bd_Bottoms:
      properties:
        Category:
          description: Describe the Category of the Bottoms, acceptable values are
            defined in bd:BottomsCategory.
          type: string
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Bottoms, acceptable values are
              defined in tt:ColorDescriptor.
        Grain:
          description: Describe the Grain of the Bottoms, acceptable values are defined
            in bd:Grain.
          type: string
        Style:
          description: Describe the Style of the Bottoms, acceptable values are defined
            in bd:BottomsStyle.
          type: string
      type: object
    bd_BottomsCategory:
      enum:
      - Trousers
      - Shorts
      - Skirt
      - Other
      type: string
    bd_BottomsStyle:
      enum:
      - FornalPants
      - Jeans
      - Other
      type: string
    bd_Box:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Box, acceptable values are defined
              in tt:ColorDescriptor.
        Lug:
          description: Describe if the body Lugs the Box.
          type: boolean
      type: object
    bd_Cart:
      properties:
        Category:
          description: Describe the Category of the Cart, acceptable values are defined
            in bd:CartCategory.
          type: string
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Cart, acceptable values are defined
              in tt:ColorDescriptor.
      type: object
    bd_CartCategory:
      enum:
      - BabyCarriage
      - TwoWheelVehicle
      - Tricyle
      - Other
      type: string
    bd_Clothing:
      properties:
        Bottoms:
          allOf:
          - $ref: '#/components/schemas/bd_Bottoms'
          - description: Describe the Bottoms of the body,acceptable values are defined
              in bd:Bottoms.
        Gloves:
          allOf:
          - $ref: '#/components/schemas/bd_Gloves'
          - description: Describe Gloves of the body,acceptable values are defined
              in bd:Gloves.
        Scarf:
          allOf:
          - $ref: '#/components/schemas/bd_Scarf'
          - description: Describe the Scarf of the body,acceptable values are defined
              in bd:Scarf.
        Shoes:
          allOf:
          - $ref: '#/components/schemas/bd_Shoes'
          - description: Describe the Shoes of the body,acceptable values are defined
              in bd:Shoes.
        Tops:
          allOf:
          - $ref: '#/components/schemas/bd_Tops'
          - description: Describe the Tops of the body,acceptable values are defined
              in bd:Tops.
      type: object
    bd_Gloves:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of Gloves, acceptable values are defined
              in tt:ColorDescriptor.
        Wear:
          description: Describe if the body wears Gloves.
          type: boolean
      type: object
    bd_Grain:
      enum:
      - Stria
      - Plaid
      - PureColour
      - Decal
      - Other
      type: string
    bd_HumanActivity:
      enum:
      - Walking
      - Running
      - Fallen
      - Squatting
      - Sitting
      - Standing
      - Driving
      - Other
      type: string
    bd_HumanBody:
      properties:
        Behaviour:
          allOf:
          - $ref: '#/components/schemas/bd_Behaviour'
          - description: Describe the Behaviour of the body.
        Belonging:
          allOf:
          - $ref: '#/components/schemas/bd_Belonging'
          - description: Describe the Belonging of the body.
        BodyMetric:
          allOf:
          - $ref: '#/components/schemas/bd_BodyMetric'
          - description: Describe the body metric of the body.
        Clothing:
          allOf:
          - $ref: '#/components/schemas/bd_Clothing'
          - description: Describe the Clothing of the body.
      type: object
    bd_KnapsackCategory:
      enum:
      - SingleShoulderBag
      - Backpack
      - Other
      type: string
    bd_Scarf:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Scarf, acceptable values are defined
              in ColorDescriptor.
        Wear:
          description: Describe if the body wears the Scarf.
          type: boolean
      type: object
    bd_Shoes:
      properties:
        Category:
          description: Describe the Category of the Shoes, acceptable values are defined
            in bd:ShoesCategory.
          type: string
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Shoes, acceptable values are defined
              in tt:ColorDescriptor.
      type: object
    bd_ShoesCategory:
      enum:
      - LeatherShoes
      - Sneakers
      - Sandal
      - Slipper
      - Other
      type: string
    bd_Smoking:
      enum:
      - NoSmoking
      - Cigar
      - ElectronicCigarettes
      - Other
      type: string
    bd_Tops:
      properties:
        Category:
          description: Describe the Category of the Tops, acceptable values are defined
            in bd:TopsCategory.
          type: string
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Tops, acceptable values are defined
              in tt:ColorDescriptor.
        Grain:
          description: Describe the Grain of the Tops, acceptable values are defined
            in bd:Grain.
          type: string
        Style:
          description: Describe the Style of the Tops, acceptable values are defined
            in bd:TopsStyle.
          type: string
      type: object
    bd_TopsCategory:
      enum:
      - LongSleeve
      - ShortSleeve
      - Other
      type: string
    bd_TopsStyle:
      enum:
      - Tailor
      - Jacket
      - Sweater
      - Overcoat
      - Dress
      - Other
      type: string
    bd_Umbrella:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the Bag, acceptable values are defined
              in tt:ColorDescriptor.
        Open:
          description: Describe if the body Opens the Umbrella.
          type: boolean
      type: object
    bd_UsingMobile:
      enum:
      - ByLeftHand
      - ByRightHand
      - Other
      type: string
    fc_Accessory:
      properties:
        Hat:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear hat.
        Helmet:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear Helmet.
        Hijab:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear hijab.
        Kerchief:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear Kerchief.
        LeftEyePatch:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if there is a patch on the left eye.
        Mask:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear mask.
        Opticals:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if the object wear opticals.
        RightEyePatch:
          allOf:
          - $ref: '#/components/schemas/fc_AccessoryDescription'
          - description: Describe if there is a patch on the right eye.
      type: object
    fc_AccessoryDescription:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the accessory.
        Wear:
          description: Describe if the object wear a accessory .
          type: boolean
      type: object
    fc_AdditionalFeatures:
      properties:
        Freckles:
          description: Describe freckles on the face, acceptable values are defined
            in fc:FrecklesType.
          type: string
        Mole:
          description: Is there mole on the face.
          type: boolean
        Scar:
          description: Is there scar on the face.
          type: boolean
        Tattoo:
          description: Is there Tattoo on the face.
          type: boolean
      type: object
    fc_Chin:
      enum:
      - Double
      - Pointed
      - Round
      type: string
    fc_Complexion:
      enum:
      - White
      - Black
      - Asian
      - Other
      type: string
    fc_Ear:
      enum:
      - Round
      - Pointed
      - Narrow
      - BroadLobe
      - Other
      type: string
    fc_Expression:
      enum:
      - Natural
      - Smile
      - RaisedEyebrows
      - Squint
      - Frown
      - Other
      type: string
    fc_Eye:
      properties:
        Eyeball:
          description: Describe the eyeball of the eye, acceptable values are defined
            in fc:Eyeball.
          type: string
        Eyelid:
          description: Describe the eyelid of the eye, acceptable values are defined
            in fc:Eyelid.
          type: string
        Shape:
          description: Describe the shape of the eye, acceptable values are defined
            in fc:EyeBrowShape.
          type: string
      type: object
    fc_EyeShape:
      enum:
      - Almond
      - Slitty
      - Round
      - Other
      type: string
    fc_Eyeball:
      enum:
      - Black
      - Blue
      - Brown
      - Gray
      - Green
      - Pink
      - Other
      type: string
    fc_Eyebrow:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the Color of the eyebrow.
        Space:
          description: Describe the space of two eyebrows, acceptable values are defined
            in fc:EyebrowSpace.
          type: string
        Width:
          description: "Describe the shape of the eyebrow, Short usually means that\
            \ the width of eye brow is shorter than the length of eye.\n\n\t\t\t\t\
            Long usually means that the width of eye brow is equal to or longer than\
            \ the length of eye.acceptable values are defined in fc:EyebrowWidth."
          type: string
      type: object
    fc_EyebrowSpace:
      enum:
      - Joint
      - Separate
      type: string
    fc_EyebrowWidth:
      enum:
      - Long
      - Short
      type: string
    fc_Eyelid:
      enum:
      - Single
      - Double
      - Other
      type: string
    fc_FacialHair:
      properties:
        Beard:
          description: Describe if there are Beard on the face.
          type: boolean
        Mustache:
          description: Describe if there is mustache on the face.
          type: boolean
        Sideburn:
          description: Describe if there are sideburns on the face.
          type: boolean
      type: object
    fc_FacialShape:
      enum:
      - Long
      - Round
      - Square
      - Oval
      - Other
      type: string
    fc_FrecklesType:
      enum:
      - AroundCheek
      - Nose
      - forehead
      - Other
      type: string
    fc_Gender:
      enum:
      - Male
      - Female
      type: string
    fc_Hair:
      properties:
        Bangs:
          description: Describe the bangs of the Hair
          type: boolean
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorDescriptor'
          - description: Describe the color of the Hair.
        Length:
          description: "Describe the length of the Hair, acceptable values are defined\
            \ in fc:Length. Short usually means that the end of the hair doesn’t exceed\
            \ the shoulder. \r\n\t\t\t\t\t\t\t\tMedium usually means that the end\
            \ of the hair is parallel with the shoulder. Long usually means that the\
            \ end of the hair exceeds the chest."
          type: string
        Style:
          description: Describe the style of the Hair, acceptable values are defined
            in fc:HairStyle.
          type: string
      type: object
    fc_HairStyle:
      enum:
      - Straight
      - Wave
      - Curly
      - CrewCut
      - Bald
      - Ponytail
      - Pigtail
      - Other
      type: string
    fc_HumanFace:
      properties:
        Accessory:
          allOf:
          - $ref: '#/components/schemas/fc_Accessory'
          - description: Describe the Accessory of the face.
        AdditionalFeatures:
          allOf:
          - $ref: '#/components/schemas/fc_AdditionalFeatures'
          - description: Describe the other features, eg scar, mole etc of the face.
        Age:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Describe the age of the face.
        Chin:
          description: Describe the Chin of the face, acceptable values are defined
            in fc:Chin.
          type: string
        Complexion:
          description: Describe the complexion of the face, acceptable values are
            defined in fc:Complexion.
          type: string
        Ear:
          allOf:
          - $ref: '#/components/schemas/fc_Ear'
          - description: Describe the Ear of the face.
        Expression:
          description: Describe the expression on the face, acceptable values are
            defined in fc:Expression.
          type: string
        Eye:
          allOf:
          - $ref: '#/components/schemas/fc_Eye'
          - description: Describe the eye of the face.
        Eyebrow:
          allOf:
          - $ref: '#/components/schemas/fc_Eyebrow'
          - description: Describe the eyebrow of the face.
        FacialHair:
          allOf:
          - $ref: '#/components/schemas/fc_FacialHair'
          - description: Describe the facial hair of the face.
        FacialShape:
          description: Describe the FacialShape, acceptable values are defined fc:FacialShape.
          type: string
        Gender:
          description: Describe the gender of the face, acceptable values are defined
            in fc:Gender.
          type: string
        Hair:
          allOf:
          - $ref: '#/components/schemas/fc_Hair'
          - description: Describe the hair of the face.
        Lip:
          description: Describe the lip of the face, acceptable values are defined
            in fc:Lip.
          type: string
        Nose:
          allOf:
          - $ref: '#/components/schemas/fc_Nose'
          - description: Describe the nose of the face.
        PoseAngle:
          allOf:
          - $ref: '#/components/schemas/fc_PoseAngle'
          - description: Describe the pose angle of the face.
        Temperature:
          description: Describe the temperature of the face, in Kelvin.
          type: number
      type: object
    fc_Length:
      enum:
      - Long
      - Medium
      - Short
      type: string
    fc_Lip:
      enum:
      - Full
      - Medium
      - Thin
      type: string
    fc_Nose:
      properties:
        Length:
          description: "Describe the length of the nose, acceptable values are defined\
            \ in fc:NoseLength. \r\n\t\t\t\tLong usually means that the length of\
            \ the nose is longer than 1/3 of the length of the face.\r\n\t\t\t\tshort\
            \ usually means that the length of the nose is shorter than 1/3 of the\
            \ length of the face."
          type: string
        NoseBridge:
          description: Describe the bridge of the nose, acceptable values are defined
            in fc:NoseBridge.
          type: string
        NoseEnd:
          description: Describe the end of the nose, acceptable values are defined
            in fc:NoseEnd.
          type: string
        NoseWing:
          description: Describe the wing of the nose, acceptable values are defined
            in fc:NoseWing.
          type: string
      type: object
    fc_NoseBridge:
      enum:
      - Straight
      - Arch
      type: string
    fc_NoseEnd:
      enum:
      - Snub
      - Turnedup
      - Flat
      - Hooked
      - Other
      type: string
    fc_NoseLength:
      enum:
      - Short
      - Long
      type: string
    fc_NoseWing:
      enum:
      - Narrow
      - Broad
      type: string
    fc_PoseAngle:
      properties:
        PoseAngles:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoOrientation'
          - description: Describe the pose angle of the face.
        Uncertainty:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoOrientation'
          - description: Describe the expected degree of uncertainty of the pose angle
              yaw, pitch, and roll.
      type: object
    onvif_AACDecOptions:
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported bitrates in kbps
        SampleRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported sample rates in kHz
      required:
      - Bitrate
      - SampleRateRange
      type: object
    onvif_AFModes:
      enum:
      - OnceAfterMove
      type: string
    onvif_AbsoluteFocus:
      properties:
        Position:
          description: Position parameter for the absolute focus control.
          type: number
        Speed:
          description: Speed parameter for the absolute focus control.
          type: number
      required:
      - Position
      type: object
    onvif_AbsoluteFocusOptions:
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the position.
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the speed.
      required:
      - Position
      type: object
    onvif_ActionEngineEventPayload:
      description: Action Engine Event Payload data structure contains the information
        about the ONVIF command invocations. Since this event could be generated by
        other or proprietary actions, the command invocation specific fields are defined
        as optional and additional extension mechanism is provided for future or additional
        action definitions.
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ActionEngineEventPayloadExtension'
        Fault:
          allOf:
          - $ref: '#/components/schemas/soapenv_Fault'
          - description: Fault Message
        RequestInfo:
          allOf:
          - $ref: '#/components/schemas/soapenv_Envelope'
          - description: Request Message
        ResponseInfo:
          allOf:
          - $ref: '#/components/schemas/soapenv_Envelope'
          - description: Response Message
      type: object
    onvif_ActionEngineEventPayloadExtension:
      type: object
    onvif_ActiveConnection:
      properties:
        CurrentBitrate:
          type: number
        CurrentFps:
          type: number
      required:
      - CurrentBitrate
      - CurrentFps
      type: object
    onvif_AnalyticsCapabilities:
      properties:
        AnalyticsModuleSupport:
          description: Indicates whether or not modules are supported.
          type: boolean
        RuleSupport:
          description: Indicates whether or not rules are supported.
          type: boolean
        XAddr:
          description: Analytics service URI.
          type: string
      required:
      - XAddr
      - RuleSupport
      - AnalyticsModuleSupport
      type: object
    onvif_AnalyticsDeviceCapabilities:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_AnalyticsDeviceExtension'
        RuleSupport:
          description: Obsolete property.
          type: boolean
        XAddr:
          type: string
      required:
      - XAddr
      type: object
    onvif_AnalyticsDeviceEngineConfiguration:
      properties:
        EngineConfiguration:
          items:
            $ref: '#/components/schemas/onvif_EngineConfiguration'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_AnalyticsDeviceEngineConfigurationExtension'
      required:
      - EngineConfiguration
      type: object
    onvif_AnalyticsDeviceEngineConfigurationExtension:
      type: object
    onvif_AnalyticsDeviceExtension:
      type: object
    onvif_AnalyticsEngine:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          AnalyticsEngineConfiguration:
            $ref: '#/components/schemas/onvif_AnalyticsDeviceEngineConfiguration'
        required:
        - AnalyticsEngineConfiguration
        type: object
    onvif_AnalyticsEngineConfiguration:
      properties:
        AnalyticsModule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_AnalyticsEngineConfigurationExtension'
      type: object
    onvif_AnalyticsEngineConfigurationExtension:
      type: object
    onvif_AnalyticsEngineControl:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          EngineConfigToken:
            description: Token of the analytics engine configuration (VideoAnalyticsConfiguration)
              in effect.
            maxLength: 64
            type: string
          EngineToken:
            description: Token of the analytics engine (AnalyticsEngine) being controlled.
            maxLength: 64
            type: string
          InputToken:
            description: Tokens of the input (AnalyticsEngineInput) configuration
              applied.
            items:
              maxLength: 64
              type: string
            type: array
          Mode:
            $ref: '#/components/schemas/onvif_ModeOfOperation'
          Multicast:
            $ref: '#/components/schemas/onvif_MulticastConfiguration'
          ReceiverToken:
            description: Tokens of the receiver providing media input data. The order
              of ReceiverToken shall exactly match the order of InputToken.
            items:
              maxLength: 64
              type: string
            type: array
          Subscription:
            $ref: '#/components/schemas/onvif_Config'
        required:
        - EngineToken
        - EngineConfigToken
        - InputToken
        - ReceiverToken
        - Subscription
        - Mode
        type: object
    onvif_AnalyticsEngineInput:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          MetadataInput:
            $ref: '#/components/schemas/onvif_MetadataInput'
          SourceIdentification:
            $ref: '#/components/schemas/onvif_SourceIdentification'
          VideoInput:
            $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
        required:
        - SourceIdentification
        - VideoInput
        - MetadataInput
        type: object
    onvif_AnalyticsEngineInputInfo:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_AnalyticsEngineInputInfoExtension'
        InputInfo:
          $ref: '#/components/schemas/onvif_Config'
      type: object
    onvif_AnalyticsEngineInputInfoExtension:
      type: object
    onvif_AnalyticsState:
      properties:
        Error:
          type: string
        State:
          type: string
      required:
      - State
      type: object
    onvif_AnalyticsStateInformation:
      properties:
        AnalyticsEngineControlToken:
          description: Token of the control object whose status is requested.
          maxLength: 64
          type: string
        State:
          $ref: '#/components/schemas/onvif_AnalyticsState'
      required:
      - AnalyticsEngineControlToken
      - State
      type: object
    onvif_AnyHolder:
      type: object
    onvif_Appearance:
      properties:
        Class:
          $ref: '#/components/schemas/onvif_ClassDescriptor'
        Color:
          $ref: '#/components/schemas/onvif_ColorDescriptor'
        Extension:
          $ref: '#/components/schemas/onvif_AppearanceExtension'
        GeoLocation:
          $ref: '#/components/schemas/onvif_GeoLocation'
        HumanBody:
          $ref: '#/components/schemas/bd_HumanBody'
        HumanFace:
          $ref: '#/components/schemas/fc_HumanFace'
        Image:
          format: binary
          type: string
        ImageRef:
          type: string
        LicensePlateInfo:
          $ref: '#/components/schemas/onvif_LicensePlateInfo'
        Shape:
          $ref: '#/components/schemas/onvif_ShapeDescriptor'
        Transformation:
          $ref: '#/components/schemas/onvif_Transformation'
        VehicleInfo:
          items:
            $ref: '#/components/schemas/onvif_VehicleInfo'
          type: array
      type: object
    onvif_AppearanceExtension:
      type: object
    onvif_ArrayOfFileProgress:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ArrayOfFileProgressExtension'
        FileProgress:
          description: Exported file name and export progress information
          items:
            $ref: '#/components/schemas/onvif_FileProgress'
          type: array
      type: object
    onvif_ArrayOfFileProgressExtension:
      type: object
    onvif_AttachmentData:
      properties:
        Include:
          $ref: '#/components/schemas/xop_Include'
        contentType:
          minLength: 3
          type: string
      required:
      - Include
      type: object
    onvif_AudioAnalyticsStream:
      properties:
        AudioDescriptor:
          items:
            $ref: '#/components/schemas/onvif_AudioDescriptor'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_AudioAnalyticsStreamExtension'
      type: object
    onvif_AudioAnalyticsStreamExtension:
      type: object
    onvif_AudioAttributes:
      properties:
        Bitrate:
          description: The bitrate in kbps.
          format: int32
          type: integer
        Encoding:
          description: Audio encoding of the track.  Use values from tt:AudioEncoding
            for G711 and AAC. Otherwise use values from tt:AudioEncodingMimeNames
            and
          type: string
        Samplerate:
          description: The sample rate in kHz.
          format: int32
          type: integer
      required:
      - Encoding
      - Samplerate
      type: object
    onvif_AudioClassCandidate:
      properties:
        Likelihood:
          description: A likelihood/probability that the corresponding audio event
            belongs to this class. The sum of the likelihoods shall NOT exceed 1
          type: number
        Type:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioClassType'
          - description: Indicates audio class label
      required:
      - Type
      - Likelihood
      type: object
    onvif_AudioClassDescriptor:
      properties:
        ClassCandidate:
          description: Array of audio class label and class probability
          items:
            $ref: '#/components/schemas/onvif_AudioClassCandidate'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_AudioClassDescriptorExtension'
      type: object
    onvif_AudioClassDescriptorExtension:
      type: object
    onvif_AudioClassType:
      description: "AudioClassType acceptable values are;\n\t\t   gun_shot, scream,\
        \ glass_breaking, tire_screech"
      enum:
      - gun_shot
      - scream
      - glass_breaking
      - tire_screech
      type: string
    onvif_AudioDecoderConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - type: object
      description: "The Audio Decoder Configuration does not contain any that parameter\
        \ to configure the\ndecoding .A decoder shall decode every data it receives\
        \ (according to its capabilities)."
    onvif_AudioDecoderConfigurationOptions:
      properties:
        AACDecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_AACDecOptions'
          - description: If the device is able to decode AAC encoded audio this section
              describes the supported configurations
        Extension:
          $ref: '#/components/schemas/onvif_AudioDecoderConfigurationOptionsExtension'
        G711DecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_G711DecOptions'
          - description: If the device is able to decode G711 encoded audio this section
              describes the supported configurations
        G726DecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_G726DecOptions'
          - description: If the device is able to decode G726 encoded audio this section
              describes the supported configurations
      type: object
    onvif_AudioDecoderConfigurationOptionsExtension:
      type: object
    onvif_AudioDescriptor:
      properties:
        UtcTime:
          format: date-time
          type: string
      required:
      - UtcTime
      type: object
    onvif_AudioEncoder2Configuration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Bitrate:
            description: The output bitrate in kbps.
            format: int32
            type: integer
          Encoding:
            description: Audio Media Subtype for the audio format. For definitions
              see tt:AudioEncodingMimeNames and
            type: string
          Multicast:
            allOf:
            - $ref: '#/components/schemas/onvif_MulticastConfiguration'
            - description: Optional multicast configuration of the audio stream.
          SampleRate:
            description: The output sample rate in kHz.
            format: int32
            type: integer
        required:
        - Encoding
        - Bitrate
        - SampleRate
        type: object
    onvif_AudioEncoder2ConfigurationOptions:
      properties:
        BitrateList:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported bitrates in kbps for the specified Encoding
        Encoding:
          description: Audio Media Subtype for the audio format. For definitions see
            tt:AudioEncodingMimeNames and
          type: string
        SampleRateList:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported Sample Rates in kHz for the specified Encoding
      required:
      - Encoding
      - BitrateList
      - SampleRateList
      type: object
    onvif_AudioEncoderConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Bitrate:
            description: The output bitrate in kbps.
            format: int32
            type: integer
          Encoding:
            allOf:
            - $ref: '#/components/schemas/onvif_AudioEncoding'
            - description: Audio codec used for encoding the audio input (either G.711,
                G.726 or AAC)
          Multicast:
            allOf:
            - $ref: '#/components/schemas/onvif_MulticastConfiguration'
            - description: Defines the multicast settings that could be used for video
                streaming.
          SampleRate:
            description: The output sample rate in kHz.
            format: int32
            type: integer
          SessionTimeout:
            description: The rtsp session timeout for the related audio stream
            format: date-time
            type: string
        required:
        - Encoding
        - Bitrate
        - SampleRate
        - Multicast
        - SessionTimeout
        type: object
    onvif_AudioEncoderConfigurationOption:
      properties:
        BitrateList:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported bitrates in kbps for the specified Encoding
        Encoding:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoding'
          - description: The enoding used for audio data (either G.711, G.726 or AAC)
        SampleRateList:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported Sample Rates in kHz for the specified Encoding
      required:
      - Encoding
      - BitrateList
      - SampleRateList
      type: object
    onvif_AudioEncoderConfigurationOptions:
      properties:
        Options:
          description: list of supported AudioEncoderConfigurations
          items:
            $ref: '#/components/schemas/onvif_AudioEncoderConfigurationOption'
          type: array
      type: object
    onvif_AudioEncoding:
      enum:
      - G711
      - G726
      - AAC
      type: string
    onvif_AudioEncodingMimeNames:
      description: Audio Media Subtypes as referenced by IANA (without the leading
        "audio/" Audio Media Type and except for the audio types defined in the restriction).  See
        also
      enum:
      - PCMU
      - G726
      - MP4A-LATM
      - mpeg4-generic
      type: string
    onvif_AudioOutput:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - type: object
      description: Representation of a physical audio outputs.
    onvif_AudioOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          OutputLevel:
            description: Volume setting of the output. The applicable range is defined
              via the option AudioOutputOptions.OutputLevelRange.
            format: int32
            type: integer
          OutputToken:
            description: Token of the phsycial Audio output.
            maxLength: 64
            type: string
          SendPrimacy:
            description: "An audio channel MAY support different types of audio transmission.\
              \ While for full duplex\n\t\t\t\t\t\toperation no special handling is\
              \ required, in half duplex operation the transmission direction\n\t\t\
              \t\t\t\tneeds to be switched.\n\t\t\t\t\t\tThe optional SendPrimacy\
              \ parameter inside the AudioOutputConfiguration indicates which\n\t\t\
              \t\t\t\tdirection is currently active. An NVC can switch between different\
              \ modes by setting the\n\t\t\t\t\t\tAudioOutputConfiguration."
            type: string
        required:
        - OutputToken
        - OutputLevel
        type: object
    onvif_AudioOutputConfigurationOptions:
      properties:
        OutputLevelRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Minimum and maximum level range supported for this Output.
        OutputTokensAvailable:
          description: Tokens of the physical Audio outputs (typically one).
          items:
            maxLength: 64
            type: string
          type: array
        SendPrimacyOptions:
          description: An
          items:
            type: string
          type: array
      required:
      - OutputTokensAvailable
      - OutputLevelRange
      type: object
    onvif_AudioSource:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Channels:
            description: 'number of available audio channels. (1: mono, 2: stereo)'
            format: int32
            type: integer
        required:
        - Channels
        type: object
      description: Representation of a physical audio input.
    onvif_AudioSourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          SourceToken:
            description: Token of the Audio Source the configuration applies to
            maxLength: 64
            type: string
        required:
        - SourceToken
        type: object
    onvif_AudioSourceConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_AudioSourceOptionsExtension'
        InputTokensAvailable:
          description: Tokens of the audio source the configuration can be used for.
          items:
            maxLength: 64
            type: string
          type: array
      required:
      - InputTokensAvailable
      type: object
    onvif_AudioSourceOptionsExtension:
      type: object
    onvif_AutoFocusMode:
      enum:
      - AUTO
      - MANUAL
      type: string
    onvif_BacklightCompensation:
      properties:
        Level:
          description: Optional level parameter (unit unspecified).
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_BacklightCompensationMode'
          - description: Backlight compensation mode (on/off).
      required:
      - Mode
      - Level
      type: object
    onvif_BacklightCompensation20:
      description: Type describing whether BLC mode is enabled or disabled (on/off).
      properties:
        Level:
          description: Optional level parameter (unit unspecified).
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_BacklightCompensationMode'
          - description: Backlight compensation mode (on/off).
      required:
      - Mode
      type: object
    onvif_BacklightCompensationMode:
      description: Enumeration describing the available backlight compenstation modes.
      enum:
      - false
      - true
      type: string
    onvif_BacklightCompensationOptions:
      properties:
        Level:
          $ref: '#/components/schemas/onvif_FloatRange'
        Mode:
          items:
            $ref: '#/components/schemas/onvif_WideDynamicMode'
          type: array
      required:
      - Mode
      - Level
      type: object
    onvif_BacklightCompensationOptions20:
      properties:
        Level:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Level range of BacklightCompensation.
        Mode:
          description: "'ON' or 'OFF'"
          items:
            $ref: '#/components/schemas/onvif_BacklightCompensationMode'
          type: array
      required:
      - Mode
      type: object
    onvif_BackupFile:
      properties:
        Data:
          $ref: '#/components/schemas/onvif_AttachmentData'
        Name:
          type: string
      required:
      - Name
      - Data
      type: object
    onvif_Behaviour:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_BehaviourExtension'
        Idle:
          $ref: '#/components/schemas/onvif_Idle'
        Removed:
          $ref: '#/components/schemas/onvif_Removed'
        Speed:
          type: number
      type: object
    onvif_BehaviourExtension:
      type: object
    onvif_BinaryData:
      properties:
        Data:
          description: base64 encoded binary data.
          format: binary
          type: string
        contentType:
          minLength: 3
          type: string
      required:
      - Data
      type: object
    onvif_Capabilities:
      properties:
        Analytics:
          allOf:
          - $ref: '#/components/schemas/onvif_AnalyticsCapabilities'
          - description: Analytics capabilities
        Device:
          allOf:
          - $ref: '#/components/schemas/onvif_DeviceCapabilities'
          - description: Device capabilities
        Events:
          allOf:
          - $ref: '#/components/schemas/onvif_EventCapabilities'
          - description: Event capabilities
        Extension:
          $ref: '#/components/schemas/onvif_CapabilitiesExtension'
        Imaging:
          allOf:
          - $ref: '#/components/schemas/onvif_ImagingCapabilities'
          - description: Imaging capabilities
        Media:
          allOf:
          - $ref: '#/components/schemas/onvif_MediaCapabilities'
          - description: Media capabilities
        PTZ:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZCapabilities'
          - description: PTZ capabilities
      type: object
    onvif_CapabilitiesExtension:
      properties:
        AnalyticsDevice:
          $ref: '#/components/schemas/onvif_AnalyticsDeviceCapabilities'
        DeviceIO:
          $ref: '#/components/schemas/onvif_DeviceIOCapabilities'
        Display:
          $ref: '#/components/schemas/onvif_DisplayCapabilities'
        Extensions:
          $ref: '#/components/schemas/onvif_CapabilitiesExtension2'
        Receiver:
          $ref: '#/components/schemas/onvif_ReceiverCapabilities'
        Recording:
          $ref: '#/components/schemas/onvif_RecordingCapabilities'
        Replay:
          $ref: '#/components/schemas/onvif_ReplayCapabilities'
        Search:
          $ref: '#/components/schemas/onvif_SearchCapabilities'
      type: object
    onvif_CapabilitiesExtension2:
      type: object
    onvif_CapabilityCategory:
      enum:
      - All
      - Analytics
      - Device
      - Events
      - Imaging
      - Media
      - PTZ
      type: string
    onvif_CellLayout:
      properties:
        Columns:
          description: Number of columns of the cell grid (x dimension)
          format: int32
          type: integer
        Rows:
          description: Number of rows of the cell grid (y dimension)
          format: int32
          type: integer
        Transformation:
          allOf:
          - $ref: '#/components/schemas/onvif_Transformation'
          - description: Mapping of the cell grid to the Video frame. The cell grid
              is starting from the upper left corner and x dimension is going from
              left to right and the y dimension from up to down.
      required:
      - Columns
      - Rows
      - Transformation
      type: object
    onvif_Certificate:
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/onvif_BinaryData'
          - description: base64 encoded DER representation of certificate.
        CertificateID:
          description: Certificate id.
          type: string
      required:
      - CertificateID
      - Certificate
      type: object
    onvif_CertificateGenerationParameters:
      properties:
        CertificateID:
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_CertificateGenerationParametersExtension'
        Subject:
          type: string
        ValidNotAfter:
          type: string
        ValidNotBefore:
          type: string
      type: object
    onvif_CertificateGenerationParametersExtension:
      type: object
    onvif_CertificateInformation:
      properties:
        CertificateID:
          type: string
        ExtendedKeyUsage:
          $ref: '#/components/schemas/onvif_CertificateUsage'
        Extension:
          $ref: '#/components/schemas/onvif_CertificateInformationExtension'
        IssuerDN:
          type: string
        KeyLength:
          format: int32
          type: integer
        KeyUsage:
          $ref: '#/components/schemas/onvif_CertificateUsage'
        SerialNum:
          type: string
        SignatureAlgorithm:
          description: Validity Range is from "NotBefore" to "NotAfter"; the corresponding
            DateTimeRange is from "From" to "Until"
          type: string
        SubjectDN:
          type: string
        Validity:
          $ref: '#/components/schemas/onvif_DateTimeRange'
        Version:
          type: string
      required:
      - CertificateID
      type: object
    onvif_CertificateInformationExtension:
      type: object
    onvif_CertificateStatus:
      properties:
        CertificateID:
          description: Certificate id.
          type: string
        Status:
          description: Indicates whether or not a certificate is used in a HTTPS configuration.
          type: boolean
      required:
      - CertificateID
      - Status
      type: object
    onvif_CertificateUsage:
      properties:
        Critical:
          type: boolean
      required:
      - Critical
      type: object
    onvif_CertificateWithPrivateKey:
      properties:
        Certificate:
          $ref: '#/components/schemas/onvif_BinaryData'
        CertificateID:
          type: string
        PrivateKey:
          $ref: '#/components/schemas/onvif_BinaryData'
      required:
      - Certificate
      - PrivateKey
      type: object
    onvif_ClassCandidate:
      properties:
        Likelihood:
          type: number
        Type:
          $ref: '#/components/schemas/onvif_ClassType'
      required:
      - Type
      - Likelihood
      type: object
    onvif_ClassDescriptor:
      properties:
        ClassCandidate:
          items:
            $ref: '#/components/schemas/onvif_ClassCandidate'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_ClassDescriptorExtension'
        Type:
          description: ONVIF recommends to use this 'Type' element instead of 'ClassCandidate'
            and 'Extension' above for new design. Acceptable values are defined in
            tt:ObjectType.
          items:
            $ref: '#/components/schemas/onvif_StringLikelihood'
          type: array
      type: object
    onvif_ClassDescriptorExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ClassDescriptorExtension2'
        OtherTypes:
          items:
            $ref: '#/components/schemas/onvif_OtherType'
          type: array
      required:
      - OtherTypes
      type: object
    onvif_ClassDescriptorExtension2:
      type: object
    onvif_ClassType:
      enum:
      - Animal
      - Face
      - Human
      - Vehical
      - Other
      type: string
    onvif_CodingCapabilities:
      description: This type contains the Audio and Video coding capabilities of a
        display service.
      properties:
        AudioDecodingCapabilities:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfigurationOptions'
          - description: If the device supports audio decoding this section describes
              the supported codecs and their settings.
        AudioEncodingCapabilities:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfigurationOptions'
          - description: If the device supports audio encoding this section describes
              the supported codecs and their configuration.
        VideoDecodingCapabilities:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoDecoderConfigurationOptions'
          - description: This section describes the supported video codesc and their
              configuration.
      required:
      - VideoDecodingCapabilities
      type: object
    onvif_Color:
      properties:
        Colorspace:
          description: 'Acceptable values:'
          type: string
        X:
          type: number
        Y:
          type: number
        Z:
          type: number
      required:
      - X
      - Y
      - Z
      type: object
    onvif_ColorCluster:
      properties:
        Color:
          $ref: '#/components/schemas/onvif_Color'
        Covariance:
          $ref: '#/components/schemas/onvif_ColorCovariance'
        Weight:
          type: number
      required:
      - Color
      type: object
    onvif_ColorCovariance:
      properties:
        Colorspace:
          description: Acceptable values are the same as in tt:Color.
          type: string
        XX:
          type: number
        XY:
          type: number
        XZ:
          type: number
        YY:
          type: number
        YZ:
          type: number
        ZZ:
          type: number
      required:
      - XX
      - YY
      - ZZ
      type: object
    onvif_ColorDescriptor:
      properties:
        ColorCluster:
          items:
            $ref: '#/components/schemas/onvif_ColorCluster'
          type: array
        Extension: {}
      type: object
    onvif_ColorOptions:
      description: Describe the colors supported. Either list each color or define
        the range of color values.
      properties:
        ColorList:
          description: List the supported color.
          items:
            $ref: '#/components/schemas/onvif_Color'
          type: array
        ColorspaceRange:
          description: Define the range of color supported.
          items:
            $ref: '#/components/schemas/onvif_ColorspaceRange'
          type: array
      type: object
    onvif_ColorOptionsChoice0:
      properties:
        ColorList:
          description: List the supported color.
          items:
            $ref: '#/components/schemas/onvif_Color'
          type: array
      type: object
    onvif_ColorOptionsChoice1:
      properties:
        ColorspaceRange:
          description: Define the range of color supported.
          items:
            $ref: '#/components/schemas/onvif_ColorspaceRange'
          type: array
      type: object
    onvif_ColorspaceRange:
      properties:
        Colorspace:
          description: Acceptable values are the same as in tt:Color.
          type: string
        X:
          $ref: '#/components/schemas/onvif_FloatRange'
        Y:
          $ref: '#/components/schemas/onvif_FloatRange'
        Z:
          $ref: '#/components/schemas/onvif_FloatRange'
      required:
      - X
      - Y
      - Z
      - Colorspace
      type: object
    onvif_Config:
      properties:
        Name:
          description: Name of the configuration.
          type: string
        Parameters:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemList'
          - description: List of configuration parameters as defined in the corresponding
              description.
        Type:
          description: The Type attribute specifies the type of rule and shall be
            equal to value of one of Name attributes of ConfigDescription elements
            returned by GetSupportedRules and GetSupportedAnalyticsModules command.
          type: string
      required:
      - Name
      - Type
      - Parameters
      type: object
    onvif_ConfigDescription:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ConfigDescriptionExtension'
        Messages:
          description: "The analytics modules and rule engine produce Events, which\
            \ must be listed within the Analytics Module Description. In order to\
            \ do so\n\t\t\t\t\t\tthe structure of the Message is defined and consists\
            \ of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions\
            \ wherever applicable.\n\t\t\t\t\t\tThe name of all Items must be unique\
            \ within all Items contained in any group of this Message.\n\t\t\t\t\t\
            \tDepending on the component multiple parameters or none may be needed\
            \ to identify the component uniquely."
          items:
            $ref: '#/components/schemas/onvif_Messages'
          type: array
        Name:
          description: The Name attribute (e.g. "tt::LineDetector") uniquely identifies
            the type of rule, not a type definition in a schema.
          type: string
        Parameters:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemListDescription'
          - description: "List describing the configuration parameters. The names\
              \ of the parameters must be unique. If possible SimpleItems\n\t\t\t\t\
              \t\tshould be used to transport the information to ease parsing of dynamically\
              \ defined messages by a client\n\t\t\t\t\t\tapplication."
        fixed:
          description: The fixed attribute signals that it is not allowed to add or
            remove this type of configuration.
          type: boolean
        maxInstances:
          description: The maxInstances attribute signals the maximum number of instances
            per configuration.
          format: int32
          type: integer
      required:
      - Name
      - Parameters
      type: object
    onvif_ConfigDescriptionExtension:
      type: object
    onvif_ConfigurationEntity:
      description: Base type defining the common properties of a configuration.
      properties:
        Name:
          description: User readable name. Length up to 64 characters.
          maxLength: 64
          type: string
        UseCount:
          description: Number of internal references currently using this configuration.
          format: int32
          type: integer
        token:
          description: Token that uniquely references this configuration. Length up
            to 64 characters.
          maxLength: 64
          type: string
      required:
      - token
      - Name
      - UseCount
      type: object
    onvif_ContinuousFocus:
      properties:
        Speed:
          description: Speed parameter for the Continuous focus control.
          type: number
      required:
      - Speed
      type: object
    onvif_ContinuousFocusOptions:
      properties:
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the speed.
      required:
      - Speed
      type: object
    onvif_DNSInformation:
      properties:
        DNSFromDHCP:
          description: List of DNS addresses received from DHCP.
          items:
            $ref: '#/components/schemas/onvif_IPAddress'
          type: array
        DNSManual:
          description: List of manually entered DNS addresses.
          items:
            $ref: '#/components/schemas/onvif_IPAddress'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_DNSInformationExtension'
        FromDHCP:
          description: Indicates whether or not DNS information is retrieved from
            DHCP.
          type: boolean
        SearchDomain:
          description: Search domain.
          items:
            type: string
          type: array
      required:
      - FromDHCP
      type: object
    onvif_DNSInformationExtension:
      type: object
    onvif_Date:
      properties:
        Day:
          description: Range is 1 to 31.
          format: int32
          type: integer
        Month:
          description: Range is 1 to 12.
          format: int32
          type: integer
        Year:
          format: int32
          type: integer
      required:
      - Year
      - Month
      - Day
      type: object
    onvif_DateTime:
      properties:
        Date:
          $ref: '#/components/schemas/onvif_Date'
        Time:
          $ref: '#/components/schemas/onvif_Time'
      required:
      - Time
      - Date
      type: object
    onvif_DateTimeRange:
      properties:
        From:
          format: date-time
          type: string
        Until:
          format: date-time
          type: string
      required:
      - From
      - Until
      type: object
    onvif_Defogging:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_DefoggingExtension'
        Level:
          description: Optional level parameter specified with unitless normalized
            value from 0.0 to +1.0.
          type: number
        Mode:
          description: Parameter to enable/disable or automatic Defogging feature.
            Its options shall be chosen from tt:DefoggingMode Type.
          type: string
      required:
      - Mode
      type: object
    onvif_DefoggingExtension:
      type: object
    onvif_DefoggingMode:
      enum:
      - false
      - true
      - AUTO
      type: string
    onvif_DefoggingOptions:
      properties:
        Level:
          description: Indicates whether or not support Level parameter for Defogging.
          type: boolean
        Mode:
          description: Supported options for Defogging mode. Its options shall be
            chosen from tt:DefoggingMode Type.
          items:
            type: string
          type: array
      required:
      - Mode
      - Level
      type: object
    onvif_DeviceCapabilities:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_DeviceCapabilitiesExtension'
        IO:
          allOf:
          - $ref: '#/components/schemas/onvif_IOCapabilities'
          - description: I/O capabilities.
        Network:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkCapabilities'
          - description: Network capabilities.
        Security:
          allOf:
          - $ref: '#/components/schemas/onvif_SecurityCapabilities'
          - description: Security capabilities.
        System:
          allOf:
          - $ref: '#/components/schemas/onvif_SystemCapabilities'
          - description: System capabilities.
        XAddr:
          description: Device service URI.
          type: string
      required:
      - XAddr
      type: object
    onvif_DeviceCapabilitiesExtension:
      type: object
    onvif_DeviceEntity:
      description: Base class for physical entities like inputs and outputs.
      properties:
        token:
          description: Unique identifier referencing the physical entity.
          maxLength: 64
          type: string
      required:
      - token
      type: object
    onvif_DeviceIOCapabilities:
      properties:
        AudioOutputs:
          format: int32
          type: integer
        AudioSources:
          format: int32
          type: integer
        RelayOutputs:
          format: int32
          type: integer
        VideoOutputs:
          format: int32
          type: integer
        VideoSources:
          format: int32
          type: integer
        XAddr:
          type: string
      required:
      - XAddr
      - VideoSources
      - VideoOutputs
      - AudioSources
      - AudioOutputs
      - RelayOutputs
      type: object
    onvif_DigitalIdleState:
      enum:
      - closed
      - open
      type: string
    onvif_DigitalInput:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          IdleState:
            allOf:
            - $ref: '#/components/schemas/onvif_DigitalIdleState'
            - description: Indicate the Digital IdleState status.
        type: object
    onvif_Direction:
      enum:
      - Left
      - Right
      - Any
      type: string
    onvif_DiscoveryMode:
      enum:
      - Discoverable
      - NonDiscoverable
      type: string
    onvif_DisplayCapabilities:
      properties:
        FixedLayout:
          description: Indication that the SetLayout command supports only predefined
            layouts.
          type: boolean
        XAddr:
          type: string
      required:
      - XAddr
      - FixedLayout
      type: object
    onvif_Dot11AuthAndMangementSuite:
      enum:
      - None
      - Dot1X
      - PSK
      - Extended
      type: string
    onvif_Dot11AvailableNetworks:
      properties:
        AuthAndMangementSuite:
          description: See IEEE802.11 7.3.2.25.2 for details.
          items:
            $ref: '#/components/schemas/onvif_Dot11AuthAndMangementSuite'
          type: array
        BSSID:
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_Dot11AvailableNetworksExtension'
        GroupCipher:
          items:
            $ref: '#/components/schemas/onvif_Dot11Cipher'
          type: array
        PairCipher:
          items:
            $ref: '#/components/schemas/onvif_Dot11Cipher'
          type: array
        SSID:
          format: binary
          type: string
        SignalStrength:
          $ref: '#/components/schemas/onvif_Dot11SignalStrength'
      required:
      - SSID
      type: object
    onvif_Dot11AvailableNetworksExtension:
      type: object
    onvif_Dot11Capabilities:
      properties:
        AdHocStationMode:
          type: boolean
        MultipleConfiguration:
          type: boolean
        ScanAvailableNetworks:
          type: boolean
        TKIP:
          type: boolean
        WEP:
          type: boolean
      required:
      - TKIP
      - ScanAvailableNetworks
      - MultipleConfiguration
      - AdHocStationMode
      - WEP
      type: object
    onvif_Dot11Cipher:
      enum:
      - CCMP
      - TKIP
      - Any
      - Extended
      type: string
    onvif_Dot11Configuration:
      properties:
        Alias:
          maxLength: 64
          type: string
        Mode:
          $ref: '#/components/schemas/onvif_Dot11StationMode'
        Priority:
          format: int32
          maximum: 31
          minimum: 0
          type: integer
        SSID:
          format: binary
          type: string
        Security:
          $ref: '#/components/schemas/onvif_Dot11SecurityConfiguration'
      required:
      - SSID
      - Mode
      - Alias
      - Priority
      - Security
      type: object
    onvif_Dot11PSKSet:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_Dot11PSKSetExtension'
        Key:
          description: According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of
            256 bits, or 64 octets when represented in hex
          format: binary
          type: string
        Passphrase:
          description: "According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence\
            \ of between 8 and 63 ASCII-encoded characters and\n\t\t\t\t\teach character\
            \ in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive."
          pattern: '[ -~]{8,63}'
          type: string
      type: object
    onvif_Dot11PSKSetExtension:
      type: object
    onvif_Dot11SecurityConfiguration:
      properties:
        Algorithm:
          $ref: '#/components/schemas/onvif_Dot11Cipher'
        Dot1X:
          maxLength: 64
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_Dot11SecurityConfigurationExtension'
        Mode:
          $ref: '#/components/schemas/onvif_Dot11SecurityMode'
        PSK:
          $ref: '#/components/schemas/onvif_Dot11PSKSet'
      required:
      - Mode
      type: object
    onvif_Dot11SecurityConfigurationExtension:
      type: object
    onvif_Dot11SecurityMode:
      enum:
      - None
      - WEP
      - PSK
      - Dot1X
      - Extended
      type: string
    onvif_Dot11SignalStrength:
      enum:
      - None
      - Very Bad
      - Bad
      - Good
      - Very Good
      - Extended
      type: string
    onvif_Dot11StationMode:
      enum:
      - Ad-hoc
      - Infrastructure
      - Extended
      type: string
    onvif_Dot11Status:
      properties:
        ActiveConfigAlias:
          maxLength: 64
          type: string
        BSSID:
          type: string
        GroupCipher:
          $ref: '#/components/schemas/onvif_Dot11Cipher'
        PairCipher:
          $ref: '#/components/schemas/onvif_Dot11Cipher'
        SSID:
          format: binary
          type: string
        SignalStrength:
          $ref: '#/components/schemas/onvif_Dot11SignalStrength'
      required:
      - SSID
      - ActiveConfigAlias
      type: object
    onvif_Dot1XConfiguration:
      properties:
        AnonymousID:
          type: string
        CACertificateID:
          items:
            type: string
          type: array
        Dot1XConfigurationToken:
          maxLength: 64
          type: string
        EAPMethod:
          description: EAP Method type as defined in
          format: int32
          type: integer
        EAPMethodConfiguration:
          $ref: '#/components/schemas/onvif_EAPMethodConfiguration'
        Extension:
          $ref: '#/components/schemas/onvif_Dot1XConfigurationExtension'
        Identity:
          type: string
      required:
      - Dot1XConfigurationToken
      - Identity
      - EAPMethod
      type: object
    onvif_Dot1XConfigurationExtension:
      type: object
    onvif_Dot3Configuration:
      type: object
    onvif_Duplex:
      enum:
      - Full
      - Half
      type: string
    onvif_DurationRange:
      description: Range of duration greater equal Min duration and less equal Max
        duration.
      properties:
        Max:
          format: date-time
          type: string
        Min:
          format: date-time
          type: string
      required:
      - Min
      - Max
      type: object
    onvif_DynamicDNSInformation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_DynamicDNSInformationExtension'
        Name:
          description: DNS name.
          type: string
        TTL:
          description: Time to live.
          format: date-time
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/onvif_DynamicDNSType'
          - description: Dynamic DNS type.
      required:
      - Type
      type: object
    onvif_DynamicDNSInformationExtension:
      type: object
    onvif_DynamicDNSType:
      enum:
      - NoUpdate
      - ClientUpdates
      - ServerUpdates
      type: string
    onvif_EAPMethodConfiguration:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_EapMethodExtension'
        Password:
          description: Password for those EAP Methods that require a password. The
            password shall never be returned on a get method.
          type: string
        TLSConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_TLSConfiguration'
          - description: Confgiuration information for TLS Method.
      type: object
    onvif_EFlip:
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_EFlipMode'
          - description: Parameter to enable/disable E-Flip feature.
      required:
      - Mode
      type: object
    onvif_EFlipMode:
      enum:
      - false
      - true
      - Extended
      type: string
    onvif_EFlipOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_EFlipOptionsExtension'
        Mode:
          description: Options of EFlip mode parameter.
          items:
            $ref: '#/components/schemas/onvif_EFlipMode'
          type: array
      type: object
    onvif_EFlipOptionsExtension:
      type: object
    onvif_EapMethodExtension:
      type: object
    onvif_ElementItem:
      description: Complex value structure.
      properties:
        Name:
          description: Item name.
          type: string
      required:
      - Name
      type: object
    onvif_ElementItemDescription:
      description: Description of a complex type. The Type must reference a defined
        type.
      properties:
        Name:
          description: Item name. Must be unique within a list.
          type: string
        Type:
          description: The type of the item. The Type must reference a defined type.
          type: string
      required:
      - Name
      - Type
      type: object
    onvif_Enabled:
      enum:
      - ENABLED
      - DISABLED
      type: string
    onvif_EngineConfiguration:
      properties:
        AnalyticsEngineInputInfo:
          $ref: '#/components/schemas/onvif_AnalyticsEngineInputInfo'
        VideoAnalyticsConfiguration:
          $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
      required:
      - VideoAnalyticsConfiguration
      - AnalyticsEngineInputInfo
      type: object
    onvif_Entity:
      enum:
      - Device
      - VideoSource
      - AudioSource
      type: string
    onvif_EventCapabilities:
      properties:
        WSPausableSubscriptionManagerInterfaceSupport:
          description: Indicates whether or not WS Pausable Subscription Manager Interface
            is supported.
          type: boolean
        WSPullPointSupport:
          description: Indicates whether or not WS Pull Point is supported.
          type: boolean
        WSSubscriptionPolicySupport:
          description: Indicates whether or not WS Subscription policy is supported.
          type: boolean
        XAddr:
          description: Event service URI.
          type: string
      required:
      - XAddr
      - WSSubscriptionPolicySupport
      - WSPullPointSupport
      - WSPausableSubscriptionManagerInterfaceSupport
      type: object
    onvif_EventFilter:
      allOf:
      - $ref: '#/components/schemas/wsnt_FilterType'
      - type: object
    onvif_EventStream:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_EventStreamExtension'
          type: array
        NotificationMessage:
          items:
            $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          type: array
      type: object
    onvif_EventStreamChoice0:
      properties:
        NotificationMessage:
          items:
            $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          type: array
      type: object
    onvif_EventStreamChoice1:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_EventStreamExtension'
          type: array
      type: object
    onvif_EventStreamChoice2:
      type: object
    onvif_EventStreamExtension:
      type: object
    onvif_EventSubscription:
      description: Subcription handling in the same way as base notification subscription.
      properties:
        Filter:
          $ref: '#/components/schemas/wsnt_FilterType'
        SubscriptionPolicy:
          $ref: '#/components/schemas/onvif_SubscriptionPolicy'
      type: object
    onvif_Exposure:
      properties:
        ExposureTime:
          description: The fixed exposure time used by the image sensor (μs).
          type: number
        Gain:
          description: The fixed gain used by the image sensor (dB).
          type: number
        Iris:
          description: The fixed attenuation of input light affected by the iris (dB).
            0dB maps to a fully opened iris.
          type: number
        MaxExposureTime:
          description: Maximum value of exposure time range allowed to be used by
            the algorithm.
          type: number
        MaxGain:
          description: Maximum value of the sensor gain range that is allowed to be
            used by the algorithm.
          type: number
        MaxIris:
          description: Maximum value of the iris range allowed to be used by the algorithm.
          type: number
        MinExposureTime:
          description: Minimum value of exposure time range allowed to be used by
            the algorithm.
          type: number
        MinGain:
          description: Minimum value of the sensor gain range that is allowed to be
            used by the algorithm.
          type: number
        MinIris:
          description: Minimum value of the iris range allowed to be used by the algorithm.
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_ExposureMode'
          - description: Exposure Mode
        Priority:
          allOf:
          - $ref: '#/components/schemas/onvif_ExposurePriority'
          - description: The exposure priority mode (low noise/framerate).
        Window:
          allOf:
          - $ref: '#/components/schemas/onvif_Rectangle'
          - description: Rectangular exposure mask.
      required:
      - Mode
      - Priority
      - Window
      - MinExposureTime
      - MaxExposureTime
      - MinGain
      - MaxGain
      - MinIris
      - MaxIris
      - ExposureTime
      - Gain
      - Iris
      type: object
    onvif_Exposure20:
      description: Type describing the exposure settings.
      properties:
        ExposureTime:
          description: The fixed exposure time used by the image sensor (μs).
          type: number
        Gain:
          description: The fixed gain used by the image sensor (dB).
          type: number
        Iris:
          description: The fixed attenuation of input light affected by the iris (dB).
            0dB maps to a fully opened iris and positive values map to higher attenuation.
          type: number
        MaxExposureTime:
          description: Maximum value of exposure time range allowed to be used by
            the algorithm.
          type: number
        MaxGain:
          description: Maximum value of the sensor gain range that is allowed to be
            used by the algorithm.
          type: number
        MaxIris:
          description: Maximum value of the iris range allowed to be used by the algorithm.
            0dB maps to a fully opened iris and positive values map to higher attenuation.
          type: number
        MinExposureTime:
          description: Minimum value of exposure time range allowed to be used by
            the algorithm.
          type: number
        MinGain:
          description: Minimum value of the sensor gain range that is allowed to be
            used by the algorithm.
          type: number
        MinIris:
          description: Minimum value of the iris range allowed to be used by the algorithm.  0dB
            maps to a fully opened iris and positive values map to higher attenuation.
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_ExposureMode'
          - description: Exposure Mode
        Priority:
          allOf:
          - $ref: '#/components/schemas/onvif_ExposurePriority'
          - description: The exposure priority mode (low noise/framerate).
        Window:
          allOf:
          - $ref: '#/components/schemas/onvif_Rectangle'
          - description: Rectangular exposure mask.
      required:
      - Mode
      type: object
    onvif_ExposureMode:
      enum:
      - AUTO
      - MANUAL
      type: string
    onvif_ExposureOptions:
      properties:
        ExposureTime:
          $ref: '#/components/schemas/onvif_FloatRange'
        Gain:
          $ref: '#/components/schemas/onvif_FloatRange'
        Iris:
          $ref: '#/components/schemas/onvif_FloatRange'
        MaxExposureTime:
          $ref: '#/components/schemas/onvif_FloatRange'
        MaxGain:
          $ref: '#/components/schemas/onvif_FloatRange'
        MaxIris:
          $ref: '#/components/schemas/onvif_FloatRange'
        MinExposureTime:
          $ref: '#/components/schemas/onvif_FloatRange'
        MinGain:
          $ref: '#/components/schemas/onvif_FloatRange'
        MinIris:
          $ref: '#/components/schemas/onvif_FloatRange'
        Mode:
          items:
            $ref: '#/components/schemas/onvif_ExposureMode'
          type: array
        Priority:
          items:
            $ref: '#/components/schemas/onvif_ExposurePriority'
          type: array
      required:
      - Mode
      - Priority
      - MinExposureTime
      - MaxExposureTime
      - MinGain
      - MaxGain
      - MinIris
      - MaxIris
      - ExposureTime
      - Gain
      - Iris
      type: object
    onvif_ExposureOptions20:
      properties:
        ExposureTime:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the ExposureTime.
        Gain:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Gain.
        Iris:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Iris.
        MaxExposureTime:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Maximum ExposureTime.
        MaxGain:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Maximum Gain.
        MaxIris:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Maximum Iris.
        MinExposureTime:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Minimum ExposureTime.
        MinGain:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Minimum Gain.
        MinIris:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Minimum Iris.
        Mode:
          description: Exposure Mode
          items:
            $ref: '#/components/schemas/onvif_ExposureMode'
          type: array
        Priority:
          description: The exposure priority mode (low noise/framerate).
          items:
            $ref: '#/components/schemas/onvif_ExposurePriority'
          type: array
      required:
      - Mode
      type: object
    onvif_ExposurePriority:
      enum:
      - LowNoise
      - FrameRate
      type: string
    onvif_FactoryDefaultType:
      description: Enumeration describing the available factory default modes.
      enum:
      - Hard
      - Soft
      type: string
    onvif_FileProgress:
      properties:
        FileName:
          description: Exported file name
          type: string
        Progress:
          description: Normalized percentage completion for uploading the exported
            file
          type: number
      required:
      - FileName
      - Progress
      type: object
    onvif_FindEventResult:
      properties:
        Event:
          allOf:
          - $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          - description: The description of the event.
        RecordingToken:
          description: The recording where this event was found. Empty string if no
            recording is associated with this event.
          maxLength: 64
          type: string
        StartStateEvent:
          description: If true, indicates that the event is a virtual event generated
            for this particular search session to give the state of a property at
            the start time of the search.
          type: boolean
        Time:
          description: The time when the event occured.
          format: date-time
          type: string
        TrackToken:
          description: A reference to the track where this event was found. Empty
            string if no track is associated with this event.
          maxLength: 64
          type: string
      required:
      - RecordingToken
      - TrackToken
      - Time
      - Event
      - StartStateEvent
      type: object
    onvif_FindEventResultList:
      properties:
        Result:
          description: A FindEventResult structure for each found event matching the
            search.
          items:
            $ref: '#/components/schemas/onvif_FindEventResult'
          type: array
        SearchState:
          allOf:
          - $ref: '#/components/schemas/onvif_SearchState'
          - description: The state of the search when the result is returned. Indicates
              if there can be more results, or if the search is completed.
      required:
      - SearchState
      type: object
    onvif_FindMetadataResult:
      properties:
        RecordingToken:
          description: A reference to the recording containing the metadata.
          maxLength: 64
          type: string
        Time:
          description: The point in time when the matching metadata occurs in the
            metadata track.
          format: date-time
          type: string
        TrackToken:
          description: A reference to the metadata track containing the matching metadata.
          maxLength: 64
          type: string
      required:
      - RecordingToken
      - TrackToken
      - Time
      type: object
    onvif_FindMetadataResultList:
      properties:
        Result:
          description: A FindMetadataResult structure for each found set of Metadata
            matching the search.
          items:
            $ref: '#/components/schemas/onvif_FindMetadataResult'
          type: array
        SearchState:
          allOf:
          - $ref: '#/components/schemas/onvif_SearchState'
          - description: The state of the search when the result is returned. Indicates
              if there can be more results, or if the search is completed.
      required:
      - SearchState
      type: object
    onvif_FindPTZPositionResult:
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: The PTZ position.
        RecordingToken:
          description: A reference to the recording containing the PTZ position.
          maxLength: 64
          type: string
        Time:
          description: The time when the PTZ position was valid.
          format: date-time
          type: string
        TrackToken:
          description: A reference to the metadata track containing the PTZ position.
          maxLength: 64
          type: string
      required:
      - RecordingToken
      - TrackToken
      - Time
      - Position
      type: object
    onvif_FindPTZPositionResultList:
      properties:
        Result:
          description: A FindPTZPositionResult structure for each found PTZ position
            matching the search.
          items:
            $ref: '#/components/schemas/onvif_FindPTZPositionResult'
          type: array
        SearchState:
          allOf:
          - $ref: '#/components/schemas/onvif_SearchState'
          - description: The state of the search when the result is returned. Indicates
              if there can be more results, or if the search is completed.
      required:
      - SearchState
      type: object
    onvif_FindRecordingResultList:
      properties:
        RecordingInformation:
          description: A RecordingInformation structure for each found recording matching
            the search.
          items:
            $ref: '#/components/schemas/onvif_RecordingInformation'
          type: array
        SearchState:
          allOf:
          - $ref: '#/components/schemas/onvif_SearchState'
          - description: The state of the search when the result is returned. Indicates
              if there can be more results, or if the search is completed.
      required:
      - SearchState
      type: object
    onvif_FloatItems:
      properties:
        Items:
          items:
            type: number
          type: array
      type: object
    onvif_FloatRange:
      description: Range of values greater equal Min value and less equal Max value.
      properties:
        Max:
          type: number
        Min:
          type: number
      required:
      - Min
      - Max
      type: object
    onvif_FocusConfiguration:
      properties:
        AutoFocusMode:
          $ref: '#/components/schemas/onvif_AutoFocusMode'
        DefaultSpeed:
          type: number
        FarLimit:
          description: "Parameter to set autofocus far limit (unit: meter).\nIf set\
            \ to 0.0, infinity will be used."
          type: number
        NearLimit:
          description: 'Parameter to set autofocus near limit (unit: meter).'
          type: number
      required:
      - AutoFocusMode
      - DefaultSpeed
      - NearLimit
      - FarLimit
      type: object
    onvif_FocusConfiguration20:
      properties:
        AFMode:
          description: Zero or more modes as defined in enumeration tt:AFModes.
          type: string
        AutoFocusMode:
          allOf:
          - $ref: '#/components/schemas/onvif_AutoFocusMode'
          - description: Mode of auto focus.
        DefaultSpeed:
          type: number
        Extension:
          $ref: '#/components/schemas/onvif_FocusConfiguration20Extension'
        FarLimit:
          description: 'Parameter to set autofocus far limit (unit: meter).'
          type: number
        NearLimit:
          description: 'Parameter to set autofocus near limit (unit: meter).'
          type: number
      required:
      - AutoFocusMode
      type: object
    onvif_FocusConfiguration20Extension:
      type: object
    onvif_FocusMove:
      properties:
        Absolute:
          allOf:
          - $ref: '#/components/schemas/onvif_AbsoluteFocus'
          - description: Parameters for the absolute focus control.
        Continuous:
          allOf:
          - $ref: '#/components/schemas/onvif_ContinuousFocus'
          - description: Parameter for the continuous focus control.
        Relative:
          allOf:
          - $ref: '#/components/schemas/onvif_RelativeFocus'
          - description: Parameters for the relative focus control.
      type: object
    onvif_FocusOptions:
      properties:
        AutoFocusModes:
          items:
            $ref: '#/components/schemas/onvif_AutoFocusMode'
          type: array
        DefaultSpeed:
          $ref: '#/components/schemas/onvif_FloatRange'
        FarLimit:
          $ref: '#/components/schemas/onvif_FloatRange'
        NearLimit:
          $ref: '#/components/schemas/onvif_FloatRange'
      required:
      - DefaultSpeed
      - NearLimit
      - FarLimit
      type: object
    onvif_FocusOptions20:
      properties:
        AutoFocusModes:
          description: Supported modes for auto focus.
          items:
            $ref: '#/components/schemas/onvif_AutoFocusMode'
          type: array
        DefaultSpeed:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of DefaultSpeed.
        Extension:
          $ref: '#/components/schemas/onvif_FocusOptions20Extension'
        FarLimit:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of FarLimit.
        NearLimit:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of NearLimit.
      type: object
    onvif_FocusOptions20Extension:
      properties:
        AFModes:
          description: Supported options for auto focus. Options shall be chosen from
            tt:AFModes.
          items:
            type: string
          type: array
      type: object
    onvif_FocusStatus:
      properties:
        Error:
          description: Error status of focus.
          type: string
        MoveStatus:
          allOf:
          - $ref: '#/components/schemas/onvif_MoveStatus'
          - description: Status of focus MoveStatus.
        Position:
          description: Status of focus position.
          type: number
      required:
      - Position
      - MoveStatus
      - Error
      type: object
    onvif_FocusStatus20:
      properties:
        Error:
          description: Error status of focus.
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_FocusStatus20Extension'
        MoveStatus:
          allOf:
          - $ref: '#/components/schemas/onvif_MoveStatus'
          - description: Status of focus MoveStatus.
        Position:
          description: Status of focus position.
          type: number
      required:
      - Position
      - MoveStatus
      type: object
    onvif_FocusStatus20Extension:
      type: object
    onvif_Frame:
      properties:
        Colorspace:
          description: Default color space of Color definitions in frame. Valid values
            are "RGB" and "YCbCr". Defaults to "YCbCr".
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_FrameExtension'
        Object:
          items:
            $ref: '#/components/schemas/onvif_Object'
          type: array
        ObjectTree:
          $ref: '#/components/schemas/onvif_ObjectTree'
        PTZStatus:
          $ref: '#/components/schemas/onvif_PTZStatus'
        SceneImage:
          format: binary
          type: string
        SceneImageRef:
          type: string
        Source:
          description: Optional name of the analytics module that generated this frame.
          type: string
        Transformation:
          $ref: '#/components/schemas/onvif_Transformation'
        UtcTime:
          format: date-time
          type: string
      required:
      - UtcTime
      type: object
    onvif_FrameExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_FrameExtension2'
        MotionInCells:
          $ref: '#/components/schemas/onvif_MotionInCells'
      type: object
    onvif_FrameExtension2:
      type: object
    onvif_G711DecOptions:
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported bitrates in kbps
        SampleRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported sample rates in kHz
      required:
      - Bitrate
      - SampleRateRange
      type: object
    onvif_G726DecOptions:
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported bitrates in kbps
        SampleRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported sample rates in kHz
      required:
      - Bitrate
      - SampleRateRange
      type: object
    onvif_GenericEapPwdConfigurationExtension:
      type: object
    onvif_GeoLocation:
      properties:
        elevation:
          description: Hight in meters above sea level.
          type: number
        lat:
          description: North south location as angle.
          type: number
        lon:
          description: East west location as angle.
          type: number
      type: object
    onvif_GeoOrientation:
      properties:
        pitch:
          description: Rotation around the y axis.
          type: number
        roll:
          description: Rotation around the x axis.
          type: number
        yaw:
          description: Rotation around the z axis.
          type: number
      type: object
    onvif_GetRecordingJobsResponseItem:
      properties:
        JobConfiguration:
          $ref: '#/components/schemas/onvif_RecordingJobConfiguration'
        JobToken:
          maxLength: 64
          type: string
      required:
      - JobToken
      - JobConfiguration
      type: object
    onvif_GetRecordingsResponseItem:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_RecordingConfiguration'
          - description: Configuration of the recording.
        RecordingToken:
          description: Token of the recording.
          maxLength: 64
          type: string
        Tracks:
          allOf:
          - $ref: '#/components/schemas/onvif_GetTracksResponseList'
          - description: List of tracks.
      required:
      - RecordingToken
      - Configuration
      - Tracks
      type: object
    onvif_GetTracksResponseItem:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_TrackConfiguration'
          - description: Configuration of the track.
        TrackToken:
          description: Token of the track.
          maxLength: 64
          type: string
      required:
      - TrackToken
      - Configuration
      type: object
    onvif_GetTracksResponseList:
      properties:
        Track:
          description: Configuration of a track.
          items:
            $ref: '#/components/schemas/onvif_GetTracksResponseItem'
          type: array
      type: object
    onvif_H264Configuration:
      properties:
        GovLength:
          description: Group of Video frames length. Determines typically the interval
            in which the I-Frames will be coded. An entry of 1 indicates I-Frames
            are continuously generated. An entry of 2 indicates that every 2nd image
            is an I-Frame, and 3 only every 3rd frame, etc. The frames in between
            are coded as P or B Frames.
          format: int32
          type: integer
        H264Profile:
          allOf:
          - $ref: '#/components/schemas/onvif_H264Profile'
          - description: the H.264 profile, either baseline, main, extended or high
      required:
      - GovLength
      - H264Profile
      type: object
    onvif_H264DecOptions:
      properties:
        ResolutionsAvailable:
          description: List of supported H.264 Video Resolutions
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
        SupportedFrameRate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported H.264 framerate range in fps
        SupportedH264Profiles:
          description: List of supported H264 Profiles (either baseline, main, extended
            or high)
          items:
            $ref: '#/components/schemas/onvif_H264Profile'
          type: array
        SupportedInputBitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported H.264 bitrate range in kbps
      required:
      - ResolutionsAvailable
      - SupportedH264Profiles
      - SupportedInputBitrate
      - SupportedFrameRate
      type: object
    onvif_H264Options:
      properties:
        EncodingIntervalRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported encoding interval range. The encoding interval
              corresponds to the number of frames devided by the encoded frames. An
              encoding interval value of "1" means that all frames are encoded.
        FrameRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported frame rate in fps (frames per second).
        GovLengthRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported group of Video frames length. This value typically
              corresponds to the I-Frame distance.
        H264ProfilesSupported:
          description: List of supported H.264 profiles.
          items:
            $ref: '#/components/schemas/onvif_H264Profile'
          type: array
        ResolutionsAvailable:
          description: List of supported image sizes.
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
      required:
      - ResolutionsAvailable
      - GovLengthRange
      - FrameRateRange
      - EncodingIntervalRange
      - H264ProfilesSupported
      type: object
    onvif_H264Options2:
      allOf:
      - $ref: '#/components/schemas/onvif_H264Options'
      - properties:
          BitrateRange:
            allOf:
            - $ref: '#/components/schemas/onvif_IntRange'
            - description: Supported range of encoded bitrate in kbps.
        required:
        - BitrateRange
        type: object
    onvif_H264Profile:
      enum:
      - Baseline
      - Main
      - Extended
      - High
      type: string
    onvif_HostnameInformation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_HostnameInformationExtension'
        FromDHCP:
          description: Indicates whether the hostname is obtained from DHCP or not.
          type: boolean
        Name:
          description: Indicates the hostname.
          type: string
      required:
      - FromDHCP
      type: object
    onvif_HostnameInformationExtension:
      type: object
    onvif_IOCapabilities:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_IOCapabilitiesExtension'
        InputConnectors:
          description: Number of input connectors.
          format: int32
          type: integer
        RelayOutputs:
          description: Number of relay outputs.
          format: int32
          type: integer
      type: object
    onvif_IOCapabilitiesExtension:
      properties:
        Auxiliary:
          type: boolean
        AuxiliaryCommands:
          items:
            maxLength: 128
            type: string
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_IOCapabilitiesExtension2'
      required:
      - Extension
      type: object
    onvif_IOCapabilitiesExtension2:
      type: object
    onvif_IPAddress:
      properties:
        IPv4Address:
          description: IPv4 address.
          type: string
        IPv6Address:
          description: IPv6 address
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/onvif_IPType'
          - description: Indicates if the address is an IPv4 or IPv6 address.
      required:
      - Type
      type: object
    onvif_IPAddressFilter:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_IPAddressFilterExtension'
        IPv4Address:
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv4Address'
          type: array
        IPv6Address:
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
        Type:
          $ref: '#/components/schemas/onvif_IPAddressFilterType'
      required:
      - Type
      type: object
    onvif_IPAddressFilterExtension:
      type: object
    onvif_IPAddressFilterType:
      enum:
      - Allow
      - Deny
      type: string
    onvif_IPType:
      enum:
      - IPv4
      - IPv6
      type: string
    onvif_IPv4Configuration:
      properties:
        DHCP:
          description: Indicates whether or not DHCP is used.
          type: boolean
        FromDHCP:
          allOf:
          - $ref: '#/components/schemas/onvif_PrefixedIPv4Address'
          - description: IPv4 address configured by using DHCP.
        LinkLocal:
          allOf:
          - $ref: '#/components/schemas/onvif_PrefixedIPv4Address'
          - description: Link local address.
        Manual:
          description: List of manually added IPv4 addresses.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv4Address'
          type: array
      required:
      - DHCP
      type: object
    onvif_IPv4NetworkInterface:
      properties:
        Config:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv4Configuration'
          - description: IPv4 configuration.
        Enabled:
          description: Indicates whether or not IPv4 is enabled.
          type: boolean
      required:
      - Enabled
      - Config
      type: object
    onvif_IPv4NetworkInterfaceSetConfiguration:
      properties:
        DHCP:
          description: Indicates whether or not DHCP is used.
          type: boolean
        Enabled:
          description: Indicates whether or not IPv4 is enabled.
          type: boolean
        Manual:
          description: List of manually added IPv4 addresses.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv4Address'
          type: array
      type: object
    onvif_IPv6Configuration:
      properties:
        AcceptRouterAdvert:
          description: Indicates whether router advertisment is used.
          type: boolean
        DHCP:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv6DHCPConfiguration'
          - description: DHCP configuration.
        Extension:
          $ref: '#/components/schemas/onvif_IPv6ConfigurationExtension'
        FromDHCP:
          description: List of IPv6 addresses configured by using DHCP.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
        FromRA:
          description: List of IPv6 addresses configured by using router advertisment.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
        LinkLocal:
          description: List of link local IPv6 addresses.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
        Manual:
          description: List of manually entered IPv6 addresses.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
      required:
      - DHCP
      type: object
    onvif_IPv6ConfigurationExtension:
      type: object
    onvif_IPv6DHCPConfiguration:
      enum:
      - Auto
      - Stateful
      - Stateless
      - false
      type: string
    onvif_IPv6NetworkInterface:
      properties:
        Config:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv6Configuration'
          - description: IPv6 configuration.
        Enabled:
          description: Indicates whether or not IPv6 is enabled.
          type: boolean
      required:
      - Enabled
      type: object
    onvif_IPv6NetworkInterfaceSetConfiguration:
      properties:
        AcceptRouterAdvert:
          description: Indicates whether router advertisment is used.
          type: boolean
        DHCP:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv6DHCPConfiguration'
          - description: DHCP configuration.
        Enabled:
          description: Indicates whether or not IPv6 is enabled.
          type: boolean
        Manual:
          description: List of manually added IPv6 addresses.
          items:
            $ref: '#/components/schemas/onvif_PrefixedIPv6Address'
          type: array
      type: object
    onvif_Idle:
      type: object
    onvif_ImageSendingType:
      enum:
      - Embedded
      - LocalStorage
      - RemoteStorage
      type: string
    onvif_ImageStabilization:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImageStabilizationExtension'
        Level:
          description: Optional level parameter (unit unspecified)
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_ImageStabilizationMode'
          - description: Parameter to enable/disable Image Stabilization feature.
      required:
      - Mode
      type: object
    onvif_ImageStabilizationExtension:
      type: object
    onvif_ImageStabilizationMode:
      enum:
      - false
      - true
      - AUTO
      - Extended
      type: string
    onvif_ImageStabilizationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImageStabilizationOptionsExtension'
        Level:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of the Image Stabilization.
        Mode:
          description: Supported options of Image Stabilization mode parameter.
          items:
            $ref: '#/components/schemas/onvif_ImageStabilizationMode'
          type: array
      required:
      - Mode
      type: object
    onvif_ImageStabilizationOptionsExtension:
      type: object
    onvif_ImagingCapabilities:
      properties:
        XAddr:
          description: Imaging service URI.
          type: string
      required:
      - XAddr
      type: object
    onvif_ImagingOptions:
      properties:
        BacklightCompensation:
          $ref: '#/components/schemas/onvif_BacklightCompensationOptions'
        Brightness:
          $ref: '#/components/schemas/onvif_FloatRange'
        ColorSaturation:
          $ref: '#/components/schemas/onvif_FloatRange'
        Contrast:
          $ref: '#/components/schemas/onvif_FloatRange'
        Exposure:
          $ref: '#/components/schemas/onvif_ExposureOptions'
        Focus:
          $ref: '#/components/schemas/onvif_FocusOptions'
        IrCutFilterModes:
          items:
            $ref: '#/components/schemas/onvif_IrCutFilterMode'
          type: array
        Sharpness:
          $ref: '#/components/schemas/onvif_FloatRange'
        WhiteBalance:
          $ref: '#/components/schemas/onvif_WhiteBalanceOptions'
        WideDynamicRange:
          $ref: '#/components/schemas/onvif_WideDynamicRangeOptions'
      required:
      - BacklightCompensation
      - Brightness
      - ColorSaturation
      - Contrast
      - Exposure
      - Focus
      - IrCutFilterModes
      - Sharpness
      - WideDynamicRange
      - WhiteBalance
      type: object
    onvif_ImagingOptions20:
      properties:
        BacklightCompensation:
          allOf:
          - $ref: '#/components/schemas/onvif_BacklightCompensationOptions20'
          - description: Valid range of Backlight Compensation.
        Brightness:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of Brightness.
        ColorSaturation:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of Color Saturation.
        Contrast:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of Contrast.
        Exposure:
          allOf:
          - $ref: '#/components/schemas/onvif_ExposureOptions20'
          - description: Valid range of Exposure.
        Extension:
          $ref: '#/components/schemas/onvif_ImagingOptions20Extension'
        Focus:
          allOf:
          - $ref: '#/components/schemas/onvif_FocusOptions20'
          - description: Valid range of Focus.
        IrCutFilterModes:
          description: Valid range of IrCutFilterModes.
          items:
            $ref: '#/components/schemas/onvif_IrCutFilterMode'
          type: array
        Sharpness:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid range of Sharpness.
        WhiteBalance:
          allOf:
          - $ref: '#/components/schemas/onvif_WhiteBalanceOptions20'
          - description: Valid range of WhiteBalance.
        WideDynamicRange:
          allOf:
          - $ref: '#/components/schemas/onvif_WideDynamicRangeOptions20'
          - description: Valid range of WideDynamicRange.
      type: object
    onvif_ImagingOptions20Extension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImagingOptions20Extension2'
        ImageStabilization:
          allOf:
          - $ref: '#/components/schemas/onvif_ImageStabilizationOptions'
          - description: Options of parameters for Image Stabilization feature.
      type: object
    onvif_ImagingOptions20Extension2:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImagingOptions20Extension3'
        IrCutFilterAutoAdjustment:
          allOf:
          - $ref: '#/components/schemas/onvif_IrCutFilterAutoAdjustmentOptions'
          - description: Options of parameters for adjustment of Ir cut filter auto
              mode.
      type: object
    onvif_ImagingOptions20Extension3:
      properties:
        DefoggingOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_DefoggingOptions'
          - description: Options of parameters for Defogging feature.
        Extension:
          $ref: '#/components/schemas/onvif_ImagingOptions20Extension4'
        NoiseReductionOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_NoiseReductionOptions'
          - description: Options of parameter for Noise Reduction feature.
        ToneCompensationOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_ToneCompensationOptions'
          - description: Options of parameters for Tone Compensation feature.
      type: object
    onvif_ImagingOptions20Extension4:
      type: object
    onvif_ImagingSettings:
      properties:
        BacklightCompensation:
          allOf:
          - $ref: '#/components/schemas/onvif_BacklightCompensation'
          - description: Enabled/disabled BLC mode (on/off).
        Brightness:
          description: Image brightness (unit unspecified).
          type: number
        ColorSaturation:
          description: Color saturation of the image (unit unspecified).
          type: number
        Contrast:
          description: Contrast of the image (unit unspecified).
          type: number
        Exposure:
          allOf:
          - $ref: '#/components/schemas/onvif_Exposure'
          - description: Exposure mode of the device.
        Extension:
          $ref: '#/components/schemas/onvif_ImagingSettingsExtension'
        Focus:
          allOf:
          - $ref: '#/components/schemas/onvif_FocusConfiguration'
          - description: Focus configuration.
        IrCutFilter:
          allOf:
          - $ref: '#/components/schemas/onvif_IrCutFilterMode'
          - description: Infrared Cutoff Filter settings.
        Sharpness:
          description: Sharpness of the Video image.
          type: number
        WhiteBalance:
          allOf:
          - $ref: '#/components/schemas/onvif_WhiteBalance'
          - description: White balance settings.
        WideDynamicRange:
          allOf:
          - $ref: '#/components/schemas/onvif_WideDynamicRange'
          - description: WDR settings.
      type: object
    onvif_ImagingSettings20:
      description: Type describing the ImagingSettings of a VideoSource. The supported
        options and ranges can be obtained via the GetOptions command.
      properties:
        BacklightCompensation:
          allOf:
          - $ref: '#/components/schemas/onvif_BacklightCompensation20'
          - description: Enabled/disabled BLC mode (on/off).
        Brightness:
          description: Image brightness (unit unspecified).
          type: number
        ColorSaturation:
          description: Color saturation of the image (unit unspecified).
          type: number
        Contrast:
          description: Contrast of the image (unit unspecified).
          type: number
        Exposure:
          allOf:
          - $ref: '#/components/schemas/onvif_Exposure20'
          - description: Exposure mode of the device.
        Extension:
          $ref: '#/components/schemas/onvif_ImagingSettingsExtension20'
        Focus:
          allOf:
          - $ref: '#/components/schemas/onvif_FocusConfiguration20'
          - description: Focus configuration.
        IrCutFilter:
          allOf:
          - $ref: '#/components/schemas/onvif_IrCutFilterMode'
          - description: Infrared Cutoff Filter settings.
        Sharpness:
          description: Sharpness of the Video image.
          type: number
        WhiteBalance:
          allOf:
          - $ref: '#/components/schemas/onvif_WhiteBalance20'
          - description: White balance settings.
        WideDynamicRange:
          allOf:
          - $ref: '#/components/schemas/onvif_WideDynamicRange20'
          - description: WDR settings.
      type: object
    onvif_ImagingSettingsExtension:
      type: object
    onvif_ImagingSettingsExtension20:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImagingSettingsExtension202'
        ImageStabilization:
          allOf:
          - $ref: '#/components/schemas/onvif_ImageStabilization'
          - description: Optional element to configure Image Stabilization feature.
      type: object
    onvif_ImagingSettingsExtension202:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImagingSettingsExtension203'
        IrCutFilterAutoAdjustment:
          description: An optional parameter applied to only auto mode to adjust timing
            of toggling Ir cut filter.
          items:
            $ref: '#/components/schemas/onvif_IrCutFilterAutoAdjustment'
          type: array
      type: object
    onvif_ImagingSettingsExtension203:
      properties:
        Defogging:
          allOf:
          - $ref: '#/components/schemas/onvif_Defogging'
          - description: Optional element to configure Image Defogging.
        Extension:
          $ref: '#/components/schemas/onvif_ImagingSettingsExtension204'
        NoiseReduction:
          allOf:
          - $ref: '#/components/schemas/onvif_NoiseReduction'
          - description: Optional element to configure Image Noise Reduction.
        ToneCompensation:
          allOf:
          - $ref: '#/components/schemas/onvif_ToneCompensation'
          - description: Optional element to configure Image Contrast Compensation.
      type: object
    onvif_ImagingSettingsExtension204:
      type: object
    onvif_ImagingStatus:
      properties:
        FocusStatus:
          $ref: '#/components/schemas/onvif_FocusStatus'
      required:
      - FocusStatus
      type: object
    onvif_ImagingStatus20:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ImagingStatus20Extension'
        FocusStatus20:
          allOf:
          - $ref: '#/components/schemas/onvif_FocusStatus20'
          - description: Status of focus.
      type: object
    onvif_ImagingStatus20Extension:
      type: object
    onvif_IntItems:
      description: List of values.
      properties:
        Items:
          items:
            format: int32
            type: integer
          type: array
      type: object
    onvif_IntRange:
      description: Range of values greater equal Min value and less equal Max value.
      properties:
        Max:
          format: int32
          type: integer
        Min:
          format: int32
          type: integer
      required:
      - Min
      - Max
      type: object
    onvif_IntRectangle:
      description: Rectangle defined by lower left corner position and size. Units
        are pixel.
      properties:
        height:
          format: int32
          type: integer
        width:
          format: int32
          type: integer
        x:
          format: int32
          type: integer
        y:
          format: int32
          type: integer
      required:
      - x
      - y
      - width
      - height
      type: object
    onvif_IntRectangleRange:
      description: Range of a rectangle. The rectangle itself is defined by lower
        left corner position and size. Units are pixel.
      properties:
        HeightRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of height.
        WidthRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of width.
        XRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of X-axis.
        YRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of Y-axis.
      required:
      - XRange
      - YRange
      - WidthRange
      - HeightRange
      type: object
    onvif_IrCutFilterAutoAdjustment:
      properties:
        BoundaryOffset:
          description: Adjusts boundary exposure level for toggling Ir cut filter
            to on/off specified with unitless normalized value from +1.0 to -1.0.
            Zero is default and -1.0 is the darkest adjustment (Unitless).
          type: number
        BoundaryType:
          description: Specifies which boundaries to automatically toggle Ir cut filter
            following parameters are applied to. Its options shall be chosen from
            tt:IrCutFilterAutoBoundaryType.
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_IrCutFilterAutoAdjustmentExtension'
        ResponseTime:
          description: Delay time of toggling Ir cut filter to on/off after crossing
            of the boundary exposure levels.
          format: date-time
          type: string
      required:
      - BoundaryType
      type: object
    onvif_IrCutFilterAutoAdjustmentExtension:
      type: object
    onvif_IrCutFilterAutoAdjustmentOptions:
      properties:
        BoundaryOffset:
          description: Indicates whether or not boundary offset for toggling Ir cut
            filter is supported.
          type: boolean
        BoundaryType:
          description: Supported options of boundary types for adjustment of Ir cut
            filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
          items:
            type: string
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_IrCutFilterAutoAdjustmentOptionsExtension'
        ResponseTimeRange:
          allOf:
          - $ref: '#/components/schemas/onvif_DurationRange'
          - description: Supported range of delay time for toggling Ir cut filter.
      required:
      - BoundaryType
      type: object
    onvif_IrCutFilterAutoAdjustmentOptionsExtension:
      type: object
    onvif_IrCutFilterAutoBoundaryType:
      enum:
      - Common
      - ToOn
      - ToOff
      - Extended
      type: string
    onvif_IrCutFilterMode:
      enum:
      - true
      - false
      - AUTO
      type: string
    onvif_ItemList:
      properties:
        ElementItem:
          description: Complex value structure.
          items:
            $ref: '#/components/schemas/onvif_ElementItem'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_ItemListExtension'
        SimpleItem:
          description: Value name pair as defined by the corresponding description.
          items:
            $ref: '#/components/schemas/onvif_SimpleItem'
          type: array
      type: object
    onvif_ItemListDescription:
      description: "Describes a list of items. Each item in the list shall have a\
        \ unique name.\n\t\t\tThe list is designed as linear structure without optional\
        \ or unbounded elements.\n\t\t\tUse ElementItems only when complex structures\
        \ are inevitable."
      properties:
        ElementItemDescription:
          description: Description of a complex type. The Type must reference a defined
            type.
          items:
            $ref: '#/components/schemas/onvif_ElementItemDescription'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_ItemListDescriptionExtension'
        SimpleItemDescription:
          description: Description of a simple item. The type must be of cathegory
            simpleType (xs:string, xs:integer, xs:float, ...).
          items:
            $ref: '#/components/schemas/onvif_SimpleItemDescription'
          type: array
      type: object
    onvif_ItemListDescriptionExtension:
      type: object
    onvif_ItemListExtension:
      type: object
    onvif_JpegDecOptions:
      properties:
        ResolutionsAvailable:
          description: List of supported Jpeg Video Resolutions
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
        SupportedFrameRate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported Jpeg framerate range in fps
        SupportedInputBitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported Jpeg bitrate range in kbps
      required:
      - ResolutionsAvailable
      - SupportedInputBitrate
      - SupportedFrameRate
      type: object
    onvif_JpegOptions:
      properties:
        EncodingIntervalRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported encoding interval range. The encoding interval
              corresponds to the number of frames devided by the encoded frames. An
              encoding interval value of "1" means that all frames are encoded.
        FrameRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported frame rate in fps (frames per second).
        ResolutionsAvailable:
          description: List of supported image sizes.
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
      required:
      - ResolutionsAvailable
      - FrameRateRange
      - EncodingIntervalRange
      type: object
    onvif_JpegOptions2:
      allOf:
      - $ref: '#/components/schemas/onvif_JpegOptions'
      - properties:
          BitrateRange:
            allOf:
            - $ref: '#/components/schemas/onvif_IntRange'
            - description: Supported range of encoded bitrate in kbps.
        required:
        - BitrateRange
        type: object
    onvif_Layout:
      description: A layout describes a set of Video windows that are displayed simultaniously
        on a display.
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_LayoutExtension'
        PaneLayout:
          description: List of panes assembling the display layout.
          items:
            $ref: '#/components/schemas/onvif_PaneLayout'
          type: array
      required:
      - PaneLayout
      type: object
    onvif_LayoutExtension:
      type: object
    onvif_LayoutOptions:
      description: The options supported for a display layout.
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_LayoutOptionsExtension'
        PaneLayoutOptions:
          description: Lists the possible Pane Layouts of the Video Output
          items:
            $ref: '#/components/schemas/onvif_PaneLayoutOptions'
          type: array
      required:
      - PaneLayoutOptions
      type: object
    onvif_LayoutOptionsExtension:
      type: object
    onvif_LensDescription:
      properties:
        FocalLength:
          description: Optional focal length of the optical system.
          type: number
        Offset:
          allOf:
          - $ref: '#/components/schemas/onvif_LensOffset'
          - description: Offset of the lens center to the imager center in normalized
              coordinates.
        Projection:
          description: "Radial description of the projection characteristics. The\
            \ resulting curve is defined by the B-Spline interpolation \n\t\t\t\t\t\
            over the given elements. The element for Radius zero shall not be provided.\
            \ The projection points shall be ordered with ascending Radius. \n\t\t\
            \t\t\tItems outside the last projection Radius shall be assumed to be\
            \ invisible (black)."
          items:
            $ref: '#/components/schemas/onvif_LensProjection'
          type: array
        XFactor:
          description: Compensation of the x coordinate needed for the ONVIF normalized
            coordinate system.
          type: number
      required:
      - Offset
      - Projection
      - XFactor
      type: object
    onvif_LensOffset:
      properties:
        x:
          description: Optional horizontal offset of the lens center in normalized
            coordinates.
          type: number
        y:
          description: Optional vertical offset of the lens center in normalized coordinates.
          type: number
      type: object
    onvif_LensProjection:
      properties:
        Angle:
          description: Angle of incidence.
          type: number
        Radius:
          description: Mapping radius as a consequence of the emergent angle.
          type: number
        Transmittance:
          description: Optional ray absorption at the given angle due to vignetting.
            A value of one means no absorption.
          type: number
      required:
      - Angle
      - Radius
      type: object
    onvif_LicensePlateInfo:
      properties:
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/onvif_StringLikelihood'
          - description: Describe the country of the license plate, in order to avoid
              the same license plate number.
        IssuingEntity:
          allOf:
          - $ref: '#/components/schemas/onvif_StringLikelihood'
          - description: State province or authority that issue the license plate.
        PlateNumber:
          allOf:
          - $ref: '#/components/schemas/onvif_StringLikelihood'
          - description: A string of vehicle license plate number.
        PlateType:
          allOf:
          - $ref: '#/components/schemas/onvif_StringLikelihood'
          - description: A description of the vehicle license plate, e.g., "Normal",
              "Police", "Diplomat"
      required:
      - PlateNumber
      type: object
    onvif_LocalLocation:
      properties:
        x:
          description: East west location as angle.
          type: number
        y:
          description: North south location as angle.
          type: number
        z:
          description: Offset in meters from the sea level.
          type: number
      type: object
    onvif_LocalOrientation:
      properties:
        pan:
          description: Rotation around the y axis.
          type: number
        roll:
          description: Rotation around the x axis.
          type: number
        tilt:
          description: Rotation around the z axis.
          type: number
      type: object
    onvif_LocationEntity:
      properties:
        AutoGeo:
          description: If set the geo location is obtained internally.
          type: boolean
        Entity:
          description: Entity type the entry refers to, use a value from the tt:Entity
            enumeration.
          type: string
        Fixed:
          description: If this value is true the entity cannot be deleted.
          type: boolean
        GeoLocation:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoLocation'
          - description: Location on earth.
        GeoOrientation:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoOrientation'
          - description: Orientation relative to earth.
        GeoSource:
          description: Optional reference to the XAddr of another devices DeviceManagement
            service.
          type: string
        LocalLocation:
          allOf:
          - $ref: '#/components/schemas/onvif_LocalLocation'
          - description: Indoor location offset.
        LocalOrientation:
          allOf:
          - $ref: '#/components/schemas/onvif_LocalOrientation'
          - description: Indoor orientation offset.
        Token:
          description: Optional entity token.
          maxLength: 64
          type: string
      type: object
    onvif_MaximumNumberOfOSDs:
      properties:
        Date:
          format: int32
          type: integer
        DateAndTime:
          format: int32
          type: integer
        Image:
          format: int32
          type: integer
        PlainText:
          format: int32
          type: integer
        Time:
          format: int32
          type: integer
        Total:
          format: int32
          type: integer
      required:
      - Total
      type: object
    onvif_MediaAttributes:
      description: A set of media attributes valid for a recording at a point in time
        or for a time interval.
      properties:
        From:
          description: The attributes are valid from this point in time in the recording.
          format: date-time
          type: string
        RecordingToken:
          description: A reference to the recording that has these attributes.
          maxLength: 64
          type: string
        TrackAttributes:
          description: A set of attributes for each track.
          items:
            $ref: '#/components/schemas/onvif_TrackAttributes'
          type: array
        Until:
          description: The attributes are valid until this point in time in the recording.
            Can be equal to 'From' to indicate that the attributes are only known
            to be valid for this particular point in time.
          format: date-time
          type: string
      required:
      - RecordingToken
      - From
      - Until
      type: object
    onvif_MediaCapabilities:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_MediaCapabilitiesExtension'
        StreamingCapabilities:
          allOf:
          - $ref: '#/components/schemas/onvif_RealTimeStreamingCapabilities'
          - description: Streaming capabilities.
        XAddr:
          description: Media service URI.
          type: string
      required:
      - XAddr
      - StreamingCapabilities
      type: object
    onvif_MediaCapabilitiesExtension:
      properties:
        ProfileCapabilities:
          $ref: '#/components/schemas/onvif_ProfileCapabilities'
      required:
      - ProfileCapabilities
      type: object
    onvif_MediaUri:
      properties:
        InvalidAfterConnect:
          description: Indicates if the Uri is only valid until the connection is
            established. The value shall be set to "false".
          type: boolean
        InvalidAfterReboot:
          description: Indicates if the Uri is invalid after a reboot of the device.
            The value shall be set to "false".
          type: boolean
        Timeout:
          description: Duration how long the Uri is valid. This parameter shall be
            set to PT0S to indicate that this stream URI is indefinitely valid even
            if the profile changes
          format: date-time
          type: string
        Uri:
          description: Stable Uri to be used for requesting the media stream
          type: string
      required:
      - Uri
      - InvalidAfterConnect
      - InvalidAfterReboot
      - Timeout
      type: object
    onvif_Merge:
      properties:
        from:
          items:
            $ref: '#/components/schemas/onvif_ObjectId'
          type: array
        to:
          $ref: '#/components/schemas/onvif_ObjectId'
      required:
      - from
      - to
      type: object
    onvif_Message:
      properties:
        Data:
          $ref: '#/components/schemas/onvif_ItemList'
        Extension:
          $ref: '#/components/schemas/onvif_MessageExtension'
        Key:
          $ref: '#/components/schemas/onvif_ItemList'
        PropertyOperation:
          $ref: '#/components/schemas/onvif_PropertyOperation'
        Source:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemList'
          - description: Token value pairs that triggered this message. Typically
              only one item is present.
        UtcTime:
          format: date-time
          type: string
      required:
      - UtcTime
      type: object
    onvif_MessageDescription:
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemListDescription'
          - description: Describes the payload of the message.
        Extension:
          $ref: '#/components/schemas/onvif_MessageDescriptionExtension'
        IsProperty:
          description: Must be set to true when the described Message relates to a
            property. An alternative term of "property" is a "state" in contrast to
            a pure event, which contains relevant information for only a single point
            in time.
          type: boolean
        Key:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemListDescription'
          - description: Describes optional message payload parameters that may be
              used as key. E.g. object IDs of tracked objects are conveyed as key.
        Source:
          allOf:
          - $ref: '#/components/schemas/onvif_ItemListDescription'
          - description: "Set of tokens producing this message. The list may only\
              \ contain SimpleItemDescription items.\n\t\t\t\t\tThe set of tokens\
              \ identify the component within the WS-Endpoint, which is responsible\
              \ for the producing the message."
      type: object
    onvif_MessageDescriptionExtension:
      type: object
    onvif_MessageExtension:
      type: object
    onvif_Messages:
      allOf:
      - $ref: '#/components/schemas/onvif_MessageDescription'
      - properties:
          ParentTopic:
            description: The topic of the message. For historical reason the element
              is named ParentTopic, but the full topic is expected.
            type: string
        required:
        - ParentTopic
        type: object
      description: "The analytics modules and rule engine produce Events, which must\
        \ be listed within the Analytics Module Description. In order to do so\n\t\
        \t\t\t\t\tthe structure of the Message is defined and consists of three groups:\
        \ Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever\
        \ applicable.\n\t\t\t\t\t\tThe name of all Items must be unique within all\
        \ Items contained in any group of this Message.\n\t\t\t\t\t\tDepending on\
        \ the component multiple parameters or none may be needed to identify the\
        \ component uniquely."
    onvif_MetadataAttributes:
      properties:
        CanContainAnalytics:
          description: Indicates that there can be analytics data in the metadata
            track in the specified time interval.
          type: boolean
        CanContainNotifications:
          description: Indicates that there can be notifications in the metadata track
            in the specified time interval.
          type: boolean
        CanContainPTZ:
          description: Indicates that there can be PTZ data in the metadata track
            in the specified time interval.
          type: boolean
        PtzSpaces:
          description: List of all PTZ spaces active for recording. Note that events
            are only recorded on position changes and the actual point of recording
            may not necessarily contain an event of the specified type.
          type: string
      required:
      - CanContainPTZ
      - CanContainAnalytics
      - CanContainNotifications
      type: object
    onvif_MetadataCompressionType:
      enum:
      - None
      - GZIP
      - EXI
      type: string
    onvif_MetadataConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Analytics:
            description: Defines whether the streamed metadata will include metadata
              from the analytics engines (video, cell motion, audio etc.)
            type: boolean
          AnalyticsEngineConfiguration:
            allOf:
            - $ref: '#/components/schemas/onvif_AnalyticsEngineConfiguration'
            - description: "Indication which AnalyticsModules shall output metadata.\n\
                \t\t\t\t\t\t\tNote that the streaming behavior is undefined if the\
                \ list includes items that are not part of the associated AnalyticsConfiguration."
          CompressionType:
            description: Optional parameter to configure compression type of Metadata
              payload. Use values from enumeration MetadataCompressionType.
            type: string
          Events:
            allOf:
            - $ref: '#/components/schemas/onvif_EventSubscription'
            - description: "Optional element to configure the streaming of events.\
                \ A client might be interested in receiving all, \n\t\t\t\t\t\t\t\t\
                none or some of the events produced by the device:"
          Extension:
            $ref: '#/components/schemas/onvif_MetadataConfigurationExtension'
          GeoLocation:
            description: Optional parameter to configure if the metadata stream shall
              contain the Geo Location coordinates of each target.
            type: boolean
          Multicast:
            allOf:
            - $ref: '#/components/schemas/onvif_MulticastConfiguration'
            - description: Defines the multicast settings that could be used for video
                streaming.
          PTZStatus:
            allOf:
            - $ref: '#/components/schemas/onvif_PTZFilter'
            - description: optional element to configure which PTZ related data is
                to include in the metadata stream
          SessionTimeout:
            description: The rtsp session timeout for the related audio stream (when
              using Media2 Service, this value is deprecated and ignored)
            format: date-time
            type: string
          ShapePolygon:
            description: Optional parameter to configure if the generated metadata
              stream should contain shape information as polygon.
            type: boolean
        required:
        - Multicast
        - SessionTimeout
        type: object
    onvif_MetadataConfigurationExtension:
      type: object
    onvif_MetadataConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_MetadataConfigurationOptionsExtension'
        GeoLocation:
          description: True if the device is able to stream the Geo Located positions
            of each target.
          type: boolean
        MaxContentFilterSize:
          description: A device signalling support for content filtering shall support
            expressions with the provided expression size.
          format: int32
          type: integer
        PTZStatusFilterOptions:
          $ref: '#/components/schemas/onvif_PTZStatusFilterOptions'
      required:
      - PTZStatusFilterOptions
      type: object
    onvif_MetadataConfigurationOptionsExtension:
      properties:
        CompressionType:
          description: List of supported metadata compression type. Its options shall
            be chosen from tt:MetadataCompressionType.
          items:
            type: string
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_MetadataConfigurationOptionsExtension2'
      type: object
    onvif_MetadataConfigurationOptionsExtension2:
      type: object
    onvif_MetadataFilter:
      properties:
        MetadataStreamFilter:
          type: string
      required:
      - MetadataStreamFilter
      type: object
    onvif_MetadataInput:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_MetadataInputExtension'
        MetadataConfig:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      type: object
    onvif_MetadataInputExtension:
      type: object
    onvif_MetadataStream:
      properties:
        Event:
          items:
            oneOf:
            - $ref: '#/components/schemas/onvif_EventStreamChoice0'
            - $ref: '#/components/schemas/onvif_EventStreamChoice1'
            - $ref: '#/components/schemas/onvif_EventStreamChoice2'
          type: array
        Extension:
          items:
            $ref: '#/components/schemas/onvif_MetadataStreamExtension'
          type: array
        PTZ:
          items:
            oneOf:
            - $ref: '#/components/schemas/onvif_PTZStreamChoice0'
            - $ref: '#/components/schemas/onvif_PTZStreamChoice1'
            - $ref: '#/components/schemas/onvif_PTZStreamChoice2'
          type: array
        VideoAnalytics:
          items:
            oneOf:
            - $ref: '#/components/schemas/onvif_VideoAnalyticsStreamChoice0'
            - $ref: '#/components/schemas/onvif_VideoAnalyticsStreamChoice1'
            - $ref: '#/components/schemas/onvif_VideoAnalyticsStreamChoice2'
          type: array
      type: object
    onvif_MetadataStreamExtension:
      properties:
        AudioAnalyticsStream:
          $ref: '#/components/schemas/onvif_AudioAnalyticsStream'
        Extension:
          $ref: '#/components/schemas/onvif_MetadataStreamExtension2'
      type: object
    onvif_MetadataStreamExtension2:
      type: object
    onvif_ModeOfOperation:
      enum:
      - Idle
      - Active
      - Unknown
      type: string
    onvif_MotionExpression:
      properties:
        Expression:
          description: Motion Expression data structure contains motion expression
            which is based on Scene Descriptor schema with XPATH syntax. The Type
            argument could allow introduction of different dialects
          type: string
        Type:
          type: string
      required:
      - Expression
      type: object
    onvif_MotionExpressionConfiguration:
      properties:
        MotionExpression:
          allOf:
          - $ref: '#/components/schemas/onvif_MotionExpression'
          - description: Contains Rule MotionExpression configuration
      required:
      - MotionExpression
      type: object
    onvif_MotionInCells:
      properties:
        Cells:
          description: A “1” denotes a cell where motion is detected and a “0” an
            empty cell. The first cell is in the upper left corner. Then the cell
            order goes first from left to right and then from up to down.  If the
            number of cells is not a multiple of 8 the last byte is filled with zeros.
            The information is run length encoded according to Packbit coding in ISO
            12369 (TIFF, Revision 6.0).
          format: binary
          type: string
        Columns:
          description: Number of columns of the cell grid (x dimension)
          format: int32
          type: integer
        Rows:
          description: Number of rows of the cell grid (y dimension)
          format: int32
          type: integer
      required:
      - Columns
      - Rows
      - Cells
      type: object
    onvif_MoveAndTrackMethod:
      enum:
      - PresetToken
      - GeoLocation
      - PTZVector
      - ObjectID
      type: string
    onvif_MoveOptions:
      properties:
        Absolute:
          $ref: '#/components/schemas/onvif_AbsoluteFocusOptions'
        Continuous:
          $ref: '#/components/schemas/onvif_ContinuousFocusOptions'
        Relative:
          $ref: '#/components/schemas/onvif_RelativeFocusOptions'
      type: object
    onvif_MoveOptions20:
      properties:
        Absolute:
          allOf:
          - $ref: '#/components/schemas/onvif_AbsoluteFocusOptions'
          - description: Valid ranges for the absolute control.
        Continuous:
          allOf:
          - $ref: '#/components/schemas/onvif_ContinuousFocusOptions'
          - description: Valid ranges for the continuous control.
        Relative:
          allOf:
          - $ref: '#/components/schemas/onvif_RelativeFocusOptions20'
          - description: Valid ranges for the relative control.
      type: object
    onvif_MoveStatus:
      enum:
      - IDLE
      - MOVING
      - UNKNOWN
      type: string
    onvif_Mpeg4Configuration:
      properties:
        GovLength:
          description: Determines the interval in which the I-Frames will be coded.
            An entry of 1 indicates I-Frames are continuously generated. An entry
            of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd
            frame, etc. The frames in between are coded as P or B Frames.
          format: int32
          type: integer
        Mpeg4Profile:
          allOf:
          - $ref: '#/components/schemas/onvif_Mpeg4Profile'
          - description: the Mpeg4 profile, either simple profile (SP) or advanced
              simple profile (ASP)
      required:
      - GovLength
      - Mpeg4Profile
      type: object
    onvif_Mpeg4DecOptions:
      properties:
        ResolutionsAvailable:
          description: List of supported Mpeg4 Video Resolutions
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
        SupportedFrameRate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported Mpeg4 framerate range in fps
        SupportedInputBitrate:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported Mpeg4 bitrate range in kbps
        SupportedMpeg4Profiles:
          description: List of supported Mpeg4 Profiles (either SP or ASP)
          items:
            $ref: '#/components/schemas/onvif_Mpeg4Profile'
          type: array
      required:
      - ResolutionsAvailable
      - SupportedMpeg4Profiles
      - SupportedInputBitrate
      - SupportedFrameRate
      type: object
    onvif_Mpeg4Options:
      properties:
        EncodingIntervalRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported encoding interval range. The encoding interval
              corresponds to the number of frames devided by the encoded frames. An
              encoding interval value of "1" means that all frames are encoded.
        FrameRateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported frame rate in fps (frames per second).
        GovLengthRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported group of Video frames length. This value typically
              corresponds to the I-Frame distance.
        Mpeg4ProfilesSupported:
          description: List of supported MPEG-4 profiles.
          items:
            $ref: '#/components/schemas/onvif_Mpeg4Profile'
          type: array
        ResolutionsAvailable:
          description: List of supported image sizes.
          items:
            $ref: '#/components/schemas/onvif_VideoResolution'
          type: array
      required:
      - ResolutionsAvailable
      - GovLengthRange
      - FrameRateRange
      - EncodingIntervalRange
      - Mpeg4ProfilesSupported
      type: object
    onvif_Mpeg4Options2:
      allOf:
      - $ref: '#/components/schemas/onvif_Mpeg4Options'
      - properties:
          BitrateRange:
            allOf:
            - $ref: '#/components/schemas/onvif_IntRange'
            - description: Supported range of encoded bitrate in kbps.
        required:
        - BitrateRange
        type: object
    onvif_Mpeg4Profile:
      enum:
      - SP
      - ASP
      type: string
    onvif_MulticastConfiguration:
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/onvif_IPAddress'
          - description: The multicast address (if this address is set to 0 no multicast
              streaming is enaled)
        AutoStart:
          description: Read only property signalling that streaming is persistant.
            Use the methods StartMulticastStreaming and StopMulticastStreaming to
            switch its state.
          type: boolean
        Port:
          description: The RTP mutlicast destination port. A device may support RTCP.
            In this case the port value shall be even to allow the corresponding RTCP
            stream to be mapped to the next higher (odd) destination port number as
            defined in the RTSP specification.
          format: int32
          type: integer
        TTL:
          description: In case of IPv6 the TTL value is assumed as the hop limit.
            Note that for IPV6 and administratively scoped IPv4 multicast the primary
            use for hop limit / TTL is to prevent packets from (endlessly) circulating
            and not limiting scope. In these cases the address contains the scope.
          format: int32
          type: integer
      required:
      - Address
      - Port
      - TTL
      - AutoStart
      type: object
    onvif_NTPInformation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_NTPInformationExtension'
        FromDHCP:
          description: Indicates if NTP information is to be retrieved by using DHCP.
          type: boolean
        NTPFromDHCP:
          description: List of NTP addresses retrieved by using DHCP.
          items:
            $ref: '#/components/schemas/onvif_NetworkHost'
          type: array
        NTPManual:
          description: List of manually entered NTP addresses.
          items:
            $ref: '#/components/schemas/onvif_NetworkHost'
          type: array
      required:
      - FromDHCP
      type: object
    onvif_NTPInformationExtension:
      type: object
    onvif_NetworkCapabilities:
      properties:
        DynDNS:
          description: Indicates whether or not  is supported.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_NetworkCapabilitiesExtension'
        IPFilter:
          description: Indicates whether or not IP filtering is supported.
          type: boolean
        IPVersion6:
          description: Indicates whether or not IPv6 is supported.
          type: boolean
        ZeroConfiguration:
          description: Indicates whether or not zeroconf is supported.
          type: boolean
      type: object
    onvif_NetworkCapabilitiesExtension:
      properties:
        Dot11Configuration:
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_NetworkCapabilitiesExtension2'
      type: object
    onvif_NetworkCapabilitiesExtension2:
      type: object
    onvif_NetworkGateway:
      properties:
        IPv4Address:
          description: IPv4 address string.
          items:
            type: string
          type: array
        IPv6Address:
          description: IPv6 address string.
          items:
            type: string
          type: array
      type: object
    onvif_NetworkHost:
      properties:
        DNSname:
          description: DNS name.
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_NetworkHostExtension'
        IPv4Address:
          description: IPv4 address.
          type: string
        IPv6Address:
          description: IPv6 address.
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkHostType'
          - description: 'Network host type: IPv4, IPv6 or DNS.'
      required:
      - Type
      type: object
    onvif_NetworkHostExtension:
      type: object
    onvif_NetworkHostType:
      enum:
      - IPv4
      - IPv6
      - DNS
      type: string
    onvif_NetworkInterface:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Enabled:
            description: Indicates whether or not an interface is enabled.
            type: boolean
          Extension:
            $ref: '#/components/schemas/onvif_NetworkInterfaceExtension'
          IPv4:
            allOf:
            - $ref: '#/components/schemas/onvif_IPv4NetworkInterface'
            - description: IPv4 network interface configuration.
          IPv6:
            allOf:
            - $ref: '#/components/schemas/onvif_IPv6NetworkInterface'
            - description: IPv6 network interface configuration.
          Info:
            allOf:
            - $ref: '#/components/schemas/onvif_NetworkInterfaceInfo'
            - description: Network interface information
          Link:
            allOf:
            - $ref: '#/components/schemas/onvif_NetworkInterfaceLink'
            - description: Link configuration.
        required:
        - Enabled
        type: object
    onvif_NetworkInterfaceConnectionSetting:
      properties:
        AutoNegotiation:
          description: Auto negotiation on/off.
          type: boolean
        Duplex:
          allOf:
          - $ref: '#/components/schemas/onvif_Duplex'
          - description: Duplex type, Half or Full.
        Speed:
          description: Speed.
          format: int32
          type: integer
      required:
      - AutoNegotiation
      - Speed
      - Duplex
      type: object
    onvif_NetworkInterfaceExtension:
      properties:
        Dot11:
          items:
            $ref: '#/components/schemas/onvif_Dot11Configuration'
          type: array
        Dot3:
          description: Extension point prepared for future 802.3 configuration.
          items:
            $ref: '#/components/schemas/onvif_Dot3Configuration'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_NetworkInterfaceExtension2'
        InterfaceType:
          format: int32
          type: integer
      required:
      - InterfaceType
      type: object
    onvif_NetworkInterfaceExtension2:
      type: object
    onvif_NetworkInterfaceInfo:
      properties:
        HwAddress:
          description: Network interface MAC address.
          type: string
        MTU:
          description: Maximum transmission unit.
          format: int32
          type: integer
        Name:
          description: Network interface name, for example eth0.
          type: string
      required:
      - HwAddress
      type: object
    onvif_NetworkInterfaceLink:
      properties:
        AdminSettings:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkInterfaceConnectionSetting'
          - description: Configured link settings.
        InterfaceType:
          description: 'Integer indicating interface type, for example: 6 is ethernet.'
          format: int32
          type: integer
        OperSettings:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkInterfaceConnectionSetting'
          - description: Current active link settings.
      required:
      - AdminSettings
      - OperSettings
      - InterfaceType
      type: object
    onvif_NetworkInterfaceSetConfiguration:
      properties:
        Enabled:
          description: Indicates whether or not an interface is enabled.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_NetworkInterfaceSetConfigurationExtension'
        IPv4:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv4NetworkInterfaceSetConfiguration'
          - description: IPv4 network interface configuration.
        IPv6:
          allOf:
          - $ref: '#/components/schemas/onvif_IPv6NetworkInterfaceSetConfiguration'
          - description: IPv6 network interface configuration.
        Link:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkInterfaceConnectionSetting'
          - description: Link configuration.
        MTU:
          description: Maximum transmission unit.
          format: int32
          type: integer
      type: object
    onvif_NetworkInterfaceSetConfigurationExtension:
      properties:
        Dot11:
          items:
            $ref: '#/components/schemas/onvif_Dot11Configuration'
          type: array
        Dot3:
          items:
            $ref: '#/components/schemas/onvif_Dot3Configuration'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_NetworkInterfaceSetConfigurationExtension2'
      type: object
    onvif_NetworkInterfaceSetConfigurationExtension2:
      type: object
    onvif_NetworkProtocol:
      properties:
        Enabled:
          description: Indicates if the protocol is enabled or not.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_NetworkProtocolExtension'
        Name:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkProtocolType'
          - description: Network protocol type string.
        Port:
          description: The port that is used by the protocol.
          items:
            format: int32
            type: integer
          type: array
      required:
      - Name
      - Enabled
      - Port
      type: object
    onvif_NetworkProtocolExtension:
      type: object
    onvif_NetworkProtocolType:
      enum:
      - HTTP
      - HTTPS
      - RTSP
      type: string
    onvif_NetworkZeroConfiguration:
      properties:
        Addresses:
          description: The zero-configuration IPv4 address(es)
          items:
            type: string
          type: array
        Enabled:
          description: Indicates whether the zero-configuration is enabled or not.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_NetworkZeroConfigurationExtension'
        InterfaceToken:
          description: Unique identifier of network interface.
          maxLength: 64
          type: string
      required:
      - InterfaceToken
      - Enabled
      type: object
    onvif_NetworkZeroConfigurationExtension:
      properties:
        Additional:
          description: Optional array holding the configuration for the second and
            possibly further interfaces.
          items:
            $ref: '#/components/schemas/onvif_NetworkZeroConfiguration'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_NetworkZeroConfigurationExtension2'
      type: object
    onvif_NetworkZeroConfigurationExtension2:
      type: object
    onvif_NoiseReduction:
      properties:
        Level:
          description: Level parameter specified with unitless normalized value from
            0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
          type: number
      required:
      - Level
      type: object
    onvif_NoiseReductionOptions:
      properties:
        Level:
          description: Indicates whether or not support Level parameter for NoiseReduction.
          type: boolean
      required:
      - Level
      type: object
    onvif_OSDColor:
      description: 'The value range of "Transparent" could be defined by vendors only
        should follow this rule: the minimum value means non-transparent and the maximum
        value maens fully transparent.'
      properties:
        Color:
          $ref: '#/components/schemas/onvif_Color'
        Transparent:
          format: int32
          type: integer
      required:
      - Color
      type: object
    onvif_OSDColorOptions:
      description: Describe the option of the color and its transparency.
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorOptions'
          - description: Optional list of supported colors.
        Extension:
          $ref: '#/components/schemas/onvif_OSDColorOptionsExtension'
        Transparent:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of the transparent level. Larger means more tranparent.
      type: object
    onvif_OSDColorOptionsExtension:
      type: object
    onvif_OSDConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Extension:
            $ref: '#/components/schemas/onvif_OSDConfigurationExtension'
          Image:
            allOf:
            - $ref: '#/components/schemas/onvif_OSDImgConfiguration'
            - description: Image configuration of OSD. It shall be present when the
                value of Type field is Image
          Position:
            allOf:
            - $ref: '#/components/schemas/onvif_OSDPosConfiguration'
            - description: Position configuration of OSD.
          TextString:
            allOf:
            - $ref: '#/components/schemas/onvif_OSDTextConfiguration'
            - description: Text configuration of OSD. It shall be present when the
                value of Type field is Text.
          Type:
            allOf:
            - $ref: '#/components/schemas/onvif_OSDType'
            - description: Type of OSD.
          VideoSourceConfigurationToken:
            allOf:
            - $ref: '#/components/schemas/onvif_OSDReference'
            - description: Reference to the video source configuration.
        required:
        - VideoSourceConfigurationToken
        - Type
        - Position
        type: object
    onvif_OSDConfigurationExtension:
      type: object
    onvif_OSDConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_OSDConfigurationOptionsExtension'
        ImageOption:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDImgOptions'
          - description: Option of the OSD image configuration. This element shall
              be returned if the device is signaling the support for Image.
        MaximumNumberOfOSDs:
          allOf:
          - $ref: '#/components/schemas/onvif_MaximumNumberOfOSDs'
          - description: The maximum number of OSD configurations supported for the
              specified video source configuration. If the configuration does not
              support OSDs, this value shall be zero and the Type and PositionOption
              elements are ignored. If a device limits the number of instances by
              OSDType, it shall indicate the supported number for each type via the
              related attribute.
        PositionOption:
          description: 'List available OSD position type. Following are the pre-defined:'
          items:
            type: string
          type: array
        TextOption:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDTextOptions'
          - description: Option of the OSD text configuration. This element shall
              be returned if the device is signaling the support for Text.
        Type:
          description: List supported type of OSD configuration. When a device indicates
            the supported number for each types in MaximumNumberOfOSDs, related type
            shall be presented. A device shall return Option element relating to listed
            type.
          items:
            $ref: '#/components/schemas/onvif_OSDType'
          type: array
      required:
      - MaximumNumberOfOSDs
      - Type
      - PositionOption
      type: object
    onvif_OSDConfigurationOptionsExtension:
      type: object
    onvif_OSDImgConfiguration:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_OSDImgConfigurationExtension'
        ImgPath:
          description: The URI of the image which to be displayed.
          type: string
      required:
      - ImgPath
      type: object
    onvif_OSDImgConfigurationExtension:
      type: object
    onvif_OSDImgOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_OSDImgOptionsExtension'
        FormatsSupported:
          description: List of supported image MIME types, such as "image/png".
          type: string
        ImagePath:
          description: List of available image URIs.
          items:
            type: string
          type: array
        MaxHeight:
          description: The maximum height (in pixels) of the image that can be uploaded.
          format: int32
          type: integer
        MaxSize:
          description: The maximum size (in bytes) of the image that can be uploaded.
          format: int32
          type: integer
        MaxWidth:
          description: The maximum width (in pixels) of the image that can be uploaded.
          format: int32
          type: integer
      required:
      - ImagePath
      type: object
    onvif_OSDImgOptionsExtension:
      type: object
    onvif_OSDPosConfiguration:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_OSDPosConfigurationExtension'
        Pos:
          $ref: '#/components/schemas/onvif_Vector'
        Type:
          description: 'For OSD position type, following are the pre-defined:'
          type: string
      required:
      - Type
      type: object
    onvif_OSDPosConfigurationExtension:
      type: object
    onvif_OSDReference:
      type: object
    onvif_OSDTextConfiguration:
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDColor'
          - description: Background color of the text.
        DateFormat:
          description: 'List of supported OSD date formats. This element shall be
            present when the value of Type field has Date or DateAndTime. The following
            DateFormat are defined:'
          type: string
        Extension:
          $ref: '#/components/schemas/onvif_OSDTextConfigurationExtension'
        FontColor:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDColor'
          - description: Font color of the text.
        FontSize:
          description: Font size of the text in pt.
          format: int32
          type: integer
        IsPersistentText:
          description: This flag is applicable for Type Plain and defaults to true.
            When set to false the PlainText content will not be persistent across
            device reboots.
          type: boolean
        PlainText:
          description: The content of text to be displayed.
          type: string
        TimeFormat:
          description: 'List of supported OSD time formats. This element shall be
            present when the value of Type field has Time or DateAndTime. The following
            TimeFormat are defined:'
          type: string
        Type:
          description: 'The following OSD Text Type are defined:'
          type: string
      required:
      - Type
      type: object
    onvif_OSDTextConfigurationExtension:
      type: object
    onvif_OSDTextOptions:
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDColorOptions'
          - description: List of supported background color.
        DateFormat:
          description: List of supported date format.
          items:
            type: string
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_OSDTextOptionsExtension'
        FontColor:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDColorOptions'
          - description: List of supported font color.
        FontSizeRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of the font size value.
        TimeFormat:
          description: List of supported time format.
          items:
            type: string
          type: array
        Type:
          description: List of supported OSD text type. When a device indicates the
            supported number relating to Text type in MaximumNumberOfOSDs, the type
            shall be presented.
          items:
            type: string
          type: array
      required:
      - Type
      type: object
    onvif_OSDTextOptionsExtension:
      type: object
    onvif_OSDType:
      enum:
      - Text
      - Image
      - Extended
      type: string
    onvif_Object:
      allOf:
      - $ref: '#/components/schemas/onvif_ObjectId'
      - properties:
          Appearance:
            $ref: '#/components/schemas/onvif_Appearance'
          Behaviour:
            $ref: '#/components/schemas/onvif_Behaviour'
          Extension:
            $ref: '#/components/schemas/onvif_ObjectExtension'
          Parent:
            description: 'Object ID of the parent object. eg: License plate object
              has Vehicle object as parent.'
            format: int32
            type: integer
        type: object
    onvif_ObjectExtension:
      type: object
    onvif_ObjectId:
      properties:
        ObjectId:
          format: int32
          type: integer
      type: object
    onvif_ObjectTree:
      properties:
        Delete:
          items:
            $ref: '#/components/schemas/onvif_ObjectId'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_ObjectTreeExtension'
        Merge:
          items:
            $ref: '#/components/schemas/onvif_Merge'
          type: array
        Rename:
          items:
            $ref: '#/components/schemas/onvif_Rename'
          type: array
        Split:
          items:
            $ref: '#/components/schemas/onvif_Split'
          type: array
      type: object
    onvif_ObjectTreeExtension:
      type: object
    onvif_ObjectType:
      enum:
      - Animal
      - HumanFace
      - Human
      - Bicycle
      - Vehicle
      - LicensePlate
      - Bike
      type: string
    onvif_OnvifVersion:
      properties:
        Major:
          description: Major version number.
          format: int32
          type: integer
        Minor:
          description: "Two digit minor version number.\n\t\t\t\t\t\tIf major version\
            \ number is less than \"16\", X.0.1 maps to \"01\" and X.2.1 maps to \"\
            21\" where X stands for Major version number.\n\t\t\t\t\t\tOtherwise,\
            \ minor number is month of release, such as \"06\" for June."
          format: int32
          type: integer
      required:
      - Major
      - Minor
      type: object
    onvif_OtherType:
      properties:
        Likelihood:
          description: A likelihood/probability that the corresponding object belongs
            to this class. The sum of the likelihoods shall NOT exceed 1
          type: number
        Type:
          description: Object Class Type
          type: string
      required:
      - Type
      - Likelihood
      type: object
    onvif_PTControlDirection:
      properties:
        EFlip:
          allOf:
          - $ref: '#/components/schemas/onvif_EFlip'
          - description: Optional element to configure related parameters for E-Flip.
        Extension:
          $ref: '#/components/schemas/onvif_PTControlDirectionExtension'
        Reverse:
          allOf:
          - $ref: '#/components/schemas/onvif_Reverse'
          - description: Optional element to configure related parameters for reversing
              of PT Control Direction.
      type: object
    onvif_PTControlDirectionExtension:
      type: object
    onvif_PTControlDirectionOptions:
      properties:
        EFlip:
          allOf:
          - $ref: '#/components/schemas/onvif_EFlipOptions'
          - description: Supported options for EFlip feature.
        Extension:
          $ref: '#/components/schemas/onvif_PTControlDirectionOptionsExtension'
        Reverse:
          allOf:
          - $ref: '#/components/schemas/onvif_ReverseOptions'
          - description: Supported options for Reverse feature.
      type: object
    onvif_PTControlDirectionOptionsExtension:
      type: object
    onvif_PTZCapabilities:
      properties:
        XAddr:
          description: PTZ service URI.
          type: string
      required:
      - XAddr
      type: object
    onvif_PTZConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          DefaultAbsolutePantTiltPositionSpace:
            description: If the PTZ Node supports absolute Pan/Tilt movements, it
              shall specify one Absolute Pan/Tilt Position Space as default.
            type: string
          DefaultAbsoluteZoomPositionSpace:
            description: If the PTZ Node supports absolute zoom movements, it shall
              specify one Absolute Zoom Position Space as default.
            type: string
          DefaultContinuousPanTiltVelocitySpace:
            description: If the PTZ Node supports continuous Pan/Tilt movements, it
              shall specify one Continuous Pan/Tilt Velocity Space as default.
            type: string
          DefaultContinuousZoomVelocitySpace:
            description: If the PTZ Node supports continuous zoom movements, it shall
              specify one Continuous Zoom Velocity Space as default.
            type: string
          DefaultPTZSpeed:
            allOf:
            - $ref: '#/components/schemas/onvif_PTZSpeed'
            - description: If the PTZ Node supports absolute or relative PTZ movements,
                it shall specify corresponding default Pan/Tilt and Zoom speeds.
          DefaultPTZTimeout:
            description: If the PTZ Node supports continuous movements, it shall specify
              a default timeout, after which the movement stops.
            format: date-time
            type: string
          DefaultRelativePanTiltTranslationSpace:
            description: If the PTZ Node supports relative Pan/Tilt movements, it
              shall specify one RelativePan/Tilt Translation Space as default.
            type: string
          DefaultRelativeZoomTranslationSpace:
            description: If the PTZ Node supports relative zoom movements, it shall
              specify one Relative Zoom Translation Space as default.
            type: string
          Extension:
            $ref: '#/components/schemas/onvif_PTZConfigurationExtension'
          MoveRamp:
            description: The optional acceleration ramp used by the device when moving.
            format: int32
            type: integer
          NodeToken:
            description: A mandatory reference to the PTZ Node that the PTZ Configuration
              belongs to.
            maxLength: 64
            type: string
          PanTiltLimits:
            allOf:
            - $ref: '#/components/schemas/onvif_PanTiltLimits'
            - description: The Pan/Tilt limits element should be present for a PTZ
                Node that supports an absolute Pan/Tilt. If the element is present
                it signals the support for configurable Pan/Tilt limits. If limits
                are enabled, the Pan/Tilt movements shall always stay within the specified
                range. The Pan/Tilt limits are disabled by setting the limits to –INF
                or +INF.
          PresetRamp:
            description: The optional acceleration ramp used by the device when recalling
              presets.
            format: int32
            type: integer
          PresetTourRamp:
            description: The optional acceleration ramp used by the device when executing
              PresetTours.
            format: int32
            type: integer
          ZoomLimits:
            allOf:
            - $ref: '#/components/schemas/onvif_ZoomLimits'
            - description: The Zoom limits element should be present for a PTZ Node
                that supports absolute zoom. If the element is present it signals
                the supports for configurable Zoom limits. If limits are enabled the
                zoom movements shall always stay within the specified range. The Zoom
                limits are disabled by settings the limits to -INF and +INF.
        required:
        - NodeToken
        type: object
    onvif_PTZConfigurationExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZConfigurationExtension2'
        PTControlDirection:
          allOf:
          - $ref: '#/components/schemas/onvif_PTControlDirection'
          - description: Optional element to configure PT Control Direction related
              features.
      type: object
    onvif_PTZConfigurationExtension2:
      type: object
    onvif_PTZConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZConfigurationOptions2'
        PTControlDirection:
          allOf:
          - $ref: '#/components/schemas/onvif_PTControlDirectionOptions'
          - description: Supported options for PT Direction Control.
        PTZRamps:
          description: "The list of acceleration ramps supported by the device. The\n\
            \t\t\t\t\tsmallest acceleration value corresponds to the minimal index,\
            \ the\n\t\t\t\t\thighest acceleration corresponds to the maximum index."
          format: int32
          type: integer
        PTZTimeout:
          allOf:
          - $ref: '#/components/schemas/onvif_DurationRange'
          - description: A timeout Range within which Timeouts are accepted by the
              PTZ Node.
        Spaces:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpaces'
          - description: A list of supported coordinate systems including their range
              limitations.
      required:
      - Spaces
      - PTZTimeout
      type: object
    onvif_PTZConfigurationOptions2:
      type: object
    onvif_PTZFilter:
      properties:
        Position:
          description: True if the metadata stream shall contain the PTZ position
          type: boolean
        Status:
          description: True if the metadata stream shall contain the PTZ status (IDLE,
            MOVING or UNKNOWN)
          type: boolean
      required:
      - Status
      - Position
      type: object
    onvif_PTZMoveStatus:
      properties:
        PanTilt:
          $ref: '#/components/schemas/onvif_MoveStatus'
        Zoom:
          $ref: '#/components/schemas/onvif_MoveStatus'
      type: object
    onvif_PTZNode:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          AuxiliaryCommands:
            description: A list of supported Auxiliary commands. If the list is not
              empty, the Auxiliary Operations MUST be available for this PTZ Node.
            items:
              maxLength: 128
              type: string
            type: array
          Extension:
            $ref: '#/components/schemas/onvif_PTZNodeExtension'
          FixedHomePosition:
            description: Indication whether the HomePosition of a Node is fixed or
              it can be changed via the SetHomePosition command.
            type: boolean
          GeoMove:
            description: Indication whether the Node supports the geo-referenced move
              command.
            type: boolean
          HomeSupported:
            description: A boolean operator specifying the availability of a home
              position. If set to true, the Home Position Operations MUST be available
              for this PTZ Node.
            type: boolean
          MaximumNumberOfPresets:
            description: All preset operations MUST be available for this PTZ Node
              if one preset is supported.
            format: int32
            type: integer
          Name:
            description: A unique identifier that is used to reference PTZ Nodes.
            maxLength: 64
            type: string
          SupportedPTZSpaces:
            allOf:
            - $ref: '#/components/schemas/onvif_PTZSpaces'
            - description: A list of Coordinate Systems available for the PTZ Node.
                For each Coordinate System, the PTZ Node MUST specify its allowed
                range.
        required:
        - SupportedPTZSpaces
        - MaximumNumberOfPresets
        - HomeSupported
        type: object
    onvif_PTZNodeExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZNodeExtension2'
        SupportedPresetTour:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourSupported'
          - description: Detail of supported Preset Tour feature.
      type: object
    onvif_PTZNodeExtension2:
      type: object
    onvif_PTZPositionFilter:
      properties:
        EnterOrExit:
          description: If true, search for when entering the specified PTZ volume.
          type: boolean
        MaxPosition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: The upper boundary of the PTZ volume to look for.
        MinPosition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: The lower boundary of the PTZ volume to look for.
      required:
      - MinPosition
      - MaxPosition
      - EnterOrExit
      type: object
    onvif_PTZPreset:
      properties:
        Name:
          description: A list of preset position name.
          maxLength: 64
          type: string
        PTZPosition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: A list of preset position.
        token:
          maxLength: 64
          type: string
      type: object
    onvif_PTZPresetTourDirection:
      enum:
      - Forward
      - Backward
      - Extended
      type: string
    onvif_PTZPresetTourExtension:
      type: object
    onvif_PTZPresetTourOperation:
      enum:
      - Start
      - Stop
      - Pause
      - Extended
      type: string
    onvif_PTZPresetTourOptions:
      properties:
        AutoStart:
          description: Indicates whether or not the AutoStart is supported.
          type: boolean
        StartingCondition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourStartingConditionOptions'
          - description: Supported options for Preset Tour Starting Condition.
        TourSpot:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourSpotOptions'
          - description: Supported options for Preset Tour Spot.
      required:
      - AutoStart
      - StartingCondition
      - TourSpot
      type: object
    onvif_PTZPresetTourPresetDetail:
      properties:
        Home:
          description: Option to specify the preset position with the home position
            of this PTZ Node. "False" to this parameter shall be treated as an invalid
            argument.
          type: boolean
        PTZPosition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: Option to specify the preset position with vector of PTZ
              node directly.
        PresetToken:
          description: Option to specify the preset position with Preset Token defined
            in advance.
          maxLength: 64
          type: string
        TypeExtension:
          $ref: '#/components/schemas/onvif_PTZPresetTourTypeExtension'
      type: object
    onvif_PTZPresetTourPresetDetailOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourPresetDetailOptionsExtension'
        Home:
          description: An option to indicate Home postion for tour spots.
          type: boolean
        PanTiltPositionSpace:
          allOf:
          - $ref: '#/components/schemas/onvif_Space2DDescription'
          - description: Supported range of Pan and Tilt for tour spots.
        PresetToken:
          description: A list of available Preset Tokens for tour spots.
          items:
            maxLength: 64
            type: string
          type: array
        ZoomPositionSpace:
          allOf:
          - $ref: '#/components/schemas/onvif_Space1DDescription'
          - description: Supported range of Zoom for a tour spot.
      type: object
    onvif_PTZPresetTourPresetDetailOptionsExtension:
      type: object
    onvif_PTZPresetTourSpot:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourSpotExtension'
        PresetDetail:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourPresetDetail'
          - description: Detail definition of preset position of the tour spot.
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: Optional parameter to specify Pan/Tilt and Zoom speed on
              moving toward this tour spot.
        StayTime:
          description: Optional parameter to specify time duration of staying on this
            tour sport.
          format: date-time
          type: string
      required:
      - PresetDetail
      type: object
    onvif_PTZPresetTourSpotExtension:
      type: object
    onvif_PTZPresetTourSpotOptions:
      properties:
        PresetDetail:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourPresetDetailOptions'
          - description: Supported options for detail definition of preset position
              of the tour spot.
        StayTime:
          allOf:
          - $ref: '#/components/schemas/onvif_DurationRange'
          - description: Supported range of stay time for a tour spot.
      required:
      - PresetDetail
      - StayTime
      type: object
    onvif_PTZPresetTourStartingCondition:
      properties:
        Direction:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourDirection'
          - description: Optional parameter to choose which direction the preset tour
              goes. Forward shall be chosen in case it is omitted.
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourStartingConditionExtension'
        RandomPresetOrder:
          description: Execute presets in random order. If set to true and Direction
            is also present, Direction will be ignored and presets of the Tour will
            be recalled randomly.
          type: boolean
        RecurringDuration:
          description: Optional parameter to specify how long time duration the preset
            tour is recurred.
          format: date-time
          type: string
        RecurringTime:
          description: Optional parameter to specify how many times the preset tour
            is recurred.
          format: int32
          type: integer
      type: object
    onvif_PTZPresetTourStartingConditionExtension:
      type: object
    onvif_PTZPresetTourStartingConditionOptions:
      properties:
        Direction:
          description: Supported options for Direction of Preset Tour.
          items:
            $ref: '#/components/schemas/onvif_PTZPresetTourDirection'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourStartingConditionOptionsExtension'
        RecurringDuration:
          allOf:
          - $ref: '#/components/schemas/onvif_DurationRange'
          - description: Supported range of Recurring Duration.
        RecurringTime:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported range of Recurring Time.
      type: object
    onvif_PTZPresetTourStartingConditionOptionsExtension:
      type: object
    onvif_PTZPresetTourState:
      enum:
      - Idle
      - Touring
      - Paused
      - Extended
      type: string
    onvif_PTZPresetTourStatus:
      properties:
        CurrentTourSpot:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourSpot'
          - description: Indicates a tour spot currently staying.
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourStatusExtension'
        State:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourState'
          - description: Indicates state of this preset tour by Idle/Touring/Paused.
      required:
      - State
      type: object
    onvif_PTZPresetTourStatusExtension:
      type: object
    onvif_PTZPresetTourSupported:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourSupportedExtension'
        MaximumNumberOfPresetTours:
          description: Indicates number of preset tours that can be created. Required
            preset tour operations shall be available for this PTZ Node if one or
            more preset tour is supported.
          format: int32
          type: integer
        PTZPresetTourOperation:
          description: Indicates which preset tour operations are available for this
            PTZ Node.
          items:
            $ref: '#/components/schemas/onvif_PTZPresetTourOperation'
          type: array
      required:
      - MaximumNumberOfPresetTours
      type: object
    onvif_PTZPresetTourSupportedExtension:
      type: object
    onvif_PTZPresetTourTypeExtension:
      type: object
    onvif_PTZSpaces:
      properties:
        AbsolutePanTiltPositionSpace:
          description: "The Generic Pan/Tilt Position space is provided by every PTZ\
            \ node that supports absolute Pan/Tilt, since it does not relate to a\
            \ specific physical range. \n\t\t\tInstead, the range should be defined\
            \ as the full range of the PTZ unit normalized to the range -1 to 1 resulting\
            \ in the following space description."
          items:
            $ref: '#/components/schemas/onvif_Space2DDescription'
          type: array
        AbsoluteZoomPositionSpace:
          description: "The Generic Zoom Position Space is provided by every PTZ node\
            \ that supports absolute Zoom, since it does not relate to a specific\
            \ physical range. \n\t\t\tInstead, the range should be defined as the\
            \ full range of the Zoom normalized to the range 0 (wide) to 1 (tele).\
            \ \n\t\t\tThere is no assumption about how the generic zoom range is mapped\
            \ to magnification, FOV or other physical zoom dimension."
          items:
            $ref: '#/components/schemas/onvif_Space1DDescription'
          type: array
        ContinuousPanTiltVelocitySpace:
          description: "The generic Pan/Tilt velocity space shall be provided by every\
            \ PTZ node, since it does not relate to a specific physical range. \n\t\
            \t\tInstead, the range should be defined as a range of the PTZ unit’s\
            \ speed normalized to the range -1 to 1, where a positive velocity would\
            \ map to clockwise \n\t\t\trotation or movement in the right/up direction.\
            \ A signed speed can be independently specified for the pan and tilt component\
            \ resulting in the following space description."
          items:
            $ref: '#/components/schemas/onvif_Space2DDescription'
          type: array
        ContinuousZoomVelocitySpace:
          description: "The generic zoom velocity space specifies a zoom factor velocity\
            \ without knowing the underlying physical model. The range should be normalized\
            \ from -1 to 1, \n\t\t\twhere a positive velocity would map to TELE direction.\
            \ A generic zoom velocity space description resembles the following."
          items:
            $ref: '#/components/schemas/onvif_Space1DDescription'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_PTZSpacesExtension'
        PanTiltSpeedSpace:
          description: "The speed space specifies the speed for a Pan/Tilt movement\
            \ when moving to an absolute position or to a relative translation. \n\
            \t\t\tIn contrast to the velocity spaces, speed spaces do not contain\
            \ any directional information. The speed of a combined Pan/Tilt \n\t\t\
            \tmovement is represented by a single non-negative scalar value."
          items:
            $ref: '#/components/schemas/onvif_Space1DDescription'
          type: array
        RelativePanTiltTranslationSpace:
          description: "The Generic Pan/Tilt translation space is provided by every\
            \ PTZ node that supports relative Pan/Tilt, since it does not relate to\
            \ a specific physical range. \n\t\t\tInstead, the range should be defined\
            \ as the full positive and negative translation range of the PTZ unit\
            \ normalized to the range -1 to 1, \n\t\t\twhere positive translation\
            \ would mean clockwise rotation or movement in right/up direction resulting\
            \ in the following space description."
          items:
            $ref: '#/components/schemas/onvif_Space2DDescription'
          type: array
        RelativeZoomTranslationSpace:
          description: "The Generic Zoom Translation Space is provided by every PTZ\
            \ node that supports relative Zoom, since it does not relate to a specific\
            \ physical range. \n\t\t\tInstead, the corresponding absolute range should\
            \ be defined as the full positive and negative translation range of the\
            \ Zoom normalized to the range -1 to1, \n\t\t\twhere a positive translation\
            \ maps to a movement in TELE direction. The translation is signed to indicate\
            \ direction (negative is to wide, positive is to tele). \n\t\t\tThere\
            \ is no assumption about how the generic zoom range is mapped to magnification,\
            \ FOV or other physical zoom dimension. This results in the following\
            \ space description."
          items:
            $ref: '#/components/schemas/onvif_Space1DDescription'
          type: array
        ZoomSpeedSpace:
          description: "The speed space specifies the speed for a Zoom movement when\
            \ moving to an absolute position or to a relative translation. \n\t\t\t\
            In contrast to the velocity spaces, speed spaces do not contain any directional\
            \ information."
          items:
            $ref: '#/components/schemas/onvif_Space1DDescription'
          type: array
      type: object
    onvif_PTZSpacesExtension:
      type: object
    onvif_PTZSpeed:
      properties:
        PanTilt:
          allOf:
          - $ref: '#/components/schemas/onvif_Vector2D'
          - description: Pan and tilt speed. The x component corresponds to pan and
              the y component to tilt. If omitted in a request, the current (if any)
              PanTilt movement should not be affected.
        Zoom:
          allOf:
          - $ref: '#/components/schemas/onvif_Vector1D'
          - description: A zoom speed. If omitted in a request, the current (if any)
              Zoom movement should not be affected.
      type: object
    onvif_PTZStatus:
      properties:
        Error:
          description: States a current PTZ error.
          type: string
        MoveStatus:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZMoveStatus'
          - description: Indicates if the Pan/Tilt/Zoom device unit is currently moving,
              idle or in an unknown state.
        Position:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: Specifies the absolute position of the PTZ unit together
              with the Space references. The default absolute spaces of the corresponding
              PTZ configuration MUST be referenced within the Position element.
        UtcTime:
          description: Specifies the UTC time when this status was generated.
          format: date-time
          type: string
      required:
      - UtcTime
      type: object
    onvif_PTZStatusFilterOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PTZStatusFilterOptionsExtension'
        PanTiltPositionSupported:
          description: True if the device is able to stream the pan or tilt position.
          type: boolean
        PanTiltStatusSupported:
          description: True if the device is able to stream pan or tilt status information.
          type: boolean
        ZoomPositionSupported:
          description: True if the device is able to stream zoom position information.
          type: boolean
        ZoomStatusSupported:
          description: True if the device is able to stream zoom status inforamtion.
          type: boolean
      required:
      - PanTiltStatusSupported
      - ZoomStatusSupported
      type: object
    onvif_PTZStatusFilterOptionsExtension:
      type: object
    onvif_PTZStream:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_PTZStreamExtension'
          type: array
        PTZStatus:
          items:
            $ref: '#/components/schemas/onvif_PTZStatus'
          type: array
      type: object
    onvif_PTZStreamChoice0:
      properties:
        PTZStatus:
          items:
            $ref: '#/components/schemas/onvif_PTZStatus'
          type: array
      type: object
    onvif_PTZStreamChoice1:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_PTZStreamExtension'
          type: array
      type: object
    onvif_PTZStreamChoice2:
      type: object
    onvif_PTZStreamExtension:
      type: object
    onvif_PTZVector:
      properties:
        PanTilt:
          allOf:
          - $ref: '#/components/schemas/onvif_Vector2D'
          - description: Pan and tilt position. The x component corresponds to pan
              and the y component to tilt.
        Zoom:
          allOf:
          - $ref: '#/components/schemas/onvif_Vector1D'
          - description: A zoom position.
      type: object
    onvif_PanTiltLimits:
      properties:
        Range:
          allOf:
          - $ref: '#/components/schemas/onvif_Space2DDescription'
          - description: A range of pan tilt limits.
      required:
      - Range
      type: object
    onvif_PaneConfiguration:
      description: Configuration of the streaming and coding settings of a Video window.
      properties:
        AudioEncoderConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          - description: "The configuration of the audio encoder including codec,\
              \ bitrate\nand sample rate."
        AudioOutputToken:
          description: "If the device has audio outputs, this element contains a pointer\
            \ to the audio output that is associated with the pane. A client\ncan\
            \ retrieve the available audio outputs of a device using the GetAudioOutputs\
            \ command of the DeviceIO service."
          maxLength: 64
          type: string
        AudioSourceToken:
          description: "If the device has audio sources, this element contains a pointer\
            \ to the audio source that is associated with this pane.\nThe audio connection\
            \ from a decoder device to the NVT is established using the backchannel\
            \ mechanism. A client can retrieve the available audio sources of a device\
            \ using the GetAudioSources command of the\nDeviceIO service."
          maxLength: 64
          type: string
        PaneName:
          description: Optional name of the pane configuration.
          type: string
        ReceiverToken:
          description: "A pointer to a Receiver that has the necessary information\
            \ to receive\n\t\t\t\tdata from a Transmitter. This Receiver can be connected\
            \ and the network video decoder displays the received data on the specified\
            \ outputs. A client can retrieve the available Receivers using the\n\t\
            \t\t\tGetReceivers command of the Receiver Service."
          maxLength: 64
          type: string
        Token:
          description: A unique identifier in the display device.
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    onvif_PaneLayout:
      description: A pane layout describes one Video window of a display. It links
        a pane configuration to a region of the screen.
      properties:
        Area:
          allOf:
          - $ref: '#/components/schemas/onvif_Rectangle'
          - description: Describes the location and size of the area on the monitor.
              The area coordinate values are espressed in normalized units [-1.0,
              1.0].
        Pane:
          description: Reference to the configuration of the streaming and coding
            parameters.
          maxLength: 64
          type: string
      required:
      - Pane
      - Area
      type: object
    onvif_PaneLayoutOptions:
      description: Description of a pane layout describing a complete display layout.
      properties:
        Area:
          description: List of areas assembling a layout. Coordinate values are in
            the range [-1.0, 1.0].
          items:
            $ref: '#/components/schemas/onvif_Rectangle'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_PaneOptionExtension'
      required:
      - Area
      type: object
    onvif_PaneOptionExtension:
      type: object
    onvif_PlateType:
      enum:
      - Normal
      - Police
      - Diplomat
      - Temporary
      type: string
    onvif_Polygon:
      properties:
        Point:
          items:
            $ref: '#/components/schemas/onvif_Vector'
          type: array
      required:
      - Point
      type: object
    onvif_PolygonOptions:
      properties:
        RectangleOnly:
          description: "True if the device supports defining a region only using Rectangle.\n\
            The rectangle points are still passed using a Polygon element if the device\
            \ does not support polygon regions. In this case, the points provided\
            \ in the Polygon element shall represent a rectangle."
          type: boolean
        VertexLimits:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: "Provides the minimum and maximum number of points that can\
              \ be defined in the Polygon.\nIf RectangleOnly is not set to true, this\
              \ parameter is required."
      type: object
    onvif_Polyline:
      properties:
        Point:
          items:
            $ref: '#/components/schemas/onvif_Vector'
          type: array
      required:
      - Point
      type: object
    onvif_PolylineArray:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_PolylineArrayExtension'
        Segment:
          description: Contains array of Polyline
          items:
            $ref: '#/components/schemas/onvif_Polyline'
          type: array
      required:
      - Segment
      type: object
    onvif_PolylineArrayConfiguration:
      properties:
        PolylineArray:
          allOf:
          - $ref: '#/components/schemas/onvif_PolylineArray'
          - description: Contains PolylineArray configuration data
      required:
      - PolylineArray
      type: object
    onvif_PolylineArrayExtension:
      type: object
    onvif_PrefixedIPv4Address:
      properties:
        Address:
          description: IPv4 address
          type: string
        PrefixLength:
          description: Prefix/submask length
          format: int32
          type: integer
      required:
      - Address
      - PrefixLength
      type: object
    onvif_PrefixedIPv6Address:
      properties:
        Address:
          description: IPv6 address
          type: string
        PrefixLength:
          description: Prefix/submask length
          format: int32
          type: integer
      required:
      - Address
      - PrefixLength
      type: object
    onvif_PresetTour:
      properties:
        AutoStart:
          description: Auto Start flag of the preset tour. True allows the preset
            tour to be activated always.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_PTZPresetTourExtension'
        Name:
          description: Readable name of the preset tour.
          maxLength: 64
          type: string
        StartingCondition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourStartingCondition'
          - description: Parameters to specify the detail behavior of the preset tour.
        Status:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZPresetTourStatus'
          - description: Read only parameters to indicate the status of the preset
              tour.
        TourSpot:
          description: A list of detail of touring spots including preset positions.
          items:
            $ref: '#/components/schemas/onvif_PTZPresetTourSpot'
          type: array
        token:
          description: Unique identifier of this preset tour.
          maxLength: 64
          type: string
      required:
      - Status
      - AutoStart
      - StartingCondition
      type: object
    onvif_Profile:
      description: "A media profile consists of a set of media configurations. Media\
        \ profiles are used by a client\n\t\t\tto configure properties of a media\
        \ stream from an NVT."
      properties:
        AudioEncoderConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          - description: Optional configuration of the Audio encoder.
        AudioSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          - description: Optional configuration of the Audio input.
        Extension:
          allOf:
          - $ref: '#/components/schemas/onvif_ProfileExtension'
          - description: Extensions defined in ONVIF 2.0
        MetadataConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfiguration'
          - description: Optional configuration of the metadata stream.
        Name:
          description: User readable name of the profile.
          maxLength: 64
          type: string
        PTZConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZConfiguration'
          - description: Optional configuration of the pan tilt zoom unit.
        VideoAnalyticsConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          - description: Optional configuration of the video analytics module and
              rule engine.
        VideoEncoderConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
          - description: Optional configuration of the Video encoder.
        VideoSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          - description: Optional configuration of the Video input.
        fixed:
          description: A value of true signals that the profile cannot be deleted.
            Default is false.
          type: boolean
        token:
          description: Unique identifier of the profile.
          maxLength: 64
          type: string
      required:
      - token
      - Name
      type: object
    onvif_ProfileCapabilities:
      properties:
        MaximumNumberOfProfiles:
          description: Maximum number of profiles.
          format: int32
          type: integer
      required:
      - MaximumNumberOfProfiles
      type: object
    onvif_ProfileExtension:
      properties:
        AudioDecoderConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          - description: Optional configuration of the Audio decoder.
        AudioOutputConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          - description: Optional configuration of the Audio output.
        Extension:
          $ref: '#/components/schemas/onvif_ProfileExtension2'
      type: object
    onvif_ProfileExtension2:
      type: object
    onvif_ProfileStatus:
      properties:
        ActiveConnections:
          items:
            $ref: '#/components/schemas/onvif_ActiveConnection'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_ProfileStatusExtension'
      type: object
    onvif_ProfileStatusExtension:
      type: object
    onvif_PropertyOperation:
      enum:
      - Initialized
      - Deleted
      - Changed
      type: string
    onvif_RealTimeStreamingCapabilities:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_RealTimeStreamingCapabilitiesExtension'
        RTPMulticast:
          description: Indicates whether or not RTP multicast is supported.
          type: boolean
        RTP_RTSP_TCP:
          description: Indicates whether or not RTP/RTSP/TCP is supported.
          type: boolean
        RTP_TCP:
          description: Indicates whether or not RTP over TCP is supported.
          type: boolean
      type: object
    onvif_RealTimeStreamingCapabilitiesExtension:
      type: object
    onvif_Receiver:
      description: Description of a receiver, including its token and configuration.
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_ReceiverConfiguration'
          - description: Describes the configuration of the receiver.
        Token:
          description: Unique identifier of the receiver.
          maxLength: 64
          type: string
      required:
      - Token
      - Configuration
      type: object
    onvif_ReceiverCapabilities:
      properties:
        MaximumRTSPURILength:
          description: The maximum allowed length for RTSP URIs.
          format: int32
          type: integer
        RTP_Multicast:
          description: Indicates whether the device can receive RTP multicast streams.
          type: boolean
        RTP_RTSP_TCP:
          description: Indicates whether the device can receive RTP/RTSP/TCP streams.
          type: boolean
        RTP_TCP:
          description: Indicates whether the device can receive RTP/TCP streams
          type: boolean
        SupportedReceivers:
          description: The maximum number of receivers supported by the device.
          format: int32
          type: integer
        XAddr:
          description: The address of the receiver service.
          type: string
      required:
      - XAddr
      - RTP_Multicast
      - RTP_TCP
      - RTP_RTSP_TCP
      - SupportedReceivers
      - MaximumRTSPURILength
      type: object
    onvif_ReceiverConfiguration:
      description: Describes the configuration of a receiver.
      properties:
        MediaUri:
          description: Details of the URI to which the receiver should connect.
          type: string
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_ReceiverMode'
          - description: 'The following connection modes are defined:'
        StreamSetup:
          allOf:
          - $ref: '#/components/schemas/onvif_StreamSetup'
          - description: Stream connection parameters.
      required:
      - Mode
      - MediaUri
      - StreamSetup
      type: object
    onvif_ReceiverMode:
      description: Specifies a receiver connection mode.
      enum:
      - AutoConnect
      - AlwaysConnect
      - NeverConnect
      - Unknown
      type: string
    onvif_ReceiverState:
      description: Specifies the current connection state of the receiver.
      enum:
      - NotConnected
      - Connecting
      - Connected
      - Unknown
      type: string
    onvif_ReceiverStateInformation:
      description: Contains information about a receiver's current state.
      properties:
        AutoCreated:
          description: Indicates whether or not the receiver was created automatically.
          type: boolean
        State:
          allOf:
          - $ref: '#/components/schemas/onvif_ReceiverState'
          - description: 'The connection state of the receiver may have one of the
              following states:'
      required:
      - State
      - AutoCreated
      type: object
    onvif_RecordingCapabilities:
      properties:
        DynamicRecordings:
          type: boolean
        DynamicTracks:
          type: boolean
        MaxStringLength:
          format: int32
          type: integer
        MediaProfileSource:
          type: boolean
        ReceiverSource:
          type: boolean
        XAddr:
          type: string
      required:
      - XAddr
      - ReceiverSource
      - MediaProfileSource
      - DynamicRecordings
      - DynamicTracks
      - MaxStringLength
      type: object
    onvif_RecordingConfiguration:
      properties:
        Content:
          description: Informative description of the source.
          type: string
        MaximumRetentionTime:
          description: "Sspecifies the maximum time that data in any track within\
            \ the\n\t\t\t\trecording shall be stored. The device shall delete any\
            \ data older than the maximum retention\n\t\t\t\ttime. Such data shall\
            \ not be accessible anymore. If the MaximumRetentionPeriod is set to 0,\n\
            \t\t\t\tthe device shall not limit the retention time of stored data,\
            \ except by resource constraints.\n\t\t\t\tWhatever the value of MaximumRetentionTime,\
            \ the device may automatically delete\n\t\t\t\trecordings to free up storage\
            \ space for new recordings."
          format: date-time
          type: string
        Source:
          allOf:
          - $ref: '#/components/schemas/onvif_RecordingSourceInformation'
          - description: Information about the source of the recording.
      required:
      - Source
      - Content
      - MaximumRetentionTime
      type: object
    onvif_RecordingInformation:
      properties:
        Content:
          type: string
        EarliestRecording:
          format: date-time
          type: string
        LatestRecording:
          format: date-time
          type: string
        RecordingStatus:
          $ref: '#/components/schemas/onvif_RecordingStatus'
        RecordingToken:
          maxLength: 64
          type: string
        Source:
          allOf:
          - $ref: '#/components/schemas/onvif_RecordingSourceInformation'
          - description: "Information about the source of the recording. This gives\
              \ a description of where the data in the recording comes from. Since\
              \ a single\n\t\t\t\t\trecording is intended to record related material,\
              \ there is just one source. It is indicates the physical location or\
              \ the\n\t\t\t\t\tmajor data source for the recording. Currently the\
              \ recordingconfiguration cannot describe each individual data source."
        Track:
          description: Basic information about the track. Note that a track may represent
            a single contiguous time span or consist of multiple slices.
          items:
            $ref: '#/components/schemas/onvif_TrackInformation'
          type: array
      required:
      - RecordingToken
      - Source
      - Content
      - RecordingStatus
      type: object
    onvif_RecordingJobConfiguration:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_RecordingJobConfigurationExtension'
        Mode:
          description: "The mode of the job. If it is idle, nothing shall happen.\
            \ If it is active, the device shall try\n\t\t\t\tto obtain data from the\
            \ receivers. A client shall use GetRecordingJobState to determine if data\
            \ transfer is really taking place."
          type: string
        Priority:
          description: "This shall be a non-negative number. If there are multiple\
            \ recording jobs that store data to\n\t\t\t\tthe same track, the device\
            \ will only store the data for the recording job with the highest\n\t\t\
            \t\tpriority. The priority is specified per recording job, but the device\
            \ shall determine the priority\n\t\t\t\tof each track individually. If\
            \ there are two recording jobs with the same priority, the device\n\t\t\
            \t\tshall record the data corresponding to the recording job that was\
            \ activated the latest."
          format: int32
          type: integer
        RecordingToken:
          description: Identifies the recording to which this job shall store the
            received data.
          maxLength: 64
          type: string
        Source:
          description: Source of the recording.
          items:
            $ref: '#/components/schemas/onvif_RecordingJobSource'
          type: array
      required:
      - RecordingToken
      - Mode
      - Priority
      type: object
    onvif_RecordingJobConfigurationExtension:
      type: object
    onvif_RecordingJobSource:
      properties:
        AutoCreateReceiver:
          description: "If this field is TRUE, and if the SourceToken is omitted,\
            \ the device\n\t\t\t\tshall create a receiver object (through the receiver\
            \ service) and assign the\n\t\t\t\tReceiverReference to the SourceToken\
            \ field. When retrieving the RecordingJobConfiguration\n\t\t\t\tfrom the\
            \ device, the AutoCreateReceiver field shall never be present."
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_RecordingJobSourceExtension'
        SourceToken:
          allOf:
          - $ref: '#/components/schemas/onvif_SourceReference'
          - description: "This field shall be a reference to the source of the data.\
              \ The type of the source\n\t\t\t\tis determined by the attribute Type\
              \ in the SourceToken structure. If Type is\n\t\t\t\thttp://www.onvif.org/ver10/schema/Receiver,\
              \ the token is a ReceiverReference. In this case\n\t\t\t\tthe device\
              \ shall receive the data over the network. If Type is\n\t\t\t\thttp://www.onvif.org/ver10/schema/Profile,\
              \ the token identifies a media profile, instructing the\n\t\t\t\tdevice\
              \ to obtain data from a profile that exists on the local device."
        Tracks:
          description: List of tracks associated with the recording.
          items:
            $ref: '#/components/schemas/onvif_RecordingJobTrack'
          type: array
      type: object
    onvif_RecordingJobSourceExtension:
      type: object
    onvif_RecordingJobStateInformation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_RecordingJobStateInformationExtension'
        RecordingToken:
          description: Identification of the recording that the recording job records
            to.
          maxLength: 64
          type: string
        Sources:
          description: Identifies the data source of the recording job.
          items:
            $ref: '#/components/schemas/onvif_RecordingJobStateSource'
          type: array
        State:
          description: Holds the aggregated state over the whole RecordingJobInformation
            structure.
          type: string
      required:
      - RecordingToken
      - State
      type: object
    onvif_RecordingJobStateInformationExtension:
      type: object
    onvif_RecordingJobStateSource:
      properties:
        SourceToken:
          allOf:
          - $ref: '#/components/schemas/onvif_SourceReference'
          - description: Identifies the data source of the recording job.
        State:
          description: Holds the aggregated state over all substructures of RecordingJobStateSource.
          type: string
        Tracks:
          allOf:
          - $ref: '#/components/schemas/onvif_RecordingJobStateTracks'
          - description: List of track items.
      required:
      - SourceToken
      - State
      - Tracks
      type: object
    onvif_RecordingJobStateTrack:
      properties:
        Destination:
          description: Indicates the destination track.
          maxLength: 64
          type: string
        Error:
          description: "Optionally holds an implementation defined string value that\
            \ describes the error.\n\t\t\t\tThe string should be in the English language."
          type: string
        SourceTag:
          description: Identifies the track of the data source that provides the data.
          type: string
        State:
          description: "Provides the job state of the track. The valid\n\t\t\t\tvalues\
            \ of state shall be “Idle”, “Active” and “Error”. If state equals “Error”,\
            \ the Error field may be filled in with an implementation defined value."
          type: string
      required:
      - SourceTag
      - Destination
      - State
      type: object
    onvif_RecordingJobStateTracks:
      properties:
        Track:
          items:
            $ref: '#/components/schemas/onvif_RecordingJobStateTrack'
          type: array
      type: object
    onvif_RecordingJobTrack:
      properties:
        Destination:
          description: "The destination is the tracktoken of the track to which the\
            \ device shall store the\n\t\t\t\treceived data."
          maxLength: 64
          type: string
        SourceTag:
          description: "If the received RTSP stream contains multiple tracks of the\
            \ same type, the\n\t\t\t\t\t\tSourceTag differentiates between those Tracks.\
            \ This field can be ignored in case of recording a local source."
          type: string
      required:
      - SourceTag
      - Destination
      type: object
    onvif_RecordingSourceInformation:
      description: A set of informative desciptions of a data source. The Search searvice
        allows a client to filter on recordings based on information in this structure.
      properties:
        Address:
          description: URI provided by the service supplying data to be recorded.
            A device shall support at least 128 characters.
          type: string
        Description:
          description: Informative description of the source.
          type: string
        Location:
          description: Informative description of the physical location of the source,
            e.g. the coordinates on a map.
          type: string
        Name:
          description: Informative user readable name of the source, e.g. "Camera23".
            A device shall support at least 20 characters.
          maxLength: 64
          type: string
        SourceId:
          description: "Identifier for the source chosen by the client that creates\
            \ the structure.\n\t\t\t\tThis identifier is opaque to the device. Clients\
            \ may use any type of URI for this field. A device shall support at least\
            \ 128 characters."
          type: string
      required:
      - SourceId
      - Name
      - Location
      - Description
      - Address
      type: object
    onvif_RecordingStatus:
      enum:
      - Initiated
      - Recording
      - Stopped
      - Removing
      - Removed
      - Unknown
      type: string
    onvif_RecordingSummary:
      properties:
        DataFrom:
          description: The earliest point in time where there is recorded data on
            the device.
          format: date-time
          type: string
        DataUntil:
          description: The most recent point in time where there is recorded data
            on the device.
          format: date-time
          type: string
        NumberRecordings:
          description: The device contains this many recordings.
          format: int32
          type: integer
      required:
      - DataFrom
      - DataUntil
      - NumberRecordings
      type: object
    onvif_Rectangle:
      properties:
        bottom:
          type: number
        left:
          type: number
        right:
          type: number
        top:
          type: number
      type: object
    onvif_RelativeFocus:
      properties:
        Distance:
          description: Distance parameter for the relative focus control.
          type: number
        Speed:
          description: Speed parameter for the relative focus control.
          type: number
      required:
      - Distance
      type: object
    onvif_RelativeFocusOptions:
      properties:
        Distance:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the distance.
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the speed.
      required:
      - Distance
      - Speed
      type: object
    onvif_RelativeFocusOptions20:
      properties:
        Distance:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the distance.
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Valid ranges of the speed.
      required:
      - Distance
      type: object
    onvif_RelayIdleState:
      enum:
      - closed
      - open
      type: string
    onvif_RelayLogicalState:
      enum:
      - active
      - inactive
      type: string
    onvif_RelayMode:
      enum:
      - Monostable
      - Bistable
      type: string
    onvif_RelayOutput:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Properties:
            $ref: '#/components/schemas/onvif_RelayOutputSettings'
        required:
        - Properties
        type: object
    onvif_RelayOutputSettings:
      properties:
        DelayTime:
          description: Time after which the relay returns to its idle state if it
            is in monostable mode. If the Mode field is set to bistable mode the value
            of the parameter can be ignored.
          format: date-time
          type: string
        IdleState:
          allOf:
          - $ref: '#/components/schemas/onvif_RelayIdleState'
          - description: "'open' or 'closed'"
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_RelayMode'
          - description: "'Bistable' or 'Monostable'"
      required:
      - Mode
      - DelayTime
      - IdleState
      type: object
    onvif_RemoteUser:
      properties:
        Password:
          type: string
        UseDerivedPassword:
          type: boolean
        Username:
          type: string
      required:
      - Username
      - UseDerivedPassword
      type: object
    onvif_Removed:
      type: object
    onvif_Rename:
      properties:
        from:
          $ref: '#/components/schemas/onvif_ObjectId'
        to:
          $ref: '#/components/schemas/onvif_ObjectId'
      required:
      - from
      - to
      type: object
    onvif_ReplayCapabilities:
      properties:
        XAddr:
          description: The address of the replay service.
          type: string
      required:
      - XAddr
      type: object
    onvif_ReplayConfiguration:
      description: Configuration parameters for the replay service.
      properties:
        SessionTimeout:
          description: The RTSP session timeout.
          format: date-time
          type: string
      required:
      - SessionTimeout
      type: object
    onvif_Reverse:
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_ReverseMode'
          - description: Parameter to enable/disable Reverse feature.
      required:
      - Mode
      type: object
    onvif_ReverseMode:
      enum:
      - false
      - true
      - AUTO
      - Extended
      type: string
    onvif_ReverseOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ReverseOptionsExtension'
        Mode:
          description: Options of Reverse mode parameter.
          items:
            $ref: '#/components/schemas/onvif_ReverseMode'
          type: array
      type: object
    onvif_ReverseOptionsExtension:
      type: object
    onvif_Rotate:
      properties:
        Degree:
          description: Optional parameter to configure how much degree of clockwise
            rotation of image  for On mode. Omitting this parameter for On mode means
            180 degree rotation.
          format: int32
          type: integer
        Extension:
          $ref: '#/components/schemas/onvif_RotateExtension'
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_RotateMode'
          - description: Parameter to enable/disable Rotation feature.
      required:
      - Mode
      type: object
    onvif_RotateExtension:
      type: object
    onvif_RotateMode:
      enum:
      - false
      - true
      - AUTO
      type: string
    onvif_RotateOptions:
      properties:
        DegreeList:
          allOf:
          - $ref: '#/components/schemas/onvif_IntItems'
          - description: List of supported degree value for rotation.
        Extension:
          $ref: '#/components/schemas/onvif_RotateOptionsExtension'
        Mode:
          description: Supported options of Rotate mode parameter.
          items:
            $ref: '#/components/schemas/onvif_RotateMode'
          type: array
        Reboot:
          description: "After setting the rotation, if a device starts to reboot this\
            \ value is true.\n\t\t\t\tIf a device can handle rotation setting without\
            \ rebooting this value is false."
          type: boolean
      required:
      - Mode
      type: object
    onvif_RotateOptionsExtension:
      type: object
    onvif_RuleEngineConfiguration:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_RuleEngineConfigurationExtension'
        Rule:
          items:
            $ref: '#/components/schemas/onvif_Config'
          type: array
      type: object
    onvif_RuleEngineConfigurationExtension:
      type: object
    onvif_SceneOrientation:
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_SceneOrientationMode'
          - description: Parameter to assign the way the camera determines the scene
              orientation.
        Orientation:
          description: "Assigned or determined scene orientation based on the Mode.\
            \ When assigning the Mode to AUTO, this field \n\t\t\t\t\t\tis optional\
            \ and will be ignored by the device. When assigning the Mode to MANUAL,\
            \ this field is required \n\t\t\t\t\t\tand the device will return an InvalidArgs\
            \ fault if missing."
          type: string
      required:
      - Mode
      type: object
    onvif_SceneOrientationMode:
      enum:
      - MANUAL
      - AUTO
      type: string
    onvif_SceneOrientationOption:
      description: Defines the acceptable values for the Orientation element of the
        SceneOrientation type
      enum:
      - Below
      - Horizon
      - Above
      type: string
    onvif_Scope:
      properties:
        ScopeDef:
          allOf:
          - $ref: '#/components/schemas/onvif_ScopeDefinition'
          - description: Indicates if the scope is fixed or configurable.
        ScopeItem:
          description: Scope item URI.
          type: string
      required:
      - ScopeDef
      - ScopeItem
      type: object
    onvif_ScopeDefinition:
      enum:
      - Fixed
      - Configurable
      type: string
    onvif_SearchCapabilities:
      properties:
        MetadataSearch:
          type: boolean
        XAddr:
          type: string
      required:
      - XAddr
      - MetadataSearch
      type: object
    onvif_SearchScope:
      description: A structure for defining a limited scope when searching in recorded
        data.
      properties:
        Extension:
          allOf:
          - $ref: '#/components/schemas/onvif_SearchScopeExtension'
          - description: Extension point
        IncludedRecordings:
          description: A list of recordings that are included in the scope. If this
            list is included, only data from one of these recordings shall be searched.
          items:
            maxLength: 64
            type: string
          type: array
        IncludedSources:
          description: A list of sources that are included in the scope. If this list
            is included, only data from one of these sources shall be searched.
          items:
            $ref: '#/components/schemas/onvif_SourceReference'
          type: array
        RecordingInformationFilter:
          description: An xpath expression used to specify what recordings to search.
            Only those recordings with an RecordingInformation structure that matches
            the filter shall be searched.
          type: string
      type: object
    onvif_SearchScopeExtension:
      type: object
    onvif_SearchState:
      enum:
      - Queued
      - Searching
      - Completed
      - Unknown
      type: string
    onvif_SecurityCapabilities:
      properties:
        AccessPolicyConfig:
          description: Indicates whether or not access policy configuration is supported.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_SecurityCapabilitiesExtension'
        KerberosToken:
          description: Indicates whether or not WS-Security Kerberos token is supported.
          type: boolean
        OnboardKeyGeneration:
          description: Indicates whether or not onboard key generation is supported.
          type: boolean
        RELToken:
          description: Indicates whether or not WS-Security REL token is supported.
          type: boolean
        SAMLToken:
          description: Indicates whether or not WS-Security SAML token is supported.
          type: boolean
        TLS1.1:
          description: Indicates whether or not TLS 1.1 is supported.
          type: boolean
        TLS1.2:
          description: Indicates whether or not TLS 1.2 is supported.
          type: boolean
        X.509Token:
          description: Indicates whether or not WS-Security X.509 token is supported.
          type: boolean
      required:
      - TLS1.1
      - TLS1.2
      - OnboardKeyGeneration
      - AccessPolicyConfig
      - X.509Token
      - SAMLToken
      - KerberosToken
      - RELToken
      type: object
    onvif_SecurityCapabilitiesExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_SecurityCapabilitiesExtension2'
        TLS1.0:
          type: boolean
      required:
      - TLS1.0
      type: object
    onvif_SecurityCapabilitiesExtension2:
      properties:
        Dot1X:
          type: boolean
        RemoteUserHandling:
          type: boolean
        SupportedEAPMethod:
          description: EAP Methods supported by the device. The int values refer to
            the
          items:
            format: int32
            type: integer
          type: array
      required:
      - Dot1X
      - RemoteUserHandling
      type: object
    onvif_SetDateTimeType:
      enum:
      - Manual
      - NTP
      type: string
    onvif_ShapeDescriptor:
      properties:
        BoundingBox:
          $ref: '#/components/schemas/onvif_Rectangle'
        CenterOfGravity:
          $ref: '#/components/schemas/onvif_Vector'
        Extension:
          $ref: '#/components/schemas/onvif_ShapeDescriptorExtension'
        Polygon:
          items:
            $ref: '#/components/schemas/onvif_Polygon'
          type: array
      required:
      - BoundingBox
      - CenterOfGravity
      type: object
    onvif_ShapeDescriptorExtension:
      type: object
    onvif_SimpleItem:
      description: Value name pair as defined by the corresponding description.
      properties:
        Name:
          description: Item name.
          type: string
        Value:
          description: Item value. The type is defined in the corresponding description.
          type: string
      required:
      - Name
      - Value
      type: object
    onvif_SimpleItemDescription:
      description: Description of a simple item. The type must be of cathegory simpleType
        (xs:string, xs:integer, xs:float, ...).
      properties:
        Name:
          description: Item name. Must be unique within a list.
          type: string
        Type:
          type: string
      required:
      - Name
      - Type
      type: object
    onvif_SourceIdentification:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_SourceIdentificationExtension'
        Name:
          type: string
        Token:
          items:
            maxLength: 64
            type: string
          type: array
      required:
      - Name
      - Token
      type: object
    onvif_SourceIdentificationExtension:
      type: object
    onvif_SourceReference:
      properties:
        Token:
          maxLength: 64
          type: string
        Type:
          default: http://www.onvif.org/ver10/schema/Receiver
          type: string
      required:
      - Token
      type: object
    onvif_Space1DDescription:
      properties:
        URI:
          description: A URI of coordinate systems.
          type: string
        XRange:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: A range of x-axis.
      required:
      - URI
      - XRange
      type: object
    onvif_Space2DDescription:
      properties:
        URI:
          description: A URI of coordinate systems.
          type: string
        XRange:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: A range of x-axis.
        YRange:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: A range of y-axis.
      required:
      - URI
      - XRange
      - YRange
      type: object
    onvif_Split:
      properties:
        from:
          $ref: '#/components/schemas/onvif_ObjectId'
        to:
          items:
            $ref: '#/components/schemas/onvif_ObjectId'
          type: array
      required:
      - from
      - to
      type: object
    onvif_StorageReferencePath:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_StorageReferencePathExtension'
        RelativePath:
          description: gives the relative directory path on the storage
          type: string
        StorageToken:
          description: identifier of an existing Storage Configuration.
          maxLength: 64
          type: string
      required:
      - StorageToken
      type: object
    onvif_StorageReferencePathExtension:
      type: object
    onvif_StreamSetup:
      properties:
        Stream:
          allOf:
          - $ref: '#/components/schemas/onvif_StreamType'
          - description: Defines if a multicast or unicast stream is requested
        Transport:
          $ref: '#/components/schemas/onvif_Transport'
      required:
      - Stream
      - Transport
      type: object
    onvif_StreamType:
      enum:
      - RTP-Unicast
      - RTP-Multicast
      type: string
    onvif_StringItems:
      properties:
        Item:
          items:
            type: string
          type: array
      required:
      - Item
      type: object
    onvif_StringLikelihood:
      properties:
        Likelihood:
          type: number
      type: object
    onvif_SubscriptionPolicy:
      type: object
    onvif_SupportInformation:
      properties:
        Binary:
          allOf:
          - $ref: '#/components/schemas/onvif_AttachmentData'
          - description: The support information as attachment data.
        String:
          description: The support information as character data.
          type: string
      type: object
    onvif_SupportedAnalyticsModules:
      properties:
        AnalyticsModuleContentSchemaLocation:
          description: "It optionally contains a list of URLs that provide the location\
            \ of schema files.\n\t\t\t\t\tThese schema files describe the types and\
            \ elements used in the analytics module descriptions.\n\t\t\t\t\tAnalytics\
            \ module descriptions that reference types or elements imported from any\
            \ ONVIF defined schema files\n\t\t\t\t\tneed not explicitly list those\
            \ schema files."
          items:
            type: string
          type: array
        AnalyticsModuleDescription:
          items:
            $ref: '#/components/schemas/onvif_ConfigDescription'
          type: array
        Extension:
          $ref: '#/components/schemas/onvif_SupportedAnalyticsModulesExtension'
        Limit:
          description: Maximum number of concurrent instances.
          format: int32
          type: integer
      type: object
    onvif_SupportedAnalyticsModulesExtension:
      type: object
    onvif_SupportedRules:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_SupportedRulesExtension'
        Limit:
          description: Maximum number of concurrent instances.
          format: int32
          type: integer
        RuleContentSchemaLocation:
          description: Lists the location of all schemas that are referenced in the
            rules.
          items:
            type: string
          type: array
        RuleDescription:
          description: List of rules supported by the Video Analytics configuration..
          items:
            $ref: '#/components/schemas/onvif_ConfigDescription'
          type: array
      type: object
    onvif_SupportedRulesExtension:
      type: object
    onvif_SystemCapabilities:
      properties:
        DiscoveryBye:
          description: Indicates whether or not WS-Discovery Bye is supported.
          type: boolean
        DiscoveryResolve:
          description: Indicates whether or not WS Discovery resolve requests are
            supported.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_SystemCapabilitiesExtension'
        FirmwareUpgrade:
          description: Indicates whether or not firmware upgrade is supported.
          type: boolean
        RemoteDiscovery:
          description: Indicates whether or not remote discovery is supported.
          type: boolean
        SupportedVersions:
          description: Indicates supported ONVIF version(s).
          items:
            $ref: '#/components/schemas/onvif_OnvifVersion'
          type: array
        SystemBackup:
          description: Indicates whether or not system backup is supported.
          type: boolean
        SystemLogging:
          description: Indicates whether or not system logging is supported.
          type: boolean
      required:
      - DiscoveryResolve
      - DiscoveryBye
      - RemoteDiscovery
      - SystemBackup
      - SystemLogging
      - FirmwareUpgrade
      - SupportedVersions
      type: object
    onvif_SystemCapabilitiesExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_SystemCapabilitiesExtension2'
        HttpFirmwareUpgrade:
          type: boolean
        HttpSupportInformation:
          type: boolean
        HttpSystemBackup:
          type: boolean
        HttpSystemLogging:
          type: boolean
      type: object
    onvif_SystemCapabilitiesExtension2:
      type: object
    onvif_SystemDateTime:
      description: General date time inforamtion returned by the GetSystemDateTime
        method.
      properties:
        DateTimeType:
          allOf:
          - $ref: '#/components/schemas/onvif_SetDateTimeType'
          - description: Indicates if the time is set manully or through NTP.
        DaylightSavings:
          description: Informative indicator whether daylight savings is currently
            on/off.
          type: boolean
        Extension:
          $ref: '#/components/schemas/onvif_SystemDateTimeExtension'
        LocalDateTime:
          allOf:
          - $ref: '#/components/schemas/onvif_DateTime'
          - description: Date and time in local format.
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/onvif_TimeZone'
          - description: Timezone information in Posix format.
        UTCDateTime:
          allOf:
          - $ref: '#/components/schemas/onvif_DateTime'
          - description: Current system date and time in UTC format. This field is
              mandatory since version 2.0.
      required:
      - DateTimeType
      - DaylightSavings
      type: object
    onvif_SystemDateTimeExtension:
      type: object
    onvif_SystemLog:
      properties:
        Binary:
          allOf:
          - $ref: '#/components/schemas/onvif_AttachmentData'
          - description: The log information as attachment data.
        String:
          description: The log information as character data.
          type: string
      type: object
    onvif_SystemLogType:
      description: Enumeration describing the available system log modes.
      enum:
      - System
      - Access
      type: string
    onvif_SystemLogUri:
      properties:
        Type:
          $ref: '#/components/schemas/onvif_SystemLogType'
        Uri:
          type: string
      required:
      - Type
      - Uri
      type: object
    onvif_SystemLogUriList:
      properties:
        SystemLog:
          items:
            $ref: '#/components/schemas/onvif_SystemLogUri'
          type: array
      type: object
    onvif_TLSConfiguration:
      properties:
        CertificateID:
          type: string
      required:
      - CertificateID
      type: object
    onvif_Time:
      properties:
        Hour:
          description: Range is 0 to 23.
          format: int32
          type: integer
        Minute:
          description: Range is 0 to 59.
          format: int32
          type: integer
        Second:
          description: Range is 0 to 61 (typically 59).
          format: int32
          type: integer
      required:
      - Hour
      - Minute
      - Second
      type: object
    onvif_TimeZone:
      description: The TZ format is specified by POSIX, please refer to POSIX 1003.1
        section 8.3
      properties:
        TZ:
          description: Posix timezone string.
          type: string
      required:
      - TZ
      type: object
    onvif_ToneCompensation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_ToneCompensationExtension'
        Level:
          description: Optional level parameter specified with unitless normalized
            value from 0.0 to +1.0.
          type: number
        Mode:
          description: Parameter to enable/disable or automatic ToneCompensation feature.
            Its options shall be chosen from tt:ToneCompensationMode Type.
          type: string
      required:
      - Mode
      type: object
    onvif_ToneCompensationExtension:
      type: object
    onvif_ToneCompensationMode:
      enum:
      - false
      - true
      - AUTO
      type: string
    onvif_ToneCompensationOptions:
      properties:
        Level:
          description: Indicates whether or not support Level parameter for Tone Compensation.
          type: boolean
        Mode:
          description: Supported options for Tone Compensation mode. Its options shall
            be chosen from tt:ToneCompensationMode Type.
          items:
            type: string
          type: array
      required:
      - Mode
      - Level
      type: object
    onvif_TrackAttributes:
      properties:
        AudioAttributes:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioAttributes'
          - description: If the track is an audio track, exactly one of this structure
              shall be present and contain the audio attributes.
        Extension:
          $ref: '#/components/schemas/onvif_TrackAttributesExtension'
        MetadataAttributes:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataAttributes'
          - description: If the track is an metadata track, exactly one of this structure
              shall be present and contain the metadata attributes.
        TrackInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_TrackInformation'
          - description: The basic information about the track. Note that a track
              may represent a single contiguous time span or consist of multiple slices.
        VideoAttributes:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoAttributes'
          - description: If the track is a video track, exactly one of this structure
              shall be present and contain the video attributes.
      required:
      - TrackInformation
      type: object
    onvif_TrackAttributesExtension:
      type: object
    onvif_TrackConfiguration:
      properties:
        Description:
          description: Informative description of the track.
          type: string
        TrackType:
          allOf:
          - $ref: '#/components/schemas/onvif_TrackType'
          - description: "Type of the track. It shall be equal to the strings “Video”,\n\
              \t\t\t\t“Audio” or “Metadata”. The track shall only be able to hold\
              \ data of that type."
      required:
      - TrackType
      - Description
      type: object
    onvif_TrackInformation:
      properties:
        DataFrom:
          description: The start date and time of the oldest recorded data in the
            track.
          format: date-time
          type: string
        DataTo:
          description: The stop date and time of the newest recorded data in the track.
          format: date-time
          type: string
        Description:
          description: Informative description of the contents of the track.
          type: string
        TrackToken:
          maxLength: 64
          type: string
        TrackType:
          allOf:
          - $ref: '#/components/schemas/onvif_TrackType'
          - description: "Type of the track: \"Video\", \"Audio\" or \"Metadata\"\
              .\n\t\t\t\t\tThe track shall only be able to hold data of that type."
      required:
      - TrackToken
      - TrackType
      - Description
      - DataFrom
      - DataTo
      type: object
    onvif_TrackType:
      enum:
      - Video
      - Audio
      - Metadata
      - Extended
      type: string
    onvif_Transformation:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_TransformationExtension'
        Scale:
          $ref: '#/components/schemas/onvif_Vector'
        Translate:
          $ref: '#/components/schemas/onvif_Vector'
      type: object
    onvif_TransformationExtension:
      type: object
    onvif_Transport:
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/onvif_TransportProtocol'
          - description: Defines the network protocol for streaming, either UDP=RTP/UDP,
              RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
        Tunnel:
          allOf:
          - $ref: '#/components/schemas/onvif_Transport'
          - description: Optional element to describe further tunnel options. This
              element is normally not needed
      required:
      - Protocol
      type: object
    onvif_TransportProtocol:
      enum:
      - UDP
      - TCP
      - RTSP
      - HTTP
      type: string
    onvif_User:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_UserExtension'
        Password:
          description: Password string.
          type: string
        UserLevel:
          allOf:
          - $ref: '#/components/schemas/onvif_UserLevel'
          - description: User level string.
        Username:
          description: Username string.
          type: string
      required:
      - Username
      - UserLevel
      type: object
    onvif_UserExtension:
      type: object
    onvif_UserLevel:
      enum:
      - Administrator
      - Operator
      - User
      - Anonymous
      - Extended
      type: string
    onvif_Vector:
      properties:
        x:
          type: number
        y:
          type: number
      type: object
    onvif_Vector1D:
      properties:
        space:
          description: 'Zoom coordinate space selector. The following options are
            defined:'
          type: string
        x:
          type: number
      required:
      - x
      type: object
    onvif_Vector2D:
      properties:
        space:
          description: 'Pan/tilt coordinate space selector. The following options
            are defined:'
          type: string
        x:
          type: number
        y:
          type: number
      required:
      - x
      - y
      type: object
    onvif_VehicleInfo:
      properties:
        Brand:
          $ref: '#/components/schemas/onvif_StringLikelihood'
        Model:
          $ref: '#/components/schemas/onvif_StringLikelihood'
        Type:
          $ref: '#/components/schemas/onvif_StringLikelihood'
      required:
      - Type
      type: object
    onvif_VehicleType:
      enum:
      - Bus
      - Car
      - Truck
      - Bicycle
      - Motorcycle
      type: string
    onvif_VideoAnalyticsConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          AnalyticsEngineConfiguration:
            $ref: '#/components/schemas/onvif_AnalyticsEngineConfiguration'
          RuleEngineConfiguration:
            $ref: '#/components/schemas/onvif_RuleEngineConfiguration'
        required:
        - AnalyticsEngineConfiguration
        - RuleEngineConfiguration
        type: object
    onvif_VideoAnalyticsStream:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_VideoAnalyticsStreamExtension'
          type: array
        Frame:
          items:
            $ref: '#/components/schemas/onvif_Frame'
          type: array
      type: object
    onvif_VideoAnalyticsStreamChoice0:
      properties:
        Frame:
          items:
            $ref: '#/components/schemas/onvif_Frame'
          type: array
      type: object
    onvif_VideoAnalyticsStreamChoice1:
      properties:
        Extension:
          items:
            $ref: '#/components/schemas/onvif_VideoAnalyticsStreamExtension'
          type: array
      type: object
    onvif_VideoAnalyticsStreamChoice2:
      type: object
    onvif_VideoAnalyticsStreamExtension:
      type: object
    onvif_VideoAttributes:
      properties:
        Bitrate:
          description: Average bitrate in kbps.
          format: int32
          type: integer
        Encoding:
          description: Video encoding of the track.  Use value from tt:VideoEncoding
            for MPEG4. Otherwise use values from tt:VideoEncodingMimeNames and
          type: string
        Framerate:
          description: Average framerate in frames per second.
          type: number
        Height:
          description: The height of the video in pixels.
          format: int32
          type: integer
        Width:
          description: The width of the video in pixels.
          format: int32
          type: integer
      required:
      - Width
      - Height
      - Encoding
      - Framerate
      type: object
    onvif_VideoDecoderConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoDecoderConfigurationOptionsExtension'
        H264DecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_H264DecOptions'
          - description: If the device is able to decode H.264 streams this element
              describes the supported codecs and configurations
        JpegDecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_JpegDecOptions'
          - description: If the device is able to decode Jpeg streams this element
              describes the supported codecs and configurations
        Mpeg4DecOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_Mpeg4DecOptions'
          - description: If the device is able to decode Mpeg4 streams this element
              describes the supported codecs and configurations
      type: object
    onvif_VideoDecoderConfigurationOptionsExtension:
      type: object
    onvif_VideoEncoder2Configuration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Encoding:
            description: Video Media Subtype for the video format. For definitions
              see tt:VideoEncodingMimeNames and
            type: string
          GovLength:
            description: Group of Video frames length. Determines typically the interval
              in which the I-Frames will be coded. An entry of 1 indicates I-Frames
              are continuously generated. An entry of 2 indicates that every 2nd image
              is an I-Frame, and 3 only every 3rd frame, etc. The frames in between
              are coded as P or B Frames.
            format: int32
            type: integer
          GuaranteedFrameRate:
            description: "A value of true indicates that frame rate is a fixed value\
              \ rather than an upper limit,\n\t\t\t\t\t\t\tand that the video encoder\
              \ shall prioritize frame rate over all other adaptable\n\t\t\t\t\t\t\
              \tconfiguration values such as bitrate.  Default is false."
            type: boolean
          Multicast:
            allOf:
            - $ref: '#/components/schemas/onvif_MulticastConfiguration'
            - description: Defines the multicast settings that could be used for video
                streaming.
          Profile:
            description: The encoder profile as defined in tt:VideoEncodingProfiles.
            type: string
          Quality:
            description: Relative value for the video quantizers and the quality of
              the video. A high value within supported quality range means higher
              quality
            type: number
          RateControl:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoRateControl2'
            - description: Optional element to configure rate control related parameters.
          Resolution:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoResolution2'
            - description: Configured video resolution
        required:
        - Encoding
        - Resolution
        - Quality
        type: object
    onvif_VideoEncoder2ConfigurationOptions:
      properties:
        BitrateRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Supported range of encoded bitrate in kbps.
        ConstantBitRateSupported:
          description: Signal whether enforcing constant bitrate is supported.
          type: boolean
        Encoding:
          description: Video Media Subtype for the video format. For definitions see
            tt:VideoEncodingMimeNames and
          type: string
        FrameRatesSupported:
          description: List of supported target frame rates in fps (frames per second).
            The list shall be sorted with highest values first.
          type: number
        GovLengthRange:
          description: Exactly two values, which define the Lower and Upper bounds
            for the supported group of Video frames length. These values typically
            correspond to the I-Frame distance.
          format: int32
          type: integer
        GuaranteedFrameRateSupported:
          description: Indicates the support for the GuaranteedFrameRate attribute
            on the VideoEncoder2Configuration element.
          type: boolean
        ProfilesSupported:
          description: List of supported encoder profiles as defined in tt::VideoEncodingProfiles.
          type: string
        QualityRange:
          allOf:
          - $ref: '#/components/schemas/onvif_FloatRange'
          - description: Range of the quality values. A high value means higher quality.
        ResolutionsAvailable:
          description: List of supported image sizes.
          items:
            $ref: '#/components/schemas/onvif_VideoResolution2'
          type: array
      required:
      - Encoding
      - QualityRange
      - ResolutionsAvailable
      - BitrateRange
      type: object
    onvif_VideoEncoderConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Encoding:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoEncoding'
            - description: Used video codec, either Jpeg, H.264 or Mpeg4
          GuaranteedFrameRate:
            description: "A value of true indicates that frame rate is a fixed value\
              \ rather than an upper limit,\n\t\t\t\t\t\t\tand that the video encoder\
              \ shall prioritize frame rate over all other adaptable\n\t\t\t\t\t\t\
              \tconfiguration values such as bitrate.  Default is false."
            type: boolean
          H264:
            allOf:
            - $ref: '#/components/schemas/onvif_H264Configuration'
            - description: Optional element to configure H.264 related parameters.
          MPEG4:
            allOf:
            - $ref: '#/components/schemas/onvif_Mpeg4Configuration'
            - description: Optional element to configure Mpeg4 related parameters.
          Multicast:
            allOf:
            - $ref: '#/components/schemas/onvif_MulticastConfiguration'
            - description: Defines the multicast settings that could be used for video
                streaming.
          Quality:
            description: Relative value for the video quantizers and the quality of
              the video. A high value within supported quality range means higher
              quality
            type: number
          RateControl:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoRateControl'
            - description: Optional element to configure rate control related parameters.
          Resolution:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoResolution'
            - description: Configured video resolution
          SessionTimeout:
            description: The rtsp session timeout for the related video stream
            format: date-time
            type: string
        required:
        - Encoding
        - Resolution
        - Quality
        - Multicast
        - SessionTimeout
        type: object
    onvif_VideoEncoderConfigurationOptions:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoEncoderOptionsExtension'
        GuaranteedFrameRateSupported:
          description: Indicates the support for the GuaranteedFrameRate attribute
            on the VideoEncoderConfiguration element.
          type: boolean
        H264:
          allOf:
          - $ref: '#/components/schemas/onvif_H264Options'
          - description: Optional H.264 encoder settings ranges (See also Extension
              element).
        JPEG:
          allOf:
          - $ref: '#/components/schemas/onvif_JpegOptions'
          - description: Optional JPEG encoder settings ranges (See also Extension
              element).
        MPEG4:
          allOf:
          - $ref: '#/components/schemas/onvif_Mpeg4Options'
          - description: Optional MPEG-4 encoder settings ranges (See also Extension
              element).
        QualityRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRange'
          - description: Range of the quality values. A high value means higher quality.
      required:
      - QualityRange
      type: object
    onvif_VideoEncoderOptionsExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoEncoderOptionsExtension2'
        H264:
          allOf:
          - $ref: '#/components/schemas/onvif_H264Options2'
          - description: Optional H.264 encoder settings ranges.
        JPEG:
          allOf:
          - $ref: '#/components/schemas/onvif_JpegOptions2'
          - description: Optional JPEG encoder settings ranges.
        MPEG4:
          allOf:
          - $ref: '#/components/schemas/onvif_Mpeg4Options2'
          - description: Optional MPEG-4 encoder settings ranges.
      type: object
    onvif_VideoEncoderOptionsExtension2:
      type: object
    onvif_VideoEncoding:
      enum:
      - JPEG
      - MPEG4
      - H264
      type: string
    onvif_VideoEncodingMimeNames:
      description: Video Media Subtypes as referenced by IANA (without the leading
        "video/" Video Media Type).  See also
      enum:
      - JPEG
      - MPV4-ES
      - H264
      - H265
      type: string
    onvif_VideoEncodingProfiles:
      enum:
      - Simple
      - AdvancedSimple
      - Baseline
      - Main
      - Main10
      - Extended
      - High
      type: string
    onvif_VideoOutput:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          AspectRatio:
            description: Aspect ratio of the display as physical extent of width divided
              by height.
            type: number
          Extension:
            $ref: '#/components/schemas/onvif_VideoOutputExtension'
          Layout:
            $ref: '#/components/schemas/onvif_Layout'
          RefreshRate:
            description: Refresh rate of the display in Hertz.
            type: number
          Resolution:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoResolution'
            - description: Resolution of the display in Pixel.
        required:
        - Layout
        type: object
      description: Representation of a physical video outputs.
    onvif_VideoOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          OutputToken:
            description: Token of the Video Output the configuration applies to
            maxLength: 64
            type: string
        required:
        - OutputToken
        type: object
    onvif_VideoOutputConfigurationOptions:
      type: object
    onvif_VideoOutputExtension:
      type: object
    onvif_VideoRateControl:
      properties:
        BitrateLimit:
          description: the maximum output bitrate in kbps
          format: int32
          type: integer
        EncodingInterval:
          description: Interval at which images are encoded and transmitted. (A value
            of 1 means that every frame is encoded, a value of 2 means that every
            2nd frame is encoded ...)
          format: int32
          type: integer
        FrameRateLimit:
          description: Maximum output framerate in fps. If an EncodingInterval is
            provided the resulting encoded framerate will be reduced by the given
            factor.
          format: int32
          type: integer
      required:
      - FrameRateLimit
      - EncodingInterval
      - BitrateLimit
      type: object
    onvif_VideoRateControl2:
      properties:
        BitrateLimit:
          description: the maximum output bitrate in kbps
          format: int32
          type: integer
        ConstantBitRate:
          description: Enforce constant bitrate.
          type: boolean
        FrameRateLimit:
          description: Desired frame rate in fps. The actual rate may be lower due
            to e.g. performance limitations.
          type: number
      required:
      - FrameRateLimit
      - BitrateLimit
      type: object
    onvif_VideoResolution:
      properties:
        Height:
          description: Number of the lines of the Video image.
          format: int32
          type: integer
        Width:
          description: Number of the columns of the Video image.
          format: int32
          type: integer
      required:
      - Width
      - Height
      type: object
    onvif_VideoResolution2:
      properties:
        Height:
          description: Number of the lines of the Video image.
          format: int32
          type: integer
        Width:
          description: Number of the columns of the Video image.
          format: int32
          type: integer
      required:
      - Width
      - Height
      type: object
    onvif_VideoSource:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Extension:
            $ref: '#/components/schemas/onvif_VideoSourceExtension'
          Framerate:
            description: Frame rate in frames per second.
            type: number
          Imaging:
            allOf:
            - $ref: '#/components/schemas/onvif_ImagingSettings'
            - description: Optional configuration of the image sensor.
          Resolution:
            allOf:
            - $ref: '#/components/schemas/onvif_VideoResolution'
            - description: Horizontal and vertical resolution
        required:
        - Framerate
        - Resolution
        type: object
      description: Representation of a physical video input.
    onvif_VideoSourceConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ConfigurationEntity'
      - properties:
          Bounds:
            allOf:
            - $ref: '#/components/schemas/onvif_IntRectangle'
            - description: Rectangle specifying the Video capturing area. The capturing
                area shall not be larger than the whole Video source area.
          Extension:
            $ref: '#/components/schemas/onvif_VideoSourceConfigurationExtension'
          SourceToken:
            description: Reference to the physical input.
            maxLength: 64
            type: string
          ViewMode:
            description: Readonly parameter signalling Source configuration's view
              mode, for devices supporting different view modes as defined in tt:viewModes.
            type: string
        required:
        - SourceToken
        - Bounds
        type: object
    onvif_VideoSourceConfigurationExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoSourceConfigurationExtension2'
        Rotate:
          allOf:
          - $ref: '#/components/schemas/onvif_Rotate'
          - description: "Optional element to configure rotation of captured image.\n\
              \t\t\t\t\t\tWhat resolutions a device supports shall be unaffected by\
              \ the Rotate parameters."
      type: object
    onvif_VideoSourceConfigurationExtension2:
      properties:
        LensDescription:
          description: Optional element describing the geometric lens distortion.
            Multiple instances for future variable lens support.
          items:
            $ref: '#/components/schemas/onvif_LensDescription'
          type: array
        SceneOrientation:
          allOf:
          - $ref: '#/components/schemas/onvif_SceneOrientation'
          - description: Optional element describing the scene orientation in the
              camera’s field of view.
      type: object
    onvif_VideoSourceConfigurationOptions:
      properties:
        BoundsRange:
          allOf:
          - $ref: '#/components/schemas/onvif_IntRectangleRange'
          - description: "Supported range for the capturing area.\n\t\t\t\t\t\tDevice\
              \ that does not support cropped streaming shall express BoundsRange\
              \ option as mentioned below\n\t\t\t\t\t\tBoundsRange->XRange and BoundsRange->YRange\
              \ with same Min/Max values HeightRange and WidthRange Min/Max values\
              \ same as VideoSource Height and Width Limits."
        Extension:
          $ref: '#/components/schemas/onvif_VideoSourceConfigurationOptionsExtension'
        MaximumNumberOfProfiles:
          description: Maximum number of profiles.
          format: int32
          type: integer
        VideoSourceTokensAvailable:
          description: List of physical inputs.
          items:
            maxLength: 64
            type: string
          type: array
      required:
      - BoundsRange
      - VideoSourceTokensAvailable
      type: object
    onvif_VideoSourceConfigurationOptionsExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoSourceConfigurationOptionsExtension2'
        Rotate:
          allOf:
          - $ref: '#/components/schemas/onvif_RotateOptions'
          - description: Options of parameters for Rotation feature.
      type: object
    onvif_VideoSourceConfigurationOptionsExtension2:
      properties:
        SceneOrientationMode:
          description: Scene orientation modes supported by the device for this configuration.
          items:
            $ref: '#/components/schemas/onvif_SceneOrientationMode'
          type: array
      type: object
    onvif_VideoSourceExtension:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_VideoSourceExtension2'
        Imaging:
          allOf:
          - $ref: '#/components/schemas/onvif_ImagingSettings20'
          - description: Optional configuration of the image sensor. To be used if
              imaging service 2.00 is supported.
      type: object
    onvif_VideoSourceExtension2:
      type: object
    onvif_ViewModes:
      description: Source view modes supported by device.
      enum:
      - tt:Fisheye
      - tt:360Panorama
      - tt:180Panorama
      - tt:Quad
      - tt:Original
      - tt:LeftHalf
      - tt:RightHalf
      - tt:Dewarp
      type: string
    onvif_WhiteBalance:
      properties:
        CbGain:
          description: Bgain (unitless).
          type: number
        CrGain:
          description: Rgain (unitless).
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_WhiteBalanceMode'
          - description: Auto whitebalancing mode (auto/manual).
      required:
      - Mode
      - CrGain
      - CbGain
      type: object
    onvif_WhiteBalance20:
      properties:
        CbGain:
          description: Bgain (unitless).
          type: number
        CrGain:
          description: Rgain (unitless).
          type: number
        Extension:
          $ref: '#/components/schemas/onvif_WhiteBalance20Extension'
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_WhiteBalanceMode'
          - description: "'AUTO' or 'MANUAL'"
      required:
      - Mode
      type: object
    onvif_WhiteBalance20Extension:
      type: object
    onvif_WhiteBalanceMode:
      enum:
      - AUTO
      - MANUAL
      type: string
    onvif_WhiteBalanceOptions:
      properties:
        Mode:
          items:
            $ref: '#/components/schemas/onvif_WhiteBalanceMode'
          type: array
        YbGain:
          $ref: '#/components/schemas/onvif_FloatRange'
        YrGain:
          $ref: '#/components/schemas/onvif_FloatRange'
      required:
      - Mode
      - YrGain
      - YbGain
      type: object
    onvif_WhiteBalanceOptions20:
      properties:
        Extension:
          $ref: '#/components/schemas/onvif_WhiteBalanceOptions20Extension'
        Mode:
          description: Mode of WhiteBalance.
          items:
            $ref: '#/components/schemas/onvif_WhiteBalanceMode'
          type: array
        YbGain:
          $ref: '#/components/schemas/onvif_FloatRange'
        YrGain:
          $ref: '#/components/schemas/onvif_FloatRange'
      required:
      - Mode
      type: object
    onvif_WhiteBalanceOptions20Extension:
      type: object
    onvif_WideDynamicMode:
      enum:
      - false
      - true
      type: string
    onvif_WideDynamicRange:
      properties:
        Level:
          description: Optional level parameter (unitless)
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_WideDynamicMode'
          - description: White dynamic range (on/off)
      required:
      - Mode
      - Level
      type: object
    onvif_WideDynamicRange20:
      description: Type describing whether WDR mode is enabled or disabled (on/off).
      properties:
        Level:
          description: Optional level parameter (unit unspecified).
          type: number
        Mode:
          allOf:
          - $ref: '#/components/schemas/onvif_WideDynamicMode'
          - description: Wide dynamic range mode (on/off).
      required:
      - Mode
      type: object
    onvif_WideDynamicRangeOptions:
      properties:
        Level:
          $ref: '#/components/schemas/onvif_FloatRange'
        Mode:
          items:
            $ref: '#/components/schemas/onvif_WideDynamicMode'
          type: array
      required:
      - Mode
      - Level
      type: object
    onvif_WideDynamicRangeOptions20:
      properties:
        Level:
          $ref: '#/components/schemas/onvif_FloatRange'
        Mode:
          items:
            $ref: '#/components/schemas/onvif_WideDynamicMode'
          type: array
      required:
      - Mode
      type: object
    onvif_ZoomLimits:
      properties:
        Range:
          allOf:
          - $ref: '#/components/schemas/onvif_Space1DDescription'
          - description: A range of zoom limit
      required:
      - Range
      type: object
    soapenv_Body:
      type: object
    soapenv_Envelope:
      properties:
        Body:
          $ref: '#/components/schemas/soapenv_Body'
        Header:
          $ref: '#/components/schemas/soapenv_Header'
      required:
      - Body
      type: object
    soapenv_Fault:
      description: Fault reporting structure
      properties:
        Code:
          $ref: '#/components/schemas/soapenv_faultcode'
        Detail:
          $ref: '#/components/schemas/soapenv_detail'
        Node:
          type: string
        Reason:
          $ref: '#/components/schemas/soapenv_faultreason'
        Role:
          type: string
      required:
      - Code
      - Reason
      type: object
    soapenv_Header:
      description: Elements replacing the wildcard MUST be namespace qualified, but
        can be in the targetNamespace
      type: object
    soapenv_NotUnderstoodType:
      properties:
        qname:
          type: string
      required:
      - qname
      type: object
    soapenv_SupportedEnvType:
      properties:
        qname:
          type: string
      required:
      - qname
      type: object
    soapenv_UpgradeType:
      properties:
        SupportedEnvelope:
          items:
            $ref: '#/components/schemas/soapenv_SupportedEnvType'
          type: array
      required:
      - SupportedEnvelope
      type: object
    soapenv_detail:
      type: object
    soapenv_faultcode:
      properties:
        Subcode:
          $ref: '#/components/schemas/soapenv_subcode'
        Value:
          $ref: '#/components/schemas/soapenv_faultcodeEnum'
      required:
      - Value
      type: object
    soapenv_faultcodeEnum:
      enum:
      - tns:DataEncodingUnknown
      - tns:MustUnderstand
      - tns:Receiver
      - tns:Sender
      - tns:VersionMismatch
      type: string
    soapenv_faultreason:
      properties:
        Text:
          items:
            $ref: '#/components/schemas/soapenv_reasontext'
          type: array
      required:
      - Text
      type: object
    soapenv_reasontext:
      properties:
        lang:
          description: "lang (as an attribute name)\n       denotes an attribute whose\
            \ value\n       is a language code for the natural language of the content\
            \ of\n       any element; its value is inherited.  This name is reserved\n\
            \       by virtue of its definition in the XML specification."
          oneOf:
          - type: string
          - type: string
      type: object
    soapenv_subcode:
      properties:
        Subcode:
          $ref: '#/components/schemas/soapenv_subcode'
        Value:
          type: string
      required:
      - Value
      type: object
    tns1_space:
      enum:
      - default
      - preserve
      type: string
    wsa_AttributedAnyType:
      type: object
    wsa_AttributedQNameType:
      type: object
    wsa_AttributedURIType:
      type: object
    wsa_EndpointReferenceType:
      properties:
        Address:
          $ref: '#/components/schemas/wsa_AttributedURIType'
        Metadata:
          $ref: '#/components/schemas/wsa_MetadataType'
        ReferenceParameters:
          $ref: '#/components/schemas/wsa_ReferenceParametersType'
      required:
      - Address
      type: object
    wsa_FaultCodesOpenEnumType:
      enum:
      - tns:InvalidAddressingHeader
      - tns:InvalidAddress
      - tns:InvalidEPR
      - tns:InvalidCardinality
      - tns:MissingAddressInEPR
      - tns:DuplicateMessageID
      - tns:ActionMismatch
      - tns:MessageAddressingHeaderRequired
      - tns:DestinationUnreachable
      - tns:ActionNotSupported
      - tns:EndpointUnavailable
      type: string
    wsa_FaultCodesOpenEnumType1:
      oneOf:
      - type: object
    wsa_MetadataType:
      type: object
    wsa_ProblemActionType:
      properties:
        Action:
          $ref: '#/components/schemas/wsa_AttributedURIType'
        SoapAction:
          type: string
      type: object
    wsa_ReferenceParametersType:
      type: object
    wsa_RelatesToType:
      properties:
        RelationshipType:
          oneOf:
          - $ref: '#/components/schemas/wsa_RelationshipTypeOpenEnum'
      type: object
    wsa_RelationshipTypeOpenEnum:
      enum:
      - http://www.w3.org/2005/08/addressing/reply
      type: string
    wsa_RelationshipTypeOpenEnum1:
      oneOf:
      - $ref: '#/components/schemas/wsa_RelationshipTypeOpenEnum'
    wsnt_AbsoluteOrRelativeTimeType:
      oneOf:
      - type: string
      - type: string
    wsnt_CreatePullPoint:
      type: object
    wsnt_CreatePullPointResponse:
      properties:
        PullPoint:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
      required:
      - PullPoint
      type: object
    wsnt_DestroyPullPoint:
      type: object
    wsnt_DestroyPullPointResponse:
      type: object
    wsnt_FilterType:
      type: object
    wsnt_GetCurrentMessage:
      properties:
        Topic:
          $ref: '#/components/schemas/wsnt_TopicExpressionType'
      required:
      - Topic
      type: object
    wsnt_GetCurrentMessageResponse:
      type: object
    wsnt_GetMessages:
      properties:
        MaximumNumber:
          format: int32
          type: integer
      type: object
    wsnt_GetMessagesResponse:
      properties:
        NotificationMessage:
          items:
            $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          type: array
      type: object
    wsnt_InvalidFilterFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - properties:
          UnknownFilter:
            items:
              type: string
            type: array
        required:
        - UnknownFilter
        type: object
    wsnt_InvalidMessageContentExpressionFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_InvalidProducerPropertiesExpressionFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_InvalidTopicExpressionFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_Message:
      type: object
    wsnt_MultipleTopicsSpecifiedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_NoCurrentMessageOnTopicFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_NotificationMessageHolderType:
      properties:
        Message:
          $ref: '#/components/schemas/wsnt_Message'
        ProducerReference:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        SubscriptionReference:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        Topic:
          $ref: '#/components/schemas/wsnt_TopicExpressionType'
      required:
      - Message
      type: object
    wsnt_NotificationProducerRP:
      properties:
        FixedTopicSet:
          default: true
          type: boolean
        TopicExpression:
          items:
            $ref: '#/components/schemas/wsnt_TopicExpressionType'
          type: array
        TopicExpressionDialect:
          items:
            type: string
          type: array
        TopicSet:
          $ref: '#/components/schemas/wstop_TopicSetType'
      type: object
    wsnt_Notify:
      properties:
        NotificationMessage:
          items:
            $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          type: array
      required:
      - NotificationMessage
      type: object
    wsnt_NotifyMessageNotSupportedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_PauseFailedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_PauseSubscription:
      type: object
    wsnt_PauseSubscriptionResponse:
      type: object
    wsnt_QueryExpressionType:
      properties:
        Dialect:
          type: string
      required:
      - Dialect
      type: object
    wsnt_Renew:
      properties:
        TerminationTime:
          allOf:
          - oneOf:
            - nullable: true
            - $ref: '#/components/schemas/wsnt_AbsoluteOrRelativeTimeType'
      required:
      - TerminationTime
      type: object
    wsnt_RenewResponse:
      properties:
        CurrentTime:
          format: date-time
          type: string
        TerminationTime:
          format: date-time
          type: string
      required:
      - TerminationTime
      type: object
    wsnt_ResumeFailedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_ResumeSubscription:
      type: object
    wsnt_ResumeSubscriptionResponse:
      type: object
    wsnt_Subscribe:
      properties:
        ConsumerReference:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        Filter:
          $ref: '#/components/schemas/wsnt_FilterType'
        InitialTerminationTime:
          allOf:
          - oneOf:
            - nullable: true
            - $ref: '#/components/schemas/wsnt_AbsoluteOrRelativeTimeType'
        SubscriptionPolicy:
          $ref: '#/components/schemas/wsnt_SubscriptionPolicy'
      required:
      - ConsumerReference
      type: object
    wsnt_SubscribeCreationFailedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_SubscribeResponse:
      properties:
        CurrentTime:
          format: date-time
          type: string
        SubscriptionReference:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        TerminationTime:
          format: date-time
          type: string
      required:
      - SubscriptionReference
      type: object
    wsnt_SubscriptionManagerRP:
      properties:
        ConsumerReference:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        CreationTime:
          format: date-time
          type: string
        Filter:
          $ref: '#/components/schemas/wsnt_FilterType'
        SubscriptionPolicy:
          $ref: '#/components/schemas/wsnt_SubscriptionPolicyType'
      required:
      - ConsumerReference
      type: object
    wsnt_SubscriptionPolicy:
      type: object
    wsnt_SubscriptionPolicyType:
      type: object
    wsnt_TopicExpressionDialectUnknownFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_TopicExpressionType:
      properties:
        Dialect:
          type: string
      required:
      - Dialect
      type: object
    wsnt_TopicNotSupportedFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_UnableToCreatePullPointFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_UnableToDestroyPullPointFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_UnableToDestroySubscriptionFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_UnableToGetMessagesFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsnt_UnacceptableInitialTerminationTimeFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - properties:
          MaximumTime:
            format: date-time
            type: string
          MinimumTime:
            format: date-time
            type: string
        required:
        - MinimumTime
        type: object
    wsnt_UnacceptableTerminationTimeFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - properties:
          MaximumTime:
            format: date-time
            type: string
          MinimumTime:
            format: date-time
            type: string
        required:
        - MinimumTime
        type: object
    wsnt_UnrecognizedPolicyRequestFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - properties:
          UnrecognizedPolicy:
            items:
              type: string
            type: array
        type: object
    wsnt_Unsubscribe:
      type: object
    wsnt_UnsubscribeResponse:
      type: object
    wsnt_UnsupportedPolicyRequestFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - properties:
          UnsupportedPolicy:
            items:
              type: string
            type: array
        type: object
    wsnt_UseRaw:
      type: object
    wsrf-bf_BaseFaultType:
      properties:
        Description:
          items:
            $ref: '#/components/schemas/wsrf-bf_Description'
          type: array
        ErrorCode:
          $ref: '#/components/schemas/wsrf-bf_ErrorCode'
        FaultCause:
          $ref: '#/components/schemas/wsrf-bf_FaultCause'
        Originator:
          $ref: '#/components/schemas/wsa_EndpointReferenceType'
        Timestamp:
          format: date-time
          type: string
      required:
      - Timestamp
      type: object
    wsrf-bf_Description:
      properties:
        lang:
          description: "lang (as an attribute name)\n       denotes an attribute whose\
            \ value\n       is a language code for the natural language of the content\
            \ of\n       any element; its value is inherited.  This name is reserved\n\
            \       by virtue of its definition in the XML specification."
          oneOf:
          - type: string
          - type: string
      type: object
    wsrf-bf_ErrorCode:
      properties:
        dialect:
          type: string
      required:
      - dialect
      type: object
    wsrf-bf_FaultCause:
      type: object
    wstop_Documentation:
      type: object
    wstop_ExtensibleDocumented:
      properties:
        documentation:
          $ref: '#/components/schemas/wstop_Documentation'
      type: object
    wstop_QueryExpressionType:
      properties:
        Dialect:
          type: string
      required:
      - Dialect
      type: object
    wstop_TopicSetType:
      allOf:
      - $ref: '#/components/schemas/wstop_ExtensibleDocumented'
      - type: object
    xmime_base64Binary:
      properties:
        contentType:
          minLength: 3
          type: string
      type: object
    xmime_hexBinary:
      properties:
        contentType:
          minLength: 3
          type: string
      type: object
    xop_Include:
      properties:
        href:
          type: string
      required:
      - href
      type: object
    device_AddIPAddressFilter:
      properties:
        IPAddressFilter:
          $ref: '#/components/schemas/onvif_IPAddressFilter'
      required:
      - IPAddressFilter
      type: object
    device_AddIPAddressFilterResponse:
      type: object
    device_AddScopes:
      properties:
        ScopeItem:
          description: Contains a list of new configurable scope parameters that will
            be added to the existing configurable scope.
          items:
            type: string
          type: array
      required:
      - ScopeItem
      type: object
    device_AddScopesResponse:
      type: object
    device_AutoGeoModes:
      enum:
      - Location
      - Heading
      - Leveling
      type: string
    device_Capabilities:
      type: object
    device_CreateCertificate:
      properties:
        CertificateID:
          description: Certificate id.
          type: string
        Subject:
          description: Identification of the entity associated with the public-key.
          type: string
        ValidNotAfter:
          description: Certificate expiry start date.
          format: date-time
          type: string
        ValidNotBefore:
          description: Certificate validity start date.
          format: date-time
          type: string
      type: object
    device_CreateCertificateResponse:
      properties:
        NvtCertificate:
          allOf:
          - $ref: '#/components/schemas/onvif_Certificate'
          - description: base64 encoded DER representation of certificate.
      required:
      - NvtCertificate
      type: object
    device_CreateDot1XConfiguration:
      properties:
        Dot1XConfiguration:
          $ref: '#/components/schemas/onvif_Dot1XConfiguration'
      required:
      - Dot1XConfiguration
      type: object
    device_CreateDot1XConfigurationResponse:
      type: object
    device_CreateStorageConfiguration:
      properties:
        StorageConfiguration:
          $ref: '#/components/schemas/device_StorageConfigurationData'
      required:
      - StorageConfiguration
      type: object
    device_CreateStorageConfigurationResponse:
      properties:
        Token:
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    device_CreateUsers:
      properties:
        User:
          description: 'Creates new device users and corresponding credentials. Each
            user entry includes: username, password and user level. Either all users
            are created successfully or a fault message MUST be returned without creating
            any user. If trying to create several users with exactly the same username
            the request is rejected and no users are created. If password is missing,
            then fault message Too weak password is returned.'
          items:
            $ref: '#/components/schemas/onvif_User'
          type: array
      required:
      - User
      type: object
    device_CreateUsersResponse:
      type: object
    device_DeleteCertificates:
      properties:
        CertificateID:
          description: List of ids of certificates to delete.
          items:
            type: string
          type: array
      required:
      - CertificateID
      type: object
    device_DeleteCertificatesResponse:
      type: object
    device_DeleteDot1XConfiguration:
      properties:
        Dot1XConfigurationToken:
          items:
            maxLength: 64
            type: string
          type: array
      type: object
    device_DeleteDot1XConfigurationResponse:
      type: object
    device_DeleteGeoLocation:
      properties:
        Location:
          items:
            $ref: '#/components/schemas/onvif_LocationEntity'
          type: array
      required:
      - Location
      type: object
    device_DeleteGeoLocationResponse:
      type: object
    device_DeleteStorageConfiguration:
      properties:
        Token:
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    device_DeleteStorageConfigurationResponse:
      type: object
    device_DeleteUsers:
      properties:
        Username:
          description: Deletes users on an device and there may exist users that cannot
            be deleted to ensure access to the unit. Either all users are deleted
            successfully or a fault message MUST be returned and no users be deleted.
            If a username exists multiple times in the request, then a fault message
            is returned.
          items:
            type: string
          type: array
      required:
      - Username
      type: object
    device_DeleteUsersResponse:
      type: object
    device_DeviceServiceCapabilities:
      properties:
        Misc:
          allOf:
          - $ref: '#/components/schemas/device_MiscCapabilities'
          - description: Capabilities that do not fit in any of the other categories.
        Network:
          allOf:
          - $ref: '#/components/schemas/device_NetworkCapabilities'
          - description: Network capabilities.
        Security:
          allOf:
          - $ref: '#/components/schemas/device_SecurityCapabilities'
          - description: Security capabilities.
        System:
          allOf:
          - $ref: '#/components/schemas/device_SystemCapabilities'
          - description: System capabilities.
      required:
      - Network
      - Security
      - System
      type: object
    device_Extension:
      type: object
    device_GetAccessPolicy:
      type: object
    device_GetAccessPolicyResponse:
      properties:
        PolicyFile:
          $ref: '#/components/schemas/onvif_BinaryData'
      required:
      - PolicyFile
      type: object
    device_GetAuthFailureWarningConfiguration:
      type: object
    device_GetAuthFailureWarningConfigurationResponse:
      properties:
        Enabled:
          type: boolean
        MaxAuthFailures:
          format: int32
          type: integer
        MonitorPeriod:
          format: int32
          type: integer
      required:
      - Enabled
      - MonitorPeriod
      - MaxAuthFailures
      type: object
    device_GetAuthFailureWarningOptions:
      type: object
    device_GetAuthFailureWarningOptionsResponse:
      properties:
        AuthFailureRange:
          $ref: '#/components/schemas/onvif_IntRange'
        MonitorPeriodRange:
          $ref: '#/components/schemas/onvif_IntRange'
      required:
      - MonitorPeriodRange
      - AuthFailureRange
      type: object
    device_GetCACertificates:
      type: object
    device_GetCACertificatesResponse:
      properties:
        CACertificate:
          items:
            $ref: '#/components/schemas/onvif_Certificate'
          type: array
      type: object
    device_GetCapabilities:
      properties:
        Category:
          description: List of categories to retrieve capability information on.
          items:
            $ref: '#/components/schemas/onvif_CapabilityCategory'
          type: array
      type: object
    device_GetCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/onvif_Capabilities'
          - description: Capability information.
      required:
      - Capabilities
      type: object
    device_GetCertificateInformation:
      properties:
        CertificateID:
          type: string
      required:
      - CertificateID
      type: object
    device_GetCertificateInformationResponse:
      properties:
        CertificateInformation:
          $ref: '#/components/schemas/onvif_CertificateInformation'
      required:
      - CertificateInformation
      type: object
    device_GetCertificates:
      type: object
    device_GetCertificatesResponse:
      properties:
        NvtCertificate:
          description: Id and base64 encoded DER representation of all available certificates.
          items:
            $ref: '#/components/schemas/onvif_Certificate'
          type: array
      type: object
    device_GetCertificatesStatus:
      type: object
    device_GetCertificatesStatusResponse:
      properties:
        CertificateStatus:
          description: Indicates if a certificate is used in an optional HTTPS configuration
            of the device.
          items:
            $ref: '#/components/schemas/onvif_CertificateStatus'
          type: array
      type: object
    device_GetClientCertificateMode:
      type: object
    device_GetClientCertificateModeResponse:
      properties:
        Enabled:
          description: Indicates whether or not client certificates are required by
            device.
          type: boolean
      required:
      - Enabled
      type: object
    device_GetDNS:
      type: object
    device_GetDNSResponse:
      properties:
        DNSInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_DNSInformation'
          - description: DNS information.
      required:
      - DNSInformation
      type: object
    device_GetDPAddresses:
      type: object
    device_GetDPAddressesResponse:
      properties:
        DPAddress:
          items:
            $ref: '#/components/schemas/onvif_NetworkHost'
          type: array
      type: object
    device_GetDeviceInformation:
      type: object
    device_GetDeviceInformationResponse:
      properties:
        FirmwareVersion:
          description: The firmware version in the device.
          type: string
        HardwareId:
          description: The hardware ID of the device.
          type: string
        Manufacturer:
          description: The manufactor of the device.
          type: string
        Model:
          description: The device model.
          type: string
        SerialNumber:
          description: The serial number of the device.
          type: string
      required:
      - Manufacturer
      - Model
      - FirmwareVersion
      - SerialNumber
      - HardwareId
      type: object
    device_GetDiscoveryMode:
      type: object
    device_GetDiscoveryModeResponse:
      properties:
        DiscoveryMode:
          allOf:
          - $ref: '#/components/schemas/onvif_DiscoveryMode'
          - description: 'Indicator of discovery mode: Discoverable, NonDiscoverable.'
      required:
      - DiscoveryMode
      type: object
    device_GetDot11Capabilities:
      type: object
    device_GetDot11CapabilitiesResponse:
      properties:
        Capabilities:
          $ref: '#/components/schemas/onvif_Dot11Capabilities'
      required:
      - Capabilities
      type: object
    device_GetDot11Status:
      properties:
        InterfaceToken:
          maxLength: 64
          type: string
      required:
      - InterfaceToken
      type: object
    device_GetDot11StatusResponse:
      properties:
        Status:
          $ref: '#/components/schemas/onvif_Dot11Status'
      required:
      - Status
      type: object
    device_GetDot1XConfiguration:
      properties:
        Dot1XConfigurationToken:
          maxLength: 64
          type: string
      required:
      - Dot1XConfigurationToken
      type: object
    device_GetDot1XConfigurationResponse:
      properties:
        Dot1XConfiguration:
          $ref: '#/components/schemas/onvif_Dot1XConfiguration'
      required:
      - Dot1XConfiguration
      type: object
    device_GetDot1XConfigurations:
      type: object
    device_GetDot1XConfigurationsResponse:
      properties:
        Dot1XConfiguration:
          items:
            $ref: '#/components/schemas/onvif_Dot1XConfiguration'
          type: array
      type: object
    device_GetDynamicDNS:
      type: object
    device_GetDynamicDNSResponse:
      properties:
        DynamicDNSInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_DynamicDNSInformation'
          - description: Dynamic DNS information.
      required:
      - DynamicDNSInformation
      type: object
    device_GetEndpointReference:
      type: object
    device_GetEndpointReferenceResponse:
      properties:
        GUID:
          type: string
      required:
      - GUID
      type: object
    device_GetGeoLocation:
      type: object
    device_GetGeoLocationResponse:
      properties:
        Location:
          items:
            $ref: '#/components/schemas/onvif_LocationEntity'
          type: array
      type: object
    device_GetHostname:
      type: object
    device_GetHostnameResponse:
      properties:
        HostnameInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_HostnameInformation'
          - description: Contains the hostname information.
      required:
      - HostnameInformation
      type: object
    device_GetIPAddressFilter:
      type: object
    device_GetIPAddressFilterResponse:
      properties:
        IPAddressFilter:
          $ref: '#/components/schemas/onvif_IPAddressFilter'
      required:
      - IPAddressFilter
      type: object
    device_GetNTP:
      type: object
    device_GetNTPResponse:
      properties:
        NTPInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_NTPInformation'
          - description: NTP information.
      required:
      - NTPInformation
      type: object
    device_GetNetworkDefaultGateway:
      type: object
    device_GetNetworkDefaultGatewayResponse:
      properties:
        NetworkGateway:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkGateway'
          - description: Gets the default IPv4 and IPv6 gateway settings from the
              device.
      required:
      - NetworkGateway
      type: object
    device_GetNetworkInterfaces:
      type: object
    device_GetNetworkInterfacesResponse:
      properties:
        NetworkInterfaces:
          description: List of network interfaces.
          items:
            $ref: '#/components/schemas/onvif_NetworkInterface'
          type: array
      required:
      - NetworkInterfaces
      type: object
    device_GetNetworkProtocols:
      type: object
    device_GetNetworkProtocolsResponse:
      properties:
        NetworkProtocols:
          description: 'Contains an array of defined protocols supported by the device.
            There are three protocols defined; HTTP, HTTPS and RTSP. The following
            parameters can be retrieved for each protocol: port and enable/disable.'
          items:
            $ref: '#/components/schemas/onvif_NetworkProtocol'
          type: array
      type: object
    device_GetPasswordComplexityConfiguration:
      type: object
    device_GetPasswordComplexityConfigurationResponse:
      properties:
        BlockUsernameOccurrence:
          type: boolean
        MinLen:
          format: int32
          type: integer
        Number:
          format: int32
          type: integer
        PolicyConfigurationLocked:
          type: boolean
        SpecialChars:
          format: int32
          type: integer
        Uppercase:
          format: int32
          type: integer
      type: object
    device_GetPasswordComplexityOptions:
      type: object
    device_GetPasswordComplexityOptionsResponse:
      properties:
        BlockUsernameOccurrenceSupported:
          type: boolean
        MinLenRange:
          $ref: '#/components/schemas/onvif_IntRange'
        NumberRange:
          $ref: '#/components/schemas/onvif_IntRange'
        PolicyConfigurationLockSupported:
          type: boolean
        SpecialCharsRange:
          $ref: '#/components/schemas/onvif_IntRange'
        UppercaseRange:
          $ref: '#/components/schemas/onvif_IntRange'
      type: object
    device_GetPasswordHistoryConfiguration:
      type: object
    device_GetPasswordHistoryConfigurationResponse:
      properties:
        Enabled:
          type: boolean
        Length:
          format: int32
          type: integer
      required:
      - Enabled
      - Length
      type: object
    device_GetPkcs10Request:
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/onvif_BinaryData'
          - description: Optional base64 encoded DER attributes.
        CertificateID:
          description: List of ids of certificates to delete.
          type: string
        Subject:
          description: Relative Dinstinguished Name(RDN) CommonName(CN).
          type: string
      required:
      - CertificateID
      type: object
    device_GetPkcs10RequestResponse:
      properties:
        Pkcs10Request:
          allOf:
          - $ref: '#/components/schemas/onvif_BinaryData'
          - description: base64 encoded DER representation of certificate.
      required:
      - Pkcs10Request
      type: object
    device_GetRelayOutputs:
      type: object
    device_GetRelayOutputsResponse:
      properties:
        RelayOutputs:
          items:
            $ref: '#/components/schemas/onvif_RelayOutput'
          type: array
      type: object
    device_GetRemoteDiscoveryMode:
      type: object
    device_GetRemoteDiscoveryModeResponse:
      properties:
        RemoteDiscoveryMode:
          allOf:
          - $ref: '#/components/schemas/onvif_DiscoveryMode'
          - description: 'Indicator of discovery mode: Discoverable, NonDiscoverable.'
      required:
      - RemoteDiscoveryMode
      type: object
    device_GetRemoteUser:
      type: object
    device_GetRemoteUserResponse:
      properties:
        RemoteUser:
          $ref: '#/components/schemas/onvif_RemoteUser'
      type: object
    device_GetScopes:
      type: object
    device_GetScopesResponse:
      properties:
        Scopes:
          description: 'Contains a list of URI definining the device scopes. Scope
            parameters can be of two types: fixed and configurable. Fixed parameters
            can not be altered.'
          items:
            $ref: '#/components/schemas/onvif_Scope'
          type: array
      required:
      - Scopes
      type: object
    device_GetServiceCapabilities:
      type: object
    device_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/device_DeviceServiceCapabilities'
          - description: The capabilities for the device service is returned in the
              Capabilities element.
      required:
      - Capabilities
      type: object
    device_GetServices:
      properties:
        IncludeCapability:
          description: Indicates if the service capabilities (untyped) should be included
            in the response.
          type: boolean
      required:
      - IncludeCapability
      type: object
    device_GetServicesResponse:
      properties:
        Service:
          description: Each Service element contains information about one service.
          items:
            $ref: '#/components/schemas/device_Service'
          type: array
      required:
      - Service
      type: object
    device_GetStorageConfiguration:
      properties:
        Token:
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    device_GetStorageConfigurationResponse:
      properties:
        StorageConfiguration:
          $ref: '#/components/schemas/device_StorageConfiguration'
      required:
      - StorageConfiguration
      type: object
    device_GetStorageConfigurations:
      type: object
    device_GetStorageConfigurationsResponse:
      properties:
        StorageConfigurations:
          items:
            $ref: '#/components/schemas/device_StorageConfiguration'
          type: array
      type: object
    device_GetSystemBackup:
      type: object
    device_GetSystemBackupResponse:
      properties:
        BackupFiles:
          items:
            $ref: '#/components/schemas/onvif_BackupFile'
          type: array
      required:
      - BackupFiles
      type: object
    device_GetSystemDateAndTime:
      type: object
    device_GetSystemDateAndTimeResponse:
      properties:
        SystemDateAndTime:
          allOf:
          - $ref: '#/components/schemas/onvif_SystemDateTime'
          - description: Contains information whether system date and time are set
              manually or by NTP, daylight savings is on or off, time zone in POSIX
              1003.1 format and system date and time in UTC and also local system
              date and time.
      required:
      - SystemDateAndTime
      type: object
    device_GetSystemLog:
      properties:
        LogType:
          allOf:
          - $ref: '#/components/schemas/onvif_SystemLogType'
          - description: Specifies the type of system log to get.
      required:
      - LogType
      type: object
    device_GetSystemLogResponse:
      properties:
        SystemLog:
          allOf:
          - $ref: '#/components/schemas/onvif_SystemLog'
          - description: Contains the system log information.
      required:
      - SystemLog
      type: object
    device_GetSystemSupportInformation:
      type: object
    device_GetSystemSupportInformationResponse:
      properties:
        SupportInformation:
          allOf:
          - $ref: '#/components/schemas/onvif_SupportInformation'
          - description: Contains the arbitary device diagnostics information.
      required:
      - SupportInformation
      type: object
    device_GetSystemUris:
      type: object
    device_GetSystemUrisResponse:
      properties:
        Extension:
          $ref: '#/components/schemas/device_Extension'
        SupportInfoUri:
          type: string
        SystemBackupUri:
          type: string
        SystemLogUris:
          $ref: '#/components/schemas/onvif_SystemLogUriList'
      type: object
    device_GetUsers:
      type: object
    device_GetUsersResponse:
      properties:
        User:
          description: 'Contains a list of the onvif users and following information
            is included in each entry: username and user level.'
          items:
            $ref: '#/components/schemas/onvif_User'
          type: array
      type: object
    device_GetWsdlUrl:
      type: object
    device_GetWsdlUrlResponse:
      properties:
        WsdlUrl:
          type: string
      required:
      - WsdlUrl
      type: object
    device_GetZeroConfiguration:
      type: object
    device_GetZeroConfigurationResponse:
      properties:
        ZeroConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkZeroConfiguration'
          - description: Contains the zero-configuration.
      required:
      - ZeroConfiguration
      type: object
    device_LoadCACertificates:
      properties:
        CACertificate:
          items:
            $ref: '#/components/schemas/onvif_Certificate'
          type: array
      required:
      - CACertificate
      type: object
    device_LoadCACertificatesResponse:
      type: object
    device_LoadCertificateWithPrivateKey:
      properties:
        CertificateWithPrivateKey:
          items:
            $ref: '#/components/schemas/onvif_CertificateWithPrivateKey'
          type: array
      required:
      - CertificateWithPrivateKey
      type: object
    device_LoadCertificateWithPrivateKeyResponse:
      type: object
    device_LoadCertificates:
      properties:
        NVTCertificate:
          description: Optional id and base64 encoded DER representation of certificate.
          items:
            $ref: '#/components/schemas/onvif_Certificate'
          type: array
      required:
      - NVTCertificate
      type: object
    device_LoadCertificatesResponse:
      type: object
    device_MiscCapabilities:
      properties:
        AuxiliaryCommands:
          description: Lists of commands supported by SendAuxiliaryCommand.
          type: string
      type: object
    device_NetworkCapabilities:
      properties:
        DHCPv6:
          description: Indicates support for Stateful IPv6 DHCP.
          type: boolean
        Dot11Configuration:
          description: Indicates support for IEEE 802.11 configuration.
          type: boolean
        Dot1XConfigurations:
          description: Indicates the maximum number of Dot1X configurations supported
            by the device
          format: int32
          type: integer
        DynDNS:
          description: Indicates support for dynamic DNS configuration.
          type: boolean
        HostnameFromDHCP:
          description: Indicates support for retrieval of hostname from DHCP.
          type: boolean
        IPFilter:
          description: Indicates support for IP filtering.
          type: boolean
        IPVersion6:
          description: Indicates support for IPv6.
          type: boolean
        NTP:
          description: Maximum number of NTP servers supported by the devices SetNTP
            command.
          format: int32
          type: integer
        ZeroConfiguration:
          description: Indicates support for zeroconf.
          type: boolean
      type: object
    device_RemoveIPAddressFilter:
      properties:
        IPAddressFilter:
          $ref: '#/components/schemas/onvif_IPAddressFilter'
      required:
      - IPAddressFilter
      type: object
    device_RemoveIPAddressFilterResponse:
      type: object
    device_RemoveScopes:
      properties:
        ScopeItem:
          description: Contains a list of URIs that should be removed from the device
            scope.
          items:
            type: string
          type: array
      required:
      - ScopeItem
      type: object
    device_RemoveScopesResponse:
      properties:
        ScopeItem:
          description: Contains a list of URIs that has been removed from the device
            scope
          items:
            type: string
          type: array
      type: object
    device_RestoreSystem:
      properties:
        BackupFiles:
          items:
            $ref: '#/components/schemas/onvif_BackupFile'
          type: array
      required:
      - BackupFiles
      type: object
    device_RestoreSystemResponse:
      type: object
    device_ScanAvailableDot11Networks:
      properties:
        InterfaceToken:
          maxLength: 64
          type: string
      required:
      - InterfaceToken
      type: object
    device_ScanAvailableDot11NetworksResponse:
      properties:
        Networks:
          items:
            $ref: '#/components/schemas/onvif_Dot11AvailableNetworks'
          type: array
      type: object
    device_SecurityCapabilities:
      properties:
        AccessPolicyConfig:
          description: Indicates support for access policy configuration.
          type: boolean
        DefaultAccessPolicy:
          description: Indicates support for the ONVIF default access policy.
          type: boolean
        Dot1X:
          description: Indicates support for IEEE 802.1X configuration.
          type: boolean
        HttpDigest:
          description: Indicates support for WS over HTTP digest authenticated communication
            layer.
          type: boolean
        KerberosToken:
          description: Indicates support for WS-Security Kerberos token.
          type: boolean
        MaxPasswordHistory:
          description: Maximum number of passwords that the device can remember for
            each user
          format: int32
          type: integer
        MaxPasswordLength:
          description: Maximum number of characters supported for the password by
            CreateUsers and SetUser.
          format: int32
          type: integer
        MaxUserNameLength:
          description: Maximum number of characters supported for the username by
            CreateUsers.
          format: int32
          type: integer
        MaxUsers:
          description: The maximum number of users that the device supports.
          format: int32
          type: integer
        OnboardKeyGeneration:
          description: Indicates support for onboard key generation.
          type: boolean
        RELToken:
          description: Indicates support for WS-Security REL token.
          type: boolean
        RemoteUserHandling:
          description: Indicates support for remote user configuration. Used when
            accessing another device.
          type: boolean
        SAMLToken:
          description: Indicates support for WS-Security SAML token.
          type: boolean
        SecurityPolicies:
          description: 'Indicates which security policies are supported. Options are:
            ModifyPassword, PasswordComplexity, AuthFailureWarnings'
          type: string
        SupportedEAPMethods:
          description: EAP Methods supported by the device. The int values refer to
            the
          format: int32
          type: integer
        TLS1.0:
          description: Indicates support for TLS 1.0.
          type: boolean
        TLS1.1:
          description: Indicates support for TLS 1.1.
          type: boolean
        TLS1.2:
          description: Indicates support for TLS 1.2.
          type: boolean
        UsernameToken:
          description: Indicates support for WS-Security Username token.
          type: boolean
        X.509Token:
          description: Indicates support for WS-Security X.509 token.
          type: boolean
      type: object
    device_SendAuxiliaryCommand:
      properties:
        AuxiliaryCommand:
          maxLength: 128
          type: string
      required:
      - AuxiliaryCommand
      type: object
    device_SendAuxiliaryCommandResponse:
      properties:
        AuxiliaryCommandResponse:
          maxLength: 128
          type: string
      type: object
    device_Service:
      properties:
        Capabilities:
          $ref: '#/components/schemas/device_Capabilities'
        Namespace:
          description: Namespace of the service being described. This parameter allows
            to match the service capabilities to the service. Note that only one set
            of capabilities is supported per namespace.
          type: string
        Version:
          allOf:
          - $ref: '#/components/schemas/onvif_OnvifVersion'
          - description: The version of the service (not the ONVIF core spec version).
        XAddr:
          description: The transport addresses where the service can be reached. The
            scheme and IP part shall match the one used in the request (i.e. the GetServices
            request).
          type: string
      required:
      - Namespace
      - XAddr
      - Version
      type: object
    device_SetAccessPolicy:
      properties:
        PolicyFile:
          $ref: '#/components/schemas/onvif_BinaryData'
      required:
      - PolicyFile
      type: object
    device_SetAccessPolicyResponse:
      type: object
    device_SetAuthFailureWarningConfiguration:
      properties:
        Enabled:
          type: boolean
        MaxAuthFailures:
          format: int32
          type: integer
        MonitorPeriod:
          format: int32
          type: integer
      required:
      - Enabled
      - MonitorPeriod
      - MaxAuthFailures
      type: object
    device_SetAuthFailureWarningConfigurationResponse:
      type: object
    device_SetCertificatesStatus:
      properties:
        CertificateStatus:
          description: Indicates if a certificate is to be used in an optional HTTPS
            configuration of the device.
          items:
            $ref: '#/components/schemas/onvif_CertificateStatus'
          type: array
      type: object
    device_SetCertificatesStatusResponse:
      type: object
    device_SetClientCertificateMode:
      properties:
        Enabled:
          description: Indicates whether or not client certificates are required by
            device.
          type: boolean
      required:
      - Enabled
      type: object
    device_SetClientCertificateModeResponse:
      type: object
    device_SetDNS:
      properties:
        DNSManual:
          description: DNS address(es) set manually.
          items:
            $ref: '#/components/schemas/onvif_IPAddress'
          type: array
        FromDHCP:
          description: Indicate if the DNS address is to be retrieved using DHCP.
          type: boolean
        SearchDomain:
          description: DNS search domain.
          items:
            type: string
          type: array
      required:
      - FromDHCP
      type: object
    device_SetDNSResponse:
      type: object
    device_SetDPAddresses:
      properties:
        DPAddress:
          items:
            $ref: '#/components/schemas/onvif_NetworkHost'
          type: array
      type: object
    device_SetDPAddressesResponse:
      type: object
    device_SetDiscoveryMode:
      properties:
        DiscoveryMode:
          allOf:
          - $ref: '#/components/schemas/onvif_DiscoveryMode'
          - description: 'Indicator of discovery mode: Discoverable, NonDiscoverable.'
      required:
      - DiscoveryMode
      type: object
    device_SetDiscoveryModeResponse:
      type: object
    device_SetDot1XConfiguration:
      properties:
        Dot1XConfiguration:
          $ref: '#/components/schemas/onvif_Dot1XConfiguration'
      required:
      - Dot1XConfiguration
      type: object
    device_SetDot1XConfigurationResponse:
      type: object
    device_SetDynamicDNS:
      properties:
        Name:
          description: DNS name.
          type: string
        TTL:
          description: DNS record time to live.
          format: date-time
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/onvif_DynamicDNSType'
          - description: Dynamic DNS type.
      required:
      - Type
      type: object
    device_SetDynamicDNSResponse:
      type: object
    device_SetGeoLocation:
      properties:
        Location:
          items:
            $ref: '#/components/schemas/onvif_LocationEntity'
          type: array
      required:
      - Location
      type: object
    device_SetGeoLocationResponse:
      type: object
    device_SetHostname:
      properties:
        Name:
          description: The hostname to set.
          type: string
      required:
      - Name
      type: object
    device_SetHostnameFromDHCP:
      properties:
        FromDHCP:
          description: True if the hostname shall be obtained via DHCP.
          type: boolean
      required:
      - FromDHCP
      type: object
    device_SetHostnameFromDHCPResponse:
      properties:
        RebootNeeded:
          description: Indicates whether or not a reboot is required after configuration
            updates.
          type: boolean
      required:
      - RebootNeeded
      type: object
    device_SetHostnameResponse:
      type: object
    device_SetIPAddressFilter:
      properties:
        IPAddressFilter:
          $ref: '#/components/schemas/onvif_IPAddressFilter'
      required:
      - IPAddressFilter
      type: object
    device_SetIPAddressFilterResponse:
      type: object
    device_SetNTP:
      properties:
        FromDHCP:
          description: Indicate if NTP address information is to be retrieved using
            DHCP.
          type: boolean
        NTPManual:
          description: Manual NTP settings.
          items:
            $ref: '#/components/schemas/onvif_NetworkHost'
          type: array
      required:
      - FromDHCP
      type: object
    device_SetNTPResponse:
      type: object
    device_SetNetworkDefaultGateway:
      properties:
        IPv4Address:
          description: Sets IPv4 gateway address used as default setting.
          items:
            type: string
          type: array
        IPv6Address:
          description: Sets IPv6 gateway address used as default setting.
          items:
            type: string
          type: array
      type: object
    device_SetNetworkDefaultGatewayResponse:
      type: object
    device_SetNetworkInterfaces:
      properties:
        InterfaceToken:
          description: Symbolic network interface name.
          maxLength: 64
          type: string
        NetworkInterface:
          allOf:
          - $ref: '#/components/schemas/onvif_NetworkInterfaceSetConfiguration'
          - description: Network interface name.
      required:
      - InterfaceToken
      - NetworkInterface
      type: object
    device_SetNetworkInterfacesResponse:
      properties:
        RebootNeeded:
          description: "Indicates whether or not a reboot is required after configuration\
            \ updates.\n\t\t\t\t\t\t\t\t\tIf a device responds with RebootNeeded set\
            \ to false, the device can be reached\n\t\t\t\t\t\t\t\t\tvia the new IP\
            \ address without further action. A client should be aware that a device\n\
            \t\t\t\t\t\t\t\t\tmay not be responsive for a short period of time until\
            \ it signals availability at\n\t\t\t\t\t\t\t\t\tthe new address via the\
            \ discovery Hello messages.\n\t\t\t\t\t\t\t\t\tIf a device responds with\
            \ RebootNeeded set to true, it will be further available under\n\t\t\t\
            \t\t\t\t\t\tits previous IP address. The settings will only be activated\
            \ when the device is\n\t\t\t\t\t\t\t\t\trebooted via the SystemReboot\
            \ command."
          type: boolean
      required:
      - RebootNeeded
      type: object
    device_SetNetworkProtocols:
      properties:
        NetworkProtocols:
          description: 'Configures one or more defined network protocols supported
            by the device. There are currently three protocols defined; HTTP, HTTPS
            and RTSP. The following parameters can be set for each protocol: port
            and enable/disable.'
          items:
            $ref: '#/components/schemas/onvif_NetworkProtocol'
          type: array
      required:
      - NetworkProtocols
      type: object
    device_SetNetworkProtocolsResponse:
      type: object
    device_SetPasswordComplexityConfiguration:
      properties:
        BlockUsernameOccurrence:
          type: boolean
        MinLen:
          format: int32
          type: integer
        Number:
          format: int32
          type: integer
        PolicyConfigurationLocked:
          type: boolean
        SpecialChars:
          format: int32
          type: integer
        Uppercase:
          format: int32
          type: integer
      type: object
    device_SetPasswordComplexityConfigurationResponse:
      type: object
    device_SetPasswordHistoryConfiguration:
      properties:
        Enabled:
          type: boolean
        Length:
          format: int32
          type: integer
      required:
      - Enabled
      - Length
      type: object
    device_SetPasswordHistoryConfigurationResponse:
      type: object
    device_SetRelayOutputSettings:
      properties:
        Properties:
          $ref: '#/components/schemas/onvif_RelayOutputSettings'
        RelayOutputToken:
          maxLength: 64
          type: string
      required:
      - RelayOutputToken
      - Properties
      type: object
    device_SetRelayOutputSettingsResponse:
      type: object
    device_SetRelayOutputState:
      properties:
        LogicalState:
          $ref: '#/components/schemas/onvif_RelayLogicalState'
        RelayOutputToken:
          maxLength: 64
          type: string
      required:
      - RelayOutputToken
      - LogicalState
      type: object
    device_SetRelayOutputStateResponse:
      type: object
    device_SetRemoteDiscoveryMode:
      properties:
        RemoteDiscoveryMode:
          allOf:
          - $ref: '#/components/schemas/onvif_DiscoveryMode'
          - description: 'Indicator of discovery mode: Discoverable, NonDiscoverable.'
      required:
      - RemoteDiscoveryMode
      type: object
    device_SetRemoteDiscoveryModeResponse:
      type: object
    device_SetRemoteUser:
      properties:
        RemoteUser:
          $ref: '#/components/schemas/onvif_RemoteUser'
      type: object
    device_SetRemoteUserResponse:
      type: object
    device_SetScopes:
      properties:
        Scopes:
          description: Contains a list of scope parameters that will replace all existing
            configurable scope parameters.
          items:
            type: string
          type: array
      required:
      - Scopes
      type: object
    device_SetScopesResponse:
      type: object
    device_SetStorageConfiguration:
      properties:
        StorageConfiguration:
          $ref: '#/components/schemas/device_StorageConfiguration'
      required:
      - StorageConfiguration
      type: object
    device_SetStorageConfigurationResponse:
      type: object
    device_SetSystemDateAndTime:
      properties:
        DateTimeType:
          allOf:
          - $ref: '#/components/schemas/onvif_SetDateTimeType'
          - description: Defines if the date and time is set via NTP or manually.
        DaylightSavings:
          description: Automatically adjust Daylight savings if defined in TimeZone.
          type: boolean
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/onvif_TimeZone'
          - description: The time zone in POSIX 1003.1 format
        UTCDateTime:
          allOf:
          - $ref: '#/components/schemas/onvif_DateTime'
          - description: Date and time in UTC. If time is obtained via NTP, UTCDateTime
              has no meaning
      required:
      - DateTimeType
      - DaylightSavings
      type: object
    device_SetSystemDateAndTimeResponse:
      type: object
    device_SetSystemFactoryDefault:
      properties:
        FactoryDefault:
          allOf:
          - $ref: '#/components/schemas/onvif_FactoryDefaultType'
          - description: Specifies the factory default action type.
      required:
      - FactoryDefault
      type: object
    device_SetSystemFactoryDefaultResponse:
      type: object
    device_SetUser:
      properties:
        User:
          description: Updates the credentials for one or several users on an device.
            Either all change requests are processed successfully or a fault message
            MUST be returned. If the request contains the same username multiple times,
            a fault message is returned.
          items:
            $ref: '#/components/schemas/onvif_User'
          type: array
      required:
      - User
      type: object
    device_SetUserResponse:
      type: object
    device_SetZeroConfiguration:
      properties:
        Enabled:
          description: Specifies if the zero-configuration should be enabled or not.
          type: boolean
        InterfaceToken:
          description: Unique identifier referencing the physical interface.
          maxLength: 64
          type: string
      required:
      - InterfaceToken
      - Enabled
      type: object
    device_SetZeroConfigurationResponse:
      type: object
    device_StartFirmwareUpgrade:
      type: object
    device_StartFirmwareUpgradeResponse:
      properties:
        ExpectedDownTime:
          format: date-time
          type: string
        UploadDelay:
          format: date-time
          type: string
        UploadUri:
          type: string
      required:
      - UploadUri
      - UploadDelay
      - ExpectedDownTime
      type: object
    device_StartSystemRestore:
      type: object
    device_StartSystemRestoreResponse:
      properties:
        ExpectedDownTime:
          format: date-time
          type: string
        UploadUri:
          type: string
      required:
      - UploadUri
      - ExpectedDownTime
      type: object
    device_StorageConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_DeviceEntity'
      - properties:
          Data:
            $ref: '#/components/schemas/device_StorageConfigurationData'
        required:
        - Data
        type: object
    device_StorageConfigurationData:
      properties:
        Extension:
          $ref: '#/components/schemas/device_Extension'
        LocalPath:
          description: local path
          type: string
        StorageUri:
          description: Storage server address
          type: string
        User:
          allOf:
          - $ref: '#/components/schemas/device_UserCredential'
          - description: User credential for the storage server
        type:
          description: StorageType lists the acceptable values for type attribute
          type: string
      required:
      - type
      type: object
    device_StorageType:
      enum:
      - NFS
      - CIFS
      - CDMI
      - FTP
      type: string
    device_SystemCapabilities:
      properties:
        Addons:
          description: List of supported Addons by the device.
          type: string
        AutoGeo:
          description: List of supported automatic GeoLocation adjustment supported
            by the device. Valid items are defined by tds:AutoGeoMode.
          type: string
        DiscoveryBye:
          description: Indicates support for WS-Discovery Bye.
          type: boolean
        DiscoveryNotSupported:
          description: Indicates no support for network discovery.
          type: boolean
        DiscoveryResolve:
          description: Indicates support for WS Discovery resolve requests.
          type: boolean
        FirmwareUpgrade:
          description: Indicates support for firmware upgrade through MTOM.
          type: boolean
        GeoLocationEntries:
          description: If present signals support for geo location. The value signals
            the supported number of entries.
          format: int32
          type: integer
        HttpFirmwareUpgrade:
          description: Indicates support for firmware upgrade through HTTP.
          type: boolean
        HttpSupportInformation:
          description: Indicates support for retrieving support information through
            HTTP.
          type: boolean
        HttpSystemBackup:
          description: Indicates support for system backup through HTTP.
          type: boolean
        HttpSystemLogging:
          description: Indicates support for retrieval of system logging through HTTP.
          type: boolean
        MaxStorageConfigurations:
          description: Indicates maximum number of storage configurations supported.
          format: int32
          type: integer
        NetworkConfigNotSupported:
          description: Indicates no support for network configuration.
          type: boolean
        RemoteDiscovery:
          description: Indicates support for remote discovery.
          type: boolean
        StorageConfiguration:
          description: Indicates support for storage configuration interfaces.
          type: boolean
        StorageTypesSupported:
          description: Enumerates the supported StorageTypes, see tds:StorageType.
          type: string
        SystemBackup:
          description: Indicates support for system backup through MTOM.
          type: boolean
        SystemLogging:
          description: Indicates support for retrieval of system logging through MTOM.
          type: boolean
        UserConfigNotSupported:
          description: Indicates no support for user configuration.
          type: boolean
      type: object
    device_SystemReboot:
      type: object
    device_SystemRebootResponse:
      properties:
        Message:
          description: Contains the reboot message sent by the device.
          type: string
      required:
      - Message
      type: object
    device_UpgradeSystemFirmware:
      properties:
        Firmware:
          $ref: '#/components/schemas/onvif_AttachmentData'
      required:
      - Firmware
      type: object
    device_UpgradeSystemFirmwareResponse:
      properties:
        Message:
          type: string
      type: object
    device_UserCredential:
      properties:
        Extension:
          $ref: '#/components/schemas/device_Extension'
        Password:
          description: optional password
          type: string
        UserName:
          description: User name
          type: string
      required:
      - UserName
      type: object
    PullMessagesFaultResponse_Error:
      properties:
        PullMessagesFaultResponse:
          $ref: '#/components/schemas/event_PullMessagesFaultResponse'
      required:
      - PullMessagesFaultResponse
      type: object
    ResourceUnknownFault_Error:
      properties:
        ResourceUnknownFault:
          $ref: '#/components/schemas/wsrf-r_ResourceUnknownFaultType'
      required:
      - ResourceUnknownFault
      type: object
    UnableToCreatePullPointFault_Error:
      properties:
        UnableToCreatePullPointFault:
          $ref: '#/components/schemas/wsnt_UnableToCreatePullPointFaultType'
      required:
      - UnableToCreatePullPointFault
      type: object
    event_AbsoluteOrRelativeTimeType:
      oneOf:
      - type: string
      - type: string
    event_AddEventBroker:
      properties:
        EventBroker:
          $ref: '#/components/schemas/event_EventBrokerConfig'
      required:
      - EventBroker
      type: object
    event_AddEventBrokerResponse:
      type: object
    event_Capabilities:
      properties:
        EventBrokerProtocols:
          description: A space separated list of supported event broker protocols
            as defined by the tev:EventBrokerProtocol datatype.
          type: string
        MaxEventBrokers:
          description: Maxiumum number of event broker configurations that can be
            added to the device.
          format: int32
          type: integer
        MaxNotificationProducers:
          description: Maximum number of supported notification producers as defined
            by WS-BaseNotification.
          format: int32
          type: integer
        MaxPullPoints:
          description: Maximum supported number of notification pull points.
          format: int32
          type: integer
        MetadataOverMQTT:
          description: Indicates that metadata streaming over MQTT is supported
          type: boolean
        PersistentNotificationStorage:
          description: Indication if the device supports persistent notification storage.
          type: boolean
        WSPausableSubscriptionManagerInterfaceSupport:
          description: Indicates that the WS Pausable Subscription Manager Interface
            is supported.
          type: boolean
        WSPullPointSupport:
          description: Indicates that the WS Pull Point is supported.
          type: boolean
        WSSubscriptionPolicySupport:
          description: Indicates that the WS Subscription policy is supported.
          type: boolean
      type: object
    event_ConnectionStatus:
      enum:
      - Offline
      - Connecting
      - Connected
      type: string
    event_CreatePullPointSubscription:
      properties:
        Filter:
          allOf:
          - $ref: '#/components/schemas/wsnt_FilterType'
          - description: Optional XPATH expression to select specific topics.
        InitialTerminationTime:
          allOf:
          - oneOf:
            - nullable: true
            - $ref: '#/components/schemas/event_AbsoluteOrRelativeTimeType'
          - description: Initial termination time.
        SubscriptionPolicy:
          allOf:
          - $ref: '#/components/schemas/event_SubscriptionPolicy'
          - description: Refer to
      type: object
    event_CreatePullPointSubscriptionResponse:
      properties:
        CurrentTime:
          description: Current time of the server for synchronization purposes.
          format: date-time
          type: string
        SubscriptionReference:
          allOf:
          - $ref: '#/components/schemas/wsa_EndpointReferenceType'
          - description: Endpoint reference of the subscription to be used for pulling
              the messages.
        TerminationTime:
          description: Date time when the PullPoint will be shut down without further
            pull requests.
          format: date-time
          type: string
      required:
      - SubscriptionReference
      - CurrentTime
      - TerminationTime
      type: object
    event_DeleteEventBroker:
      properties:
        Address:
          type: string
      required:
      - Address
      type: object
    event_DeleteEventBrokerResponse:
      type: object
    event_EventBrokerConfig:
      properties:
        Address:
          description: Event broker address in the format "scheme://host:port[/resource]".
            The supported schemes shall be returned by the EventBrokerProtocols capability.
            The resource part of the URL is only valid when using websocket. The Address
            must be unique.
          type: string
        CertPathValidationPolicyID:
          description: The ID of the certification path validation policy used to
            validate the broker certificate. In case encryption is used but no validation
            policy is specified, the device shall not validate the broker certificate.
          type: string
        CertificateID:
          description: Optional certificate ID in the key store pointing to a client
            certificate to be used for authenticating the device at the message broker.
          type: string
        MetadataFilter:
          allOf:
          - $ref: '#/components/schemas/wsnt_FilterType'
          - description: Concrete Topic Expression to select specific metadata topics
              to publish.
        Password:
          description: Password for the event broker. Password shall not be included
            when returned with GetEventBrokers.
          type: string
        PublishFilter:
          allOf:
          - $ref: '#/components/schemas/wsnt_FilterType'
          - description: Concrete Topic Expression to select specific event topics
              to publish.
        QoS:
          description: 'Quality of service level to use when publishing. This defines
            the guarantee of delivery for a specific message: 0 = At most once, 1
            = At least once, 2 = Exactly once.'
          format: int32
          type: integer
        Status:
          description: Current connection status (see tev:ConnectionStatus for possible
            values).
          type: string
        TopicPrefix:
          description: Prefix that will be prepended to all topics before they are
            published. This is used to make published topics unique for each device.
            TopicPrefix is not allowed to be empty.
          type: string
        UserName:
          description: User name for the event broker.
          type: string
      required:
      - Address
      - TopicPrefix
      type: object
    event_EventBrokerProtocol:
      enum:
      - mqtt
      - mqtts
      - ws
      - wss
      type: string
    event_GetEventBrokers:
      properties:
        Address:
          type: string
      type: object
    event_GetEventBrokersResponse:
      properties:
        EventBroker:
          items:
            $ref: '#/components/schemas/event_EventBrokerConfig'
          type: array
      type: object
    event_GetEventProperties:
      type: object
    event_GetEventPropertiesResponse:
      properties:
        FixedTopicSet:
          description: True when topicset is fixed for all times.
          type: boolean
        MessageContentFilterDialect:
          description: Defines the XPath function set supported for message content
            filtering.
          items:
            type: string
          type: array
        MessageContentSchemaLocation:
          description: "The Message Content Description Language allows referencing\n\
            \t\t\t\t\t\t\tof vendor-specific types. In order to ease the integration\
            \ of such types into a client application,\n\t\t\t\t\t\t\tthe GetEventPropertiesResponse\
            \ shall list all URI locations to schema files whose types are\n\t\t\t\
            \t\t\t\tused in the description of notifications, with MessageContentSchemaLocation\
            \ elements."
          items:
            type: string
          type: array
        ProducerPropertiesFilterDialect:
          description: Optional ProducerPropertiesDialects. Refer to
          items:
            type: string
          type: array
        TopicExpressionDialect:
          description: Defines the XPath expression syntax supported for matching
            topic expressions.
          items:
            type: string
          type: array
        TopicNamespaceLocation:
          description: List of topic namespaces supported.
          items:
            type: string
          type: array
        TopicSet:
          allOf:
          - $ref: '#/components/schemas/wstop_TopicSetType'
          - description: Set of topics supported.
      required:
      - TopicNamespaceLocation
      - FixedTopicSet
      - TopicSet
      - TopicExpressionDialect
      - MessageContentFilterDialect
      - MessageContentSchemaLocation
      type: object
    event_GetServiceCapabilities:
      type: object
    event_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/event_Capabilities'
          - description: The capabilities for the event service is returned in the
              Capabilities element.
      required:
      - Capabilities
      type: object
    event_PullMessages:
      properties:
        MessageLimit:
          description: Upper limit for the number of messages to return at once. A
            server implementation may decide to return less messages.
          format: int32
          type: integer
        Timeout:
          description: Maximum time to block until this method returns.
          format: date-time
          type: string
      required:
      - Timeout
      - MessageLimit
      type: object
    event_PullMessagesFaultResponse:
      properties:
        MaxMessageLimit:
          description: Maximum message limit supported by the device.
          format: int32
          type: integer
        MaxTimeout:
          description: Maximum timeout supported by the device.
          format: date-time
          type: string
      required:
      - MaxTimeout
      - MaxMessageLimit
      type: object
    event_PullMessagesResponse:
      properties:
        CurrentTime:
          description: The date and time when the messages have been delivered by
            the web server to the client.
          format: date-time
          type: string
        NotificationMessage:
          description: List of messages. This list shall be empty in case of a timeout.
          items:
            $ref: '#/components/schemas/wsnt_NotificationMessageHolderType'
          type: array
        TerminationTime:
          description: Date time when the PullPoint will be shut down without further
            pull requests.
          format: date-time
          type: string
      required:
      - CurrentTime
      - TerminationTime
      type: object
    event_Seek:
      properties:
        Reverse:
          description: Reverse the pull direction of PullMessages.
          type: boolean
        UtcTime:
          description: The date and time to match against stored messages.
          format: date-time
          type: string
      required:
      - UtcTime
      type: object
    event_SeekResponse:
      type: object
    event_SetSynchronizationPoint:
      type: object
    event_SetSynchronizationPointResponse:
      type: object
    event_SubscriptionPolicy:
      description: Refer to
      type: object
    wsrf-r_ResourceUnavailableFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    wsrf-r_ResourceUnknownFaultType:
      allOf:
      - $ref: '#/components/schemas/wsrf-bf_BaseFaultType'
      - type: object
    imaging_Capabilities:
      properties:
        AdaptablePreset:
          description: Indicates whether or not imaging preset settings can be updated.
          type: boolean
        ImageStabilization:
          description: "Indicates whether or not Image Stabilization feature is supported.\n\
            \t\t\t\t\t\tThe use of this capability is deprecated, a client should\
            \ use GetOption to find out if image stabilization is supported."
          type: boolean
        Presets:
          description: Indicates whether or not Imaging Presets feature is supported.
          type: boolean
      type: object
    imaging_GetCurrentPreset:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource where the current Imaging
            Preset should be requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetCurrentPresetResponse:
      properties:
        Preset:
          allOf:
          - $ref: '#/components/schemas/imaging_ImagingPreset'
          - description: Current Imaging Preset in use for the specified Video Source.
      type: object
    imaging_GetImagingSettings:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource for which the ImagingSettings.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetImagingSettingsResponse:
      properties:
        ImagingSettings:
          allOf:
          - $ref: '#/components/schemas/onvif_ImagingSettings20'
          - description: ImagingSettings for the VideoSource that was requested.
      required:
      - ImagingSettings
      type: object
    imaging_GetMoveOptions:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource for the requested move options.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetMoveOptionsResponse:
      properties:
        MoveOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_MoveOptions20'
          - description: Valid ranges for the focus lens move options.
      required:
      - MoveOptions
      type: object
    imaging_GetOptions:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource for which the imaging parameter
            options are requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetOptionsResponse:
      properties:
        ImagingOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_ImagingOptions20'
          - description: Valid ranges for the imaging parameters that are categorized
              as device specific.
      required:
      - ImagingOptions
      type: object
    imaging_GetPresets:
      properties:
        VideoSourceToken:
          description: A reference to the VideoSource where the operation should take
            place.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetPresetsResponse:
      properties:
        Preset:
          description: List of Imaging Presets which are available for the requested
            VideoSource.
          items:
            $ref: '#/components/schemas/imaging_ImagingPreset'
          type: array
      required:
      - Preset
      type: object
    imaging_GetServiceCapabilities:
      type: object
    imaging_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/imaging_Capabilities'
          - description: The capabilities for the imaging service is returned in the
              Capabilities element.
      required:
      - Capabilities
      type: object
    imaging_GetStatus:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource where the imaging status
            should be requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_GetStatusResponse:
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/onvif_ImagingStatus20'
          - description: Requested imaging status.
      required:
      - Status
      type: object
    imaging_ImagingPreset:
      description: Type describing the Imaging Preset settings.
      properties:
        Name:
          description: Human readable name of the Imaging Preset.
          maxLength: 64
          type: string
        token:
          description: Unique identifier of this Imaging Preset.
          maxLength: 64
          type: string
        type:
          description: "Indicates Imaging Preset Type. Use timg:ImagingPresetType.\
            \ \n\t\t\t\t\t\tUsed for multi-language support and display."
          type: string
      required:
      - token
      - type
      - Name
      type: object
    imaging_ImagingPresetType:
      description: "Describes standard Imaging Preset types, used to facilitate Multi-language\
        \ support and client display.\n\t\t\t\t\t\"Custom\" Type shall be used when\
        \ Imaging Preset Name does not match any of the types included in the standard\
        \ classification."
      enum:
      - Custom
      - ClearWeather
      - Cloudy
      - Fog
      - Rain
      - Snowing
      - Snow
      - WDR
      - Shade
      - Night
      - Indoor
      - Fluorescent
      - Incandescent
      - Sodium(Natrium)
      - Sunrise(Horizon)
      - Sunset(Rear)
      - ExtremeHot
      - ExtremeCold
      - Underwater
      - CloseUp
      - Motion
      - FlickerFree50
      - FlickerFree60
      type: string
    imaging_Move:
      properties:
        Focus:
          allOf:
          - $ref: '#/components/schemas/onvif_FocusMove'
          - description: Content of the requested move (focus) operation.
        VideoSourceToken:
          description: Reference to the VideoSource for the requested move (focus)
            operation.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      - Focus
      type: object
    imaging_MoveResponse:
      type: object
    imaging_SetCurrentPreset:
      properties:
        PresetToken:
          description: Reference token to the Imaging Preset to be applied to the
            specified Video Source.
          maxLength: 64
          type: string
        VideoSourceToken:
          description: Reference token to the VideoSource to which the specified Imaging
            Preset should be applied.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      - PresetToken
      type: object
    imaging_SetCurrentPresetResponse:
      type: object
    imaging_SetImagingSettings:
      properties:
        ForcePersistence:
          type: boolean
        ImagingSettings:
          $ref: '#/components/schemas/onvif_ImagingSettings20'
        VideoSourceToken:
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      - ImagingSettings
      type: object
    imaging_SetImagingSettingsResponse:
      type: object
    imaging_Stop:
      properties:
        VideoSourceToken:
          description: Reference token to the VideoSource where the focus movement
            should be stopped.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    imaging_StopResponse:
      type: object
    media_AddAudioDecoderConfiguration:
      properties:
        ConfigurationToken:
          description: This element contains a reference to the AudioDecoderConfiguration
            to add.
          maxLength: 64
          type: string
        ProfileToken:
          description: This element contains a reference to the profile where the
            configuration should be added.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddAudioDecoderConfigurationResponse:
      type: object
    media_AddAudioEncoderConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the AudioEncoderConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddAudioEncoderConfigurationResponse:
      type: object
    media_AddAudioOutputConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the AudioOutputConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddAudioOutputConfigurationResponse:
      type: object
    media_AddAudioSourceConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the AudioSourceConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddAudioSourceConfigurationResponse:
      type: object
    media_AddMetadataConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the MetadataConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddMetadataConfigurationResponse:
      type: object
    media_AddPTZConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the PTZConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddPTZConfigurationResponse:
      type: object
    media_AddVideoAnalyticsConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the VideoAnalyticsConfiguration to
            add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddVideoAnalyticsConfigurationResponse:
      type: object
    media_AddVideoEncoderConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the VideoEncoderConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddVideoEncoderConfigurationResponse:
      type: object
    media_AddVideoSourceConfiguration:
      properties:
        ConfigurationToken:
          description: Contains a reference to the VideoSourceConfiguration to add
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - ConfigurationToken
      type: object
    media_AddVideoSourceConfigurationResponse:
      type: object
    media_Capabilities:
      properties:
        EXICompression:
          description: Indicates the support for the Efficient XML Interchange (EXI)
            binary XML format.
          type: boolean
        OSD:
          description: Indicates if OSD is supported.
          type: boolean
        ProfileCapabilities:
          allOf:
          - $ref: '#/components/schemas/media_ProfileCapabilities'
          - description: Media profile capabilities.
        Rotation:
          description: Indicates whether or not Rotation feature is supported.
          type: boolean
        SnapshotUri:
          description: Indicates if GetSnapshotUri is supported.
          type: boolean
        StreamingCapabilities:
          allOf:
          - $ref: '#/components/schemas/media_StreamingCapabilities'
          - description: Streaming capabilities.
        TemporaryOSDText:
          description: Indicates the support for temporary osd text configuration.
          type: boolean
        VideoSourceMode:
          description: Indicates the support for changing video source mode.
          type: boolean
      required:
      - ProfileCapabilities
      - StreamingCapabilities
      type: object
    media_CreateOSD:
      properties:
        OSD:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDConfiguration'
          - description: Contain the initial OSD configuration for create.
      required:
      - OSD
      type: object
    media_CreateOSDResponse:
      properties:
        OSDToken:
          description: Returns Token of the newly created OSD
          maxLength: 64
          type: string
      required:
      - OSDToken
      type: object
    media_CreateProfile:
      properties:
        Name:
          description: friendly name of the profile to be created
          maxLength: 64
          type: string
        Token:
          description: Optional token, specifying the unique identifier of the new
            profile.
          maxLength: 64
          type: string
      required:
      - Name
      type: object
    media_CreateProfileResponse:
      properties:
        Profile:
          allOf:
          - $ref: '#/components/schemas/onvif_Profile'
          - description: returns the new created profile
      required:
      - Profile
      type: object
    media_DeleteOSD:
      properties:
        OSDToken:
          description: This element contains a reference to the OSD configuration
            that should be deleted.
          maxLength: 64
          type: string
      required:
      - OSDToken
      type: object
    media_DeleteOSDResponse:
      type: object
    media_DeleteProfile:
      properties:
        ProfileToken:
          description: This element contains a  reference to the profile that should
            be deleted.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_DeleteProfileResponse:
      type: object
    media_GetAudioDecoderConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested audio decoder configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetAudioDecoderConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional audio decoder configuration token that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetAudioDecoderConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfigurationOptions'
          - description: This message contains the audio decoder configuration options.
              If a audio decoder configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetAudioDecoderConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          - description: The requested audio decoder configuration
      required:
      - Configuration
      type: object
    media_GetAudioDecoderConfigurations:
      type: object
    media_GetAudioDecoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio decoder configurations
          items:
            $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          type: array
      type: object
    media_GetAudioEncoderConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested audio encoder configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetAudioEncoderConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional audio encoder configuration token that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetAudioEncoderConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfigurationOptions'
          - description: This message contains the audio encoder configuration options.
              If a audio encoder configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetAudioEncoderConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          - description: The requested audio encoder configuration
      required:
      - Configuration
      type: object
    media_GetAudioEncoderConfigurations:
      type: object
    media_GetAudioEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio encoder configurations.
          items:
            $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          type: array
      type: object
    media_GetAudioOutputConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested audio output configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetAudioOutputConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional audio output configuration token that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetAudioOutputConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfigurationOptions'
          - description: This message contains the audio output configuration options.
              If a audio output configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetAudioOutputConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          - description: The requested audio output configuration.
      required:
      - Configuration
      type: object
    media_GetAudioOutputConfigurations:
      type: object
    media_GetAudioOutputConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio output configurations
          items:
            $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          type: array
      type: object
    media_GetAudioOutputs:
      type: object
    media_GetAudioOutputsResponse:
      properties:
        AudioOutputs:
          description: List of existing Audio Outputs
          items:
            $ref: '#/components/schemas/onvif_AudioOutput'
          type: array
      type: object
    media_GetAudioSourceConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested audio source configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetAudioSourceConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional audio source configuration token that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetAudioSourceConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfigurationOptions'
          - description: This message contains the audio source configuration options.
              If a audio source configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetAudioSourceConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          - description: The requested audio source configuration.
      required:
      - Configuration
      type: object
    media_GetAudioSourceConfigurations:
      type: object
    media_GetAudioSourceConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio source configurations.
          items:
            $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          type: array
      type: object
    media_GetAudioSources:
      type: object
    media_GetAudioSourcesResponse:
      properties:
        AudioSources:
          description: List of existing Audio Sources
          items:
            $ref: '#/components/schemas/onvif_AudioSource'
          type: array
      type: object
    media_GetCompatibleAudioDecoderConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleAudioDecoderConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of audio decoder configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          type: array
      type: object
    media_GetCompatibleAudioEncoderConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleAudioEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of audio encoder configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          type: array
      type: object
    media_GetCompatibleAudioOutputConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleAudioOutputConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of audio output configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          type: array
      type: object
    media_GetCompatibleAudioSourceConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleAudioSourceConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of audio source configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          type: array
      type: object
    media_GetCompatibleMetadataConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleMetadataConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of metadata configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_MetadataConfiguration'
          type: array
      type: object
    media_GetCompatibleVideoAnalyticsConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleVideoAnalyticsConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of video analytics configurations that are
            compatible with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          type: array
      type: object
    media_GetCompatibleVideoEncoderConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleVideoEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of video encoder configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
          type: array
      type: object
    media_GetCompatibleVideoSourceConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetCompatibleVideoSourceConfigurationsResponse:
      properties:
        Configurations:
          description: Contains a list of video source configurations that are compatible
            with the specified media profile.
          items:
            $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          type: array
      type: object
    media_GetGuaranteedNumberOfVideoEncoderInstances:
      properties:
        ConfigurationToken:
          description: Token of the video source configuration
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetGuaranteedNumberOfVideoEncoderInstancesResponse:
      properties:
        H264:
          description: If a device limits the number of instances for respective Video
            Codecs the response contains the information how many H264 streams can
            be set up at the same time per VideoSource.
          format: int32
          type: integer
        JPEG:
          description: If a device limits the number of instances for respective Video
            Codecs the response contains the information how many Jpeg streams can
            be set up at the same time per VideoSource.
          format: int32
          type: integer
        MPEG4:
          description: If a device limits the number of instances for respective Video
            Codecs the response contains the information how many Mpeg4 streams can
            be set up at the same time per VideoSource.
          format: int32
          type: integer
        TotalNumber:
          description: The minimum guaranteed total number of encoder instances (applications)
            per VideoSourceConfiguration. The device is able to deliver the TotalNumber
            of streams
          format: int32
          type: integer
      required:
      - TotalNumber
      type: object
    media_GetMetadataConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested metadata configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetMetadataConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional metadata configuration token that specifies an existing
            configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetMetadataConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfigurationOptions'
          - description: This message contains the metadata configuration options.
              If a metadata configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetMetadataConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfiguration'
          - description: The requested metadata configuration.
      required:
      - Configuration
      type: object
    media_GetMetadataConfigurations:
      type: object
    media_GetMetadataConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of metadata configurations
          items:
            $ref: '#/components/schemas/onvif_MetadataConfiguration'
          type: array
      type: object
    media_GetOSD:
      properties:
        OSDToken:
          description: The GetOSD command fetches the OSD configuration if the OSD
            token is known.
          maxLength: 64
          type: string
      required:
      - OSDToken
      type: object
    media_GetOSDOptions:
      properties:
        ConfigurationToken:
          description: Video Source Configuration Token that specifies an existing
            video source configuration that the options shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetOSDOptionsResponse:
      properties:
        OSDOptions:
          $ref: '#/components/schemas/onvif_OSDConfigurationOptions'
      required:
      - OSDOptions
      type: object
    media_GetOSDResponse:
      properties:
        OSD:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDConfiguration'
          - description: The requested OSD configuration.
      required:
      - OSD
      type: object
    media_GetOSDs:
      properties:
        ConfigurationToken:
          description: Token of the Video Source Configuration, which has OSDs associated
            with are requested. If token not exist, request all available OSDs.
          maxLength: 64
          type: string
      type: object
    media_GetOSDsResponse:
      properties:
        OSDs:
          description: This element contains a list of requested OSDs.
          items:
            $ref: '#/components/schemas/onvif_OSDConfiguration'
          type: array
      type: object
    media_GetProfile:
      properties:
        ProfileToken:
          description: this command requests a specific profile
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetProfileResponse:
      properties:
        Profile:
          allOf:
          - $ref: '#/components/schemas/onvif_Profile'
          - description: returns the requested media profile
      required:
      - Profile
      type: object
    media_GetProfiles:
      type: object
    media_GetProfilesResponse:
      properties:
        Profiles:
          description: lists all profiles that exist in the media service
          items:
            $ref: '#/components/schemas/onvif_Profile'
          type: array
      type: object
    media_GetServiceCapabilities:
      type: object
    media_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/media_Capabilities'
          - description: The capabilities for the media service is returned in the
              Capabilities element.
      required:
      - Capabilities
      type: object
    media_GetSnapshotUri:
      properties:
        ProfileToken:
          description: The ProfileToken element indicates the media profile to use
            and will define the source and dimensions of the snapshot.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_GetSnapshotUriResponse:
      properties:
        MediaUri:
          $ref: '#/components/schemas/onvif_MediaUri'
      required:
      - MediaUri
      type: object
    media_GetStreamUri:
      properties:
        ProfileToken:
          description: The ProfileToken element indicates the media profile to use
            and will define the configuration of the content of the stream.
          maxLength: 64
          type: string
        StreamSetup:
          allOf:
          - $ref: '#/components/schemas/onvif_StreamSetup'
          - description: Stream Setup that should be used with the uri
      required:
      - StreamSetup
      - ProfileToken
      type: object
    media_GetStreamUriResponse:
      properties:
        MediaUri:
          $ref: '#/components/schemas/onvif_MediaUri'
      required:
      - MediaUri
      type: object
    media_GetVideoAnalyticsConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested video analytics configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetVideoAnalyticsConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          - description: The requested video analytics configuration.
      required:
      - Configuration
      type: object
    media_GetVideoAnalyticsConfigurations:
      type: object
    media_GetVideoAnalyticsConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of VideoAnalytics configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          type: array
      type: object
    media_GetVideoEncoderConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested video encoder configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetVideoEncoderConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional video encoder configuration token that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetVideoEncoderConfigurationOptionsResponse:
      properties:
        Options:
          $ref: '#/components/schemas/onvif_VideoEncoderConfigurationOptions'
      required:
      - Options
      type: object
    media_GetVideoEncoderConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
          - description: The requested video encoder configuration.
      required:
      - Configuration
      type: object
    media_GetVideoEncoderConfigurations:
      type: object
    media_GetVideoEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of video encoder configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
          type: array
      type: object
    media_GetVideoSourceConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested video source configuration.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media_GetVideoSourceConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Optional video source configurationToken that specifies an
            existing configuration that the options are intended for.
          maxLength: 64
          type: string
        ProfileToken:
          description: Optional ProfileToken that specifies an existing media profile
            that the options shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media_GetVideoSourceConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfigurationOptions'
          - description: This message contains the video source configuration options.
              If a video source configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media_GetVideoSourceConfigurationResponse:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          - description: The requested video source configuration.
      required:
      - Configuration
      type: object
    media_GetVideoSourceConfigurations:
      type: object
    media_GetVideoSourceConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of video source configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          type: array
      type: object
    media_GetVideoSourceModes:
      properties:
        VideoSourceToken:
          description: Contains a video source reference for which a video source
            mode is requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    media_GetVideoSourceModesResponse:
      properties:
        VideoSourceModes:
          description: Return the information for specified video source mode.
          items:
            $ref: '#/components/schemas/media_VideoSourceMode'
          type: array
      required:
      - VideoSourceModes
      type: object
    media_GetVideoSources:
      type: object
    media_GetVideoSourcesResponse:
      properties:
        VideoSources:
          description: List of existing Video Sources
          items:
            $ref: '#/components/schemas/onvif_VideoSource'
          type: array
      type: object
    media_ProfileCapabilities:
      properties:
        MaximumNumberOfProfiles:
          description: Maximum number of profiles supported.
          format: int32
          type: integer
      type: object
    media_RemoveAudioDecoderConfiguration:
      properties:
        ProfileToken:
          description: This element contains a  reference to the media profile from
            which the AudioDecoderConfiguration shall be removed.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveAudioDecoderConfigurationResponse:
      type: object
    media_RemoveAudioEncoderConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            AudioEncoderConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveAudioEncoderConfigurationResponse:
      type: object
    media_RemoveAudioOutputConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            AudioOutputConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveAudioOutputConfigurationResponse:
      type: object
    media_RemoveAudioSourceConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            AudioSourceConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveAudioSourceConfigurationResponse:
      type: object
    media_RemoveMetadataConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            MetadataConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveMetadataConfigurationResponse:
      type: object
    media_RemovePTZConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            PTZConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemovePTZConfigurationResponse:
      type: object
    media_RemoveVideoAnalyticsConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            VideoAnalyticsConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveVideoAnalyticsConfigurationResponse:
      type: object
    media_RemoveVideoEncoderConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            VideoEncoderConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveVideoEncoderConfigurationResponse:
      type: object
    media_RemoveVideoSourceConfiguration:
      properties:
        ProfileToken:
          description: "Contains a reference to the media profile from which the\n\
            VideoSourceConfiguration shall be removed."
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_RemoveVideoSourceConfigurationResponse:
      type: object
    media_SetAudioDecoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          - description: Contains the modified audio decoder configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetAudioDecoderConfigurationResponse:
      type: object
    media_SetAudioEncoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoderConfiguration'
          - description: Contains the modified audio encoder configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetAudioEncoderConfigurationResponse:
      type: object
    media_SetAudioOutputConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          - description: Contains the modified audio output configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetAudioOutputConfigurationResponse:
      type: object
    media_SetAudioSourceConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          - description: Contains the modified audio source configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetAudioSourceConfigurationResponse:
      type: object
    media_SetMetadataConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfiguration'
          - description: Contains the modified metadata configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetMetadataConfigurationResponse:
      type: object
    media_SetOSD:
      properties:
        OSD:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDConfiguration'
          - description: Contains the modified OSD configuration.
      required:
      - OSD
      type: object
    media_SetOSDResponse:
      type: object
    media_SetSynchronizationPoint:
      properties:
        ProfileToken:
          description: Contains a Profile reference for which a Synchronization Point
            is requested.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_SetSynchronizationPointResponse:
      type: object
    media_SetVideoAnalyticsConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          - description: Contains the modified video analytics configuration. The
              configuration shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetVideoAnalyticsConfigurationResponse:
      type: object
    media_SetVideoEncoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoEncoderConfiguration'
          - description: Contains the modified video encoder configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetVideoEncoderConfigurationResponse:
      type: object
    media_SetVideoSourceConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          - description: Contains the modified video source configuration. The configuration
              shall exist in the device.
        ForcePersistence:
          description: The ForcePersistence element is obsolete and should always
            be assumed to be true.
          type: boolean
      required:
      - Configuration
      - ForcePersistence
      type: object
    media_SetVideoSourceConfigurationResponse:
      type: object
    media_SetVideoSourceMode:
      properties:
        VideoSourceModeToken:
          description: Indicate video source mode.
          maxLength: 64
          type: string
        VideoSourceToken:
          description: Contains a video source reference for which a video source
            mode is requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      - VideoSourceModeToken
      type: object
    media_SetVideoSourceModeResponse:
      properties:
        Reboot:
          description: The response contains information about rebooting after returning
            response. When Reboot is set true, a device will reboot automatically
            after setting mode.
          type: boolean
      required:
      - Reboot
      type: object
    media_StartMulticastStreaming:
      properties:
        ProfileToken:
          description: Contains the token of the Profile that is used to define the
            multicast stream.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_StartMulticastStreamingResponse:
      type: object
    media_StopMulticastStreaming:
      properties:
        ProfileToken:
          description: Contains the token of the Profile that is used to define the
            multicast stream.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media_StopMulticastStreamingResponse:
      type: object
    media_StreamingCapabilities:
      properties:
        NoRTSPStreaming:
          description: Indicates the device does not support live media streaming
            via RTSP.
          type: boolean
        NonAggregateControl:
          description: Indicates support for non aggregate RTSP control.
          type: boolean
        RTPMulticast:
          description: Indicates support for RTP multicast.
          type: boolean
        RTP_RTSP_TCP:
          description: Indicates support for RTP/RTSP/TCP.
          type: boolean
        RTP_TCP:
          description: Indicates support for RTP over TCP.
          type: boolean
      type: object
    media_VideoSourceMode:
      properties:
        Description:
          description: Informative description of this video source mode. This field
            should be described in English.
          type: string
        Enabled:
          description: Indication of whether this mode is active. If active this value
            is true. In case of non-indication, it means as false. The value of true
            shall be had by only one video source mode.
          type: boolean
        Encodings:
          description: Indication which encodings are supported for this video source.
            The list may contain one or more enumeration values of tt:VideoEncoding.
          items:
            type: string
          type: array
        Extension:
          $ref: '#/components/schemas/media_VideoSourceModeExtension'
        MaxFramerate:
          description: Max frame rate in frames per second for this video source mode.
          type: number
        MaxResolution:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoResolution'
          - description: Max horizontal and vertical resolution for this video source
              mode.
        Reboot:
          description: After setting the mode if a device starts to reboot this value
            is true. If a device change the mode without rebooting this value is false.
            If true, configured parameters may not be guaranteed by the device after
            rebooting.
          type: boolean
        token:
          description: Indicate token for video source mode.
          maxLength: 64
          type: string
      required:
      - token
      - MaxFramerate
      - MaxResolution
      - Encodings
      - Reboot
      type: object
    media_VideoSourceModeExtension:
      type: object
    media2_AddConfiguration:
      properties:
        Configuration:
          description: List of configurations to be added. The types shall be provided
            in the order defined by tr2:ConfigurationEnumeration. List entries with
            tr2:ConfigurationEnumeration value "All" shall be ignored.
          items:
            $ref: '#/components/schemas/media2_ConfigurationRef'
          type: array
        Name:
          description: Optional item. If present updates the Name property of the
            profile.
          maxLength: 64
          type: string
        ProfileToken:
          description: Reference to the profile where the configuration should be
            added
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media2_AddConfigurationResponse:
      type: object
    media2_Capabilities2:
      properties:
        Mask:
          description: Indicates if Masking is supported.
          type: boolean
        OSD:
          description: Indicates if OSD is supported.
          type: boolean
        ProfileCapabilities:
          allOf:
          - $ref: '#/components/schemas/media2_ProfileCapabilities'
          - description: Media profile capabilities.
        Rotation:
          description: Indicates whether or not Rotation feature is supported.
          type: boolean
        SnapshotUri:
          description: Indicates if GetSnapshotUri is supported.
          type: boolean
        SourceMask:
          description: "Indicates that privacy masks are only supported at the video\
            \ source level and not the video source configuration level. \n\t\t\t\t\
            \t\t\tIf this is true any addition, deletion or change of a privacy mask\
            \ done for one video source configuration will automatically be \n\t\t\
            \t\t\t\t\tapplied by the device to a corresponding privacy mask for all\
            \ other video source configuration associated with the same video source."
          type: boolean
        StreamingCapabilities:
          allOf:
          - $ref: '#/components/schemas/media2_StreamingCapabilities'
          - description: Streaming capabilities.
        TemporaryOSDText:
          description: Indicates the support for temporary osd text configuration.
          type: boolean
        VideoSourceMode:
          description: Indicates the support for changing video source mode.
          type: boolean
      required:
      - ProfileCapabilities
      - StreamingCapabilities
      type: object
    media2_ConfigurationEnumeration:
      enum:
      - All
      - VideoSource
      - VideoEncoder
      - AudioSource
      - AudioEncoder
      - AudioOutput
      - AudioDecoder
      - Metadata
      - Analytics
      - PTZ
      - Receiver
      type: string
    media2_ConfigurationRef:
      properties:
        Token:
          description: "Reference token of an existing configuration.\n\t\t\t\t\t\t\
            \tToken shall be included in the AddConfiguration request along with the\
            \ type.\n\t\t\t\t\t\t\tToken shall be included in the CreateProfile request\
            \ when Configuration elements are included and type is selected.\n\t\t\
            \t\t\t\t\tToken is optional for RemoveConfiguration request. If no token\
            \ is provided in RemoveConfiguration request, device shall\n\t\t\t\t\t\
            \t\tremove the configuration of the type included in the profile."
          maxLength: 64
          type: string
        Type:
          description: Type of the configuration as defined by tr2:ConfigurationEnumeration.
          type: string
      required:
      - Type
      type: object
    media2_ConfigurationSet:
      description: A set of media configurations.
      properties:
        Analytics:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          - description: Optional configuration of the analytics module and rule engine.
        AudioDecoder:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          - description: Optional configuration of the Audio decoder.
        AudioEncoder:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoder2Configuration'
          - description: Optional configuration of the Audio encoder.
        AudioOutput:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          - description: Optional configuration of the Audio output.
        AudioSource:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          - description: Optional configuration of the Audio input.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfiguration'
          - description: Optional configuration of the metadata stream.
        PTZ:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZConfiguration'
          - description: Optional configuration of the pan tilt zoom unit.
        Receiver:
          allOf:
          - $ref: '#/components/schemas/media2_ReceiverConfiguration'
          - description: Optional configuration of the Receiver.
        VideoEncoder:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoEncoder2Configuration'
          - description: Optional configuration of the Video encoder.
        VideoSource:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          - description: Optional configuration of the Video input.
      type: object
    media2_CreateMask:
      properties:
        Mask:
          allOf:
          - $ref: '#/components/schemas/media2_Mask'
          - description: Contain the initial mask configuration for create.
      required:
      - Mask
      type: object
    media2_CreateMaskResponse:
      properties:
        Token:
          description: Returns Token of the newly created Mask
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    media2_CreateOSD:
      properties:
        OSD:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDConfiguration'
          - description: Contain the initial OSD configuration for create.
      required:
      - OSD
      type: object
    media2_CreateOSDResponse:
      properties:
        OSDToken:
          description: Returns Token of the newly created OSD
          maxLength: 64
          type: string
      required:
      - OSDToken
      type: object
    media2_CreateProfile:
      properties:
        Configuration:
          description: Optional set of configurations to be assigned to the profile.
            List entries with tr2:ConfigurationEnumeration value "All" shall be ignored.
          items:
            $ref: '#/components/schemas/media2_ConfigurationRef'
          type: array
        Name:
          description: friendly name of the profile to be created
          maxLength: 64
          type: string
      required:
      - Name
      type: object
    media2_CreateProfileResponse:
      properties:
        Token:
          description: Token assigned by the device for the newly created profile.
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    media2_DeleteMask:
      properties:
        Token:
          description: This element contains a reference to the Mask configuration
            that should be deleted.
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    media2_DeleteOSD:
      properties:
        OSDToken:
          description: This element contains a reference to the OSD configuration
            that should be deleted.
          maxLength: 64
          type: string
      required:
      - OSDToken
      type: object
    media2_DeleteProfile:
      properties:
        Token:
          description: This element contains a  reference to the profile that should
            be deleted.
          maxLength: 64
          type: string
      required:
      - Token
      type: object
    media2_DeleteProfileResponse:
      type: object
    media2_EncoderInstance:
      properties:
        Encoding:
          description: Video Media Subtype for the video format. For definitions see
            tt:VideoEncodingMimeNames and
          type: string
        Number:
          description: The minimum guaranteed number of encoder instances (applications)
            for the VideoSourceConfiguration.
          format: int32
          type: integer
      required:
      - Encoding
      - Number
      type: object
    media2_EncoderInstanceInfo:
      properties:
        Codec:
          description: If a device limits the number of instances for respective Video
            Codecs the response contains the information how many streams can be set
            up at the same time per VideoSource.
          items:
            $ref: '#/components/schemas/media2_EncoderInstance'
          type: array
        Total:
          description: The minimum guaranteed total number of encoder instances (applications)
            per VideoSourceConfiguration. The device is able to deliver the Total
            number of streams
          format: int32
          type: integer
      required:
      - Total
      type: object
    media2_GetAnalyticsConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of Analytics configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoAnalyticsConfiguration'
          type: array
      type: object
    media2_GetAudioDecoderConfigurationOptionsResponse:
      properties:
        Options:
          description: This message contains the audio decoder configuration options.
            If a audio decoder configuration is specified, the options shall concern
            that particular configuration. If a media profile is specified, the options
            shall be compatible with that media profile. If no tokens are specified,
            the options shall be considered generic for the device.
          items:
            $ref: '#/components/schemas/onvif_AudioEncoder2ConfigurationOptions'
          type: array
      required:
      - Options
      type: object
    media2_GetAudioDecoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio decoder configurations
          items:
            $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          type: array
      type: object
    media2_GetAudioEncoderConfigurationOptionsResponse:
      properties:
        Options:
          description: This message contains the audio encoder configuration options.
            If a audio encoder configuration is specified, the options shall concern
            that particular configuration. If a media profile is specified, the options
            shall be compatible with that media profile. If no tokens are specified,
            the options shall be considered generic for the device.
          items:
            $ref: '#/components/schemas/onvif_AudioEncoder2ConfigurationOptions'
          type: array
      required:
      - Options
      type: object
    media2_GetAudioEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio encoder configurations.
          items:
            $ref: '#/components/schemas/onvif_AudioEncoder2Configuration'
          type: array
      type: object
    media2_GetAudioOutputConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfigurationOptions'
          - description: This message contains the audio output configuration options.
              If a audio output configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media2_GetAudioOutputConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio output configurations
          items:
            $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          type: array
      type: object
    media2_GetAudioSourceConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfigurationOptions'
          - description: This message contains the audio source configuration options.
              If a audio source configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media2_GetAudioSourceConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of audio source configurations.
          items:
            $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          type: array
      type: object
    media2_GetConfiguration:
      properties:
        ConfigurationToken:
          description: Token of the requested configuration.
          maxLength: 64
          type: string
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      type: object
    media2_GetMaskOptions:
      properties:
        ConfigurationToken:
          description: Video Source Configuration Token that specifies an existing
            video source configuration that the options shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media2_GetMaskOptionsResponse:
      properties:
        Options:
          $ref: '#/components/schemas/media2_MaskOptions'
      required:
      - Options
      type: object
    media2_GetMasks:
      properties:
        ConfigurationToken:
          description: Optional token of a Video Source Configuration.
          maxLength: 64
          type: string
        Token:
          description: Optional mask token of an existing mask.
          maxLength: 64
          type: string
      type: object
    media2_GetMasksResponse:
      properties:
        Masks:
          description: List of Mask configurations.
          items:
            $ref: '#/components/schemas/media2_Mask'
          type: array
      type: object
    media2_GetMetadataConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfigurationOptions'
          - description: This message contains the metadata configuration options.
              If a metadata configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media2_GetMetadataConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of metadata configurations
          items:
            $ref: '#/components/schemas/onvif_MetadataConfiguration'
          type: array
      type: object
    media2_GetOSDOptions:
      properties:
        ConfigurationToken:
          description: Video Source Configuration Token that specifies an existing
            video source configuration that the options shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media2_GetOSDOptionsResponse:
      properties:
        OSDOptions:
          $ref: '#/components/schemas/onvif_OSDConfigurationOptions'
      required:
      - OSDOptions
      type: object
    media2_GetOSDs:
      properties:
        ConfigurationToken:
          description: Token of the Video Source Configuration, which has OSDs associated
            with are requested. If token not exist, request all available OSDs.
          maxLength: 64
          type: string
        OSDToken:
          description: The GetOSDs command fetches the OSD configuration if the OSD
            token is known.
          maxLength: 64
          type: string
      type: object
    media2_GetOSDsResponse:
      properties:
        OSDs:
          description: This element contains a list of requested OSDs.
          items:
            $ref: '#/components/schemas/onvif_OSDConfiguration'
          type: array
      type: object
    media2_GetProfiles:
      properties:
        Token:
          description: Optional token of the requested profile.
          maxLength: 64
          type: string
        Type:
          description: The types shall be provided as defined by tr2:ConfigurationEnumeration.
          items:
            type: string
          type: array
      type: object
    media2_GetProfilesResponse:
      properties:
        Profiles:
          description: "Lists all profiles that exist in the media service. The response\
            \ provides the requested types of Configurations as far as available.\
            \ \n\t\t\t\t\t\t\t\t\tIf a profile doesn't contain a type no error shall\
            \ be provided."
          items:
            $ref: '#/components/schemas/media2_MediaProfile'
          type: array
      type: object
    media2_GetServiceCapabilities:
      type: object
    media2_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/media2_Capabilities2'
          - description: The capabilities for the media service is returned in the
              Capabilities element.
      required:
      - Capabilities
      type: object
    media2_GetSnapshotUri:
      properties:
        ProfileToken:
          description: The ProfileToken element indicates the media profile to use
            and will define the source and dimensions of the snapshot.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media2_GetSnapshotUriResponse:
      properties:
        Uri:
          description: Stable Uri to be used for requesting snapshot images.
          type: string
      required:
      - Uri
      type: object
    media2_GetStreamUri:
      properties:
        ProfileToken:
          description: The ProfileToken element indicates the media profile to use
            and will define the configuration of the content of the stream.
          maxLength: 64
          type: string
        Protocol:
          description: Defines the network protocol for streaming as defined by tr2:TransportProtocol
          type: string
      required:
      - Protocol
      - ProfileToken
      type: object
    media2_GetStreamUriResponse:
      properties:
        Uri:
          description: Stable Uri to be used for requesting the media stream
          type: string
      required:
      - Uri
      type: object
    media2_GetVideoEncoderConfigurationOptionsResponse:
      properties:
        Options:
          items:
            $ref: '#/components/schemas/onvif_VideoEncoder2ConfigurationOptions'
          type: array
      required:
      - Options
      type: object
    media2_GetVideoEncoderConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of video encoder configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoEncoder2Configuration'
          type: array
      type: object
    media2_GetVideoEncoderInstances:
      properties:
        ConfigurationToken:
          description: Token of the video source configuration
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    media2_GetVideoEncoderInstancesResponse:
      properties:
        Info:
          allOf:
          - $ref: '#/components/schemas/media2_EncoderInstanceInfo'
          - description: The minimum guaranteed total number of encoder instances
              (applications) per VideoSourceConfiguration.
      required:
      - Info
      type: object
    media2_GetVideoSourceConfigurationOptionsResponse:
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfigurationOptions'
          - description: This message contains the video source configuration options.
              If a video source configuration is specified, the options shall concern
              that particular configuration. If a media profile is specified, the
              options shall be compatible with that media profile. If no tokens are
              specified, the options shall be considered generic for the device.
      required:
      - Options
      type: object
    media2_GetVideoSourceConfigurationsResponse:
      properties:
        Configurations:
          description: This element contains a list of video source configurations.
          items:
            $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          type: array
      type: object
    media2_GetVideoSourceModes:
      properties:
        VideoSourceToken:
          description: Contains a video source reference for which a video source
            mode is requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      type: object
    media2_GetVideoSourceModesResponse:
      properties:
        VideoSourceModes:
          description: Return the information for specified video source mode.
          items:
            $ref: '#/components/schemas/media2_VideoSourceMode'
          type: array
      required:
      - VideoSourceModes
      type: object
    media2_Mask:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_Color'
          - description: Color of the masked area.
        ConfigurationToken:
          description: Token of the VideoSourceConfiguration the Mask is associated
            with.
          maxLength: 64
          type: string
        Enabled:
          description: If set the mask will cover the image, otherwise it will be
            fully transparent.
          type: boolean
        Polygon:
          allOf:
          - $ref: '#/components/schemas/onvif_Polygon'
          - description: Geometric representation of the mask area.
        Type:
          description: 'Type of masking as defined by tr2:MaskType:'
          type: string
        token:
          description: Token of the mask.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      - Polygon
      - Type
      - Enabled
      type: object
    media2_MaskOptions:
      properties:
        Color:
          allOf:
          - $ref: '#/components/schemas/onvif_ColorOptions'
          - description: Colors supported.
        MaxMasks:
          description: Maximum supported number of masks per VideoSourceConfiguration.
          format: int32
          type: integer
        MaxPoints:
          description: Maximum supported number of points per mask.
          format: int32
          type: integer
        RectangleOnly:
          description: Information whether the polygon must have four points and a
            rectangular shape.
          type: boolean
        SingleColorOnly:
          description: Indicates the device capability of change in color of privacy
            mask for one video source configuration will automatically be applied
            to all the privacy masks associated with the same video source configuration.
          type: boolean
        Types:
          description: Information which types of tr2:MaskType are supported. Valid
            values are 'Color', 'Pixelated' and 'Blurred'.
          items:
            type: string
          type: array
      required:
      - MaxMasks
      - MaxPoints
      - Types
      - Color
      type: object
    media2_MaskType:
      enum:
      - Color
      - Pixelated
      - Blurred
      type: string
    media2_MediaProfile:
      description: A media profile consists of a set of media configurations.
      properties:
        Configurations:
          allOf:
          - $ref: '#/components/schemas/media2_ConfigurationSet'
          - description: The configurations assigned to the profile.
        Name:
          description: User readable name of the profile.
          maxLength: 64
          type: string
        fixed:
          description: A value of true signals that the profile cannot be deleted.
            Default is false.
          type: boolean
        token:
          description: Unique identifier of the profile.
          maxLength: 64
          type: string
      required:
      - token
      - Name
      type: object
    media2_ProfileCapabilities:
      properties:
        ConfigurationsSupported:
          description: The configurations supported by the device as defined by tr2:ConfigurationEnumeration.
            The enumeration value "All" shall not be included in this list.
          type: string
        MaximumNumberOfProfiles:
          description: Maximum number of profiles supported.
          format: int32
          type: integer
      type: object
    media2_ReceiverConfiguration:
      allOf:
      - $ref: '#/components/schemas/onvif_ReceiverConfiguration'
      - properties:
          token:
            maxLength: 64
            type: string
        type: object
    media2_RemoveConfiguration:
      properties:
        Configuration:
          description: List of configurations to be removed. The types shall be provided
            in the order defined by tr2:ConfigurationEnumeration. Tokens appearing
            in the configuration list shall be ignored. Presence of the "All" type
            shall result in an empty profile.
          items:
            $ref: '#/components/schemas/media2_ConfigurationRef'
          type: array
        ProfileToken:
          description: This element contains a  reference to the media profile from
            which the AudioDecoderConfiguration shall be removed.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - Configuration
      type: object
    media2_RemoveConfigurationResponse:
      type: object
    media2_SetAudioDecoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioDecoderConfiguration'
          - description: Contains the modified audio decoder configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetAudioEncoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioEncoder2Configuration'
          - description: Contains the modified audio encoder configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetAudioOutputConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioOutputConfiguration'
          - description: Contains the modified audio output configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetAudioSourceConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_AudioSourceConfiguration'
          - description: Contains the modified audio source configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetConfigurationResponse:
      type: object
    media2_SetMask:
      properties:
        Mask:
          allOf:
          - $ref: '#/components/schemas/media2_Mask'
          - description: Mask to be updated.
      required:
      - Mask
      type: object
    media2_SetMetadataConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_MetadataConfiguration'
          - description: Contains the modified metadata configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetOSD:
      properties:
        OSD:
          allOf:
          - $ref: '#/components/schemas/onvif_OSDConfiguration'
          - description: Contains the modified OSD configuration.
      required:
      - OSD
      type: object
    media2_SetSynchronizationPoint:
      properties:
        ProfileToken:
          description: Contains a Profile reference for which a Synchronization Point
            is requested.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media2_SetSynchronizationPointResponse:
      type: object
    media2_SetVideoEncoderConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoEncoder2Configuration'
          - description: Contains the modified video encoder configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetVideoSourceConfiguration:
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoSourceConfiguration'
          - description: Contains the modified video source configuration. The configuration
              shall exist in the device.
      required:
      - Configuration
      type: object
    media2_SetVideoSourceMode:
      properties:
        VideoSourceModeToken:
          description: Indicate video source mode.
          maxLength: 64
          type: string
        VideoSourceToken:
          description: Contains a video source reference for which a video source
            mode is requested.
          maxLength: 64
          type: string
      required:
      - VideoSourceToken
      - VideoSourceModeToken
      type: object
    media2_SetVideoSourceModeResponse:
      properties:
        Reboot:
          description: The response contains information about rebooting after returning
            response. When Reboot is set true, a device will reboot automatically
            after setting mode.
          type: boolean
      required:
      - Reboot
      type: object
    media2_StartStopMulticastStreaming:
      properties:
        ProfileToken:
          description: Contains the token of the Profile that is used to define the
            multicast stream.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    media2_StreamingCapabilities:
      properties:
        AutoStartMulticast:
          description: Indicates support for non-RTSP controlled multicast streaming.
          type: boolean
        NonAggregateControl:
          description: Indicates support for non aggregate RTSP control.
          type: boolean
        RTPMulticast:
          description: Indicates support for RTP multicast.
          type: boolean
        RTP_RTSP_TCP:
          description: Indicates support for RTP/RTSP/TCP.
          type: boolean
        RTSPStreaming:
          description: Indicates support for live media streaming via RTSP.
          type: boolean
        RTSPWebSocketUri:
          description: If streaming over WebSocket is supported, this shall return
            the RTSP WebSocket URI as described in Streaming Specification Section
            5.1.1.5.
          type: string
      type: object
    media2_TransportProtocol:
      enum:
      - RtspUnicast
      - RtspMulticast
      - RTSP
      - RtspOverHttp
      type: string
    media2_VideoSourceMode:
      properties:
        Description:
          description: Informative description of this video source mode. This field
            should be described in English.
          type: string
        Enabled:
          description: Indication of whether this mode is active. If active this value
            is true. In case of non-indication, it means as false. The value of true
            shall be had by only one video source mode.
          type: boolean
        Encodings:
          description: List of one or more encodings supported for this video source.  For
            name definitions see tt:VideoEncodingMimeNames, and see
          items:
            type: string
          type: array
        MaxFramerate:
          description: Max frame rate in frames per second for this video source mode.
          type: number
        MaxResolution:
          allOf:
          - $ref: '#/components/schemas/onvif_VideoResolution'
          - description: Max horizontal and vertical resolution for this video source
              mode.
        Reboot:
          description: After setting the mode if a device starts to reboot this value
            is true. If a device change the mode without rebooting this value is false.
            If true, configured parameters may not be guaranteed by the device after
            rebooting.
          type: boolean
        token:
          description: Indicate token for video source mode.
          maxLength: 64
          type: string
      required:
      - token
      - MaxFramerate
      - MaxResolution
      - Encodings
      - Reboot
      type: object
    ptz_AbsoluteMove:
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: A Position vector specifying the absolute target position.
        ProfileToken:
          description: A reference to the MediaProfile.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: An optional Speed.
      required:
      - ProfileToken
      - Position
      type: object
    ptz_AbsoluteMoveResponse:
      type: object
    ptz_Capabilities:
      properties:
        EFlip:
          description: Indicates whether or not EFlip is supported.
          type: boolean
        GetCompatibleConfigurations:
          description: Indicates support for the GetCompatibleConfigurations command.
          type: boolean
        MoveAndTrack:
          description: Indication of the methods of MoveAndTrack that are supported,
            acceptable values are defined in tt:MoveAndTrackMethod.
          type: string
        MoveStatus:
          description: Indicates that the PTZStatus includes MoveStatus information.
          type: boolean
        Reverse:
          description: Indicates whether or not reversing of PT control direction
            is supported.
          type: boolean
        StatusPosition:
          description: Indicates that the PTZStatus includes Position information.
          type: boolean
      type: object
    ptz_ContinuousMove:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile.
          maxLength: 64
          type: string
        Timeout:
          description: An optional Timeout parameter.
          format: date-time
          type: string
        Velocity:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: A Velocity vector specifying the velocity of pan, tilt and
              zoom.
      required:
      - ProfileToken
      - Velocity
      type: object
    ptz_ContinuousMoveResponse:
      type: object
    ptz_CreatePresetTour:
      properties:
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_CreatePresetTourResponse:
      properties:
        PresetTourToken:
          maxLength: 64
          type: string
      required:
      - PresetTourToken
      type: object
    ptz_GeoMove:
      properties:
        AreaHeight:
          description: An optional indication of the height of the target/area.
          type: number
        AreaWidth:
          description: An optional indication of the width of the target/area.
          type: number
        ProfileToken:
          description: A reference to the MediaProfile.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: An optional Speed.
        Target:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoLocation'
          - description: The geolocation of the target position.
      required:
      - ProfileToken
      - Target
      type: object
    ptz_GeoMoveResponse:
      type: object
    ptz_GetCompatibleConfigurations:
      properties:
        ProfileToken:
          description: Contains the token of an existing media profile the configurations
            shall be compatible with.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_GetCompatibleConfigurationsResponse:
      properties:
        PTZConfiguration:
          description: A list of all existing PTZConfigurations on the NVT that is
            suitable to be added to the addressed media profile.
          items:
            $ref: '#/components/schemas/onvif_PTZConfiguration'
          type: array
      type: object
    ptz_GetConfiguration:
      properties:
        PTZConfigurationToken:
          description: Token of the requested PTZConfiguration.
          maxLength: 64
          type: string
      required:
      - PTZConfigurationToken
      type: object
    ptz_GetConfigurationOptions:
      properties:
        ConfigurationToken:
          description: Token of an existing configuration that the options are intended
            for.
          maxLength: 64
          type: string
      required:
      - ConfigurationToken
      type: object
    ptz_GetConfigurationOptionsResponse:
      properties:
        PTZConfigurationOptions:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZConfigurationOptions'
          - description: The requested PTZ configuration options.
      required:
      - PTZConfigurationOptions
      type: object
    ptz_GetConfigurationResponse:
      properties:
        PTZConfiguration:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZConfiguration'
          - description: A requested PTZConfiguration.
      required:
      - PTZConfiguration
      type: object
    ptz_GetConfigurations:
      type: object
    ptz_GetConfigurationsResponse:
      properties:
        PTZConfiguration:
          description: A list of all existing PTZConfigurations on the device.
          items:
            $ref: '#/components/schemas/onvif_PTZConfiguration'
          type: array
      type: object
    ptz_GetNode:
      properties:
        NodeToken:
          description: Token of the requested PTZNode.
          maxLength: 64
          type: string
      required:
      - NodeToken
      type: object
    ptz_GetNodeResponse:
      properties:
        PTZNode:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZNode'
          - description: A requested PTZNode.
      required:
      - PTZNode
      type: object
    ptz_GetNodes:
      type: object
    ptz_GetNodesResponse:
      properties:
        PTZNode:
          description: A list of the existing PTZ Nodes on the device.
          items:
            $ref: '#/components/schemas/onvif_PTZNode'
          type: array
      type: object
    ptz_GetPresetTour:
      properties:
        PresetTourToken:
          maxLength: 64
          type: string
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - PresetTourToken
      type: object
    ptz_GetPresetTourOptions:
      properties:
        PresetTourToken:
          maxLength: 64
          type: string
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_GetPresetTourOptionsResponse:
      properties:
        Options:
          $ref: '#/components/schemas/onvif_PTZPresetTourOptions'
      required:
      - Options
      type: object
    ptz_GetPresetTourResponse:
      properties:
        PresetTour:
          $ref: '#/components/schemas/onvif_PresetTour'
      required:
      - PresetTour
      type: object
    ptz_GetPresetTours:
      properties:
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_GetPresetToursResponse:
      properties:
        PresetTour:
          items:
            $ref: '#/components/schemas/onvif_PresetTour'
          type: array
      type: object
    ptz_GetPresets:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_GetPresetsResponse:
      properties:
        Preset:
          description: A list of presets which are available for the requested MediaProfile.
          items:
            $ref: '#/components/schemas/onvif_PTZPreset'
          type: array
      type: object
    ptz_GetServiceCapabilities:
      type: object
    ptz_GetServiceCapabilitiesResponse:
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/ptz_Capabilities'
          - description: The capabilities for the PTZ service is returned in the Capabilities
              element.
      required:
      - Capabilities
      type: object
    ptz_GetStatus:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile where the PTZStatus should
            be requested.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_GetStatusResponse:
      properties:
        PTZStatus:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZStatus'
          - description: The PTZStatus for the requested MediaProfile.
      required:
      - PTZStatus
      type: object
    ptz_GotoHomePosition:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: A requested speed.The speed parameter can only be specified
              when Speed Spaces are available for the PTZ Node.
      required:
      - ProfileToken
      type: object
    ptz_GotoHomePositionResponse:
      type: object
    ptz_GotoPreset:
      properties:
        PresetToken:
          description: A requested preset token.
          maxLength: 64
          type: string
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: A requested speed.The speed parameter can only be specified
              when Speed Spaces are available for the PTZ Node.
      required:
      - ProfileToken
      - PresetToken
      type: object
    ptz_GotoPresetResponse:
      type: object
    ptz_ModifyPresetTour:
      properties:
        PresetTour:
          $ref: '#/components/schemas/onvif_PresetTour'
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - PresetTour
      type: object
    ptz_ModifyPresetTourResponse:
      type: object
    ptz_MoveAndStartTracking:
      properties:
        GeoLocation:
          allOf:
          - $ref: '#/components/schemas/onvif_GeoLocation'
          - description: The geolocation of the target position.
        ObjectID:
          description: Object ID of the object to track.
          format: int32
          type: integer
        PresetToken:
          description: A preset token.
          maxLength: 64
          type: string
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: Speed vector specifying the velocity of pan, tilt and zoom.
        TargetPosition:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: A Position vector specifying the absolute target position.
      required:
      - ProfileToken
      type: object
    ptz_MoveAndStartTrackingResponse:
      type: object
    ptz_OperatePresetTour:
      properties:
        Operation:
          $ref: '#/components/schemas/onvif_PTZPresetTourOperation'
        PresetTourToken:
          maxLength: 64
          type: string
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - PresetTourToken
      - Operation
      type: object
    ptz_OperatePresetTourResponse:
      type: object
    ptz_RelativeMove:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile.
          maxLength: 64
          type: string
        Speed:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZSpeed'
          - description: An optional Speed parameter.
        Translation:
          allOf:
          - $ref: '#/components/schemas/onvif_PTZVector'
          - description: A positional Translation relative to the current position
      required:
      - ProfileToken
      - Translation
      type: object
    ptz_RelativeMoveResponse:
      type: object
    ptz_RemovePreset:
      properties:
        PresetToken:
          description: A requested preset token.
          maxLength: 64
          type: string
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - PresetToken
      type: object
    ptz_RemovePresetResponse:
      type: object
    ptz_RemovePresetTour:
      properties:
        PresetTourToken:
          maxLength: 64
          type: string
        ProfileToken:
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - PresetTourToken
      type: object
    ptz_RemovePresetTourResponse:
      type: object
    ptz_SendAuxiliaryCommand:
      properties:
        AuxiliaryData:
          description: The Auxiliary request data.
          maxLength: 128
          type: string
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      - AuxiliaryData
      type: object
    ptz_SendAuxiliaryCommandResponse:
      properties:
        AuxiliaryResponse:
          description: The response contains the auxiliary response.
          maxLength: 128
          type: string
      required:
      - AuxiliaryResponse
      type: object
    ptz_SetConfiguration:
      properties:
        ForcePersistence:
          description: 'Flag that makes configuration persistent. Example: User wants
            the configuration to exist after reboot.'
          type: boolean
        PTZConfiguration:
          $ref: '#/components/schemas/onvif_PTZConfiguration'
      required:
      - PTZConfiguration
      - ForcePersistence
      type: object
    ptz_SetConfigurationResponse:
      type: object
    ptz_SetHomePosition:
      properties:
        ProfileToken:
          description: A reference to the MediaProfile where the home position should
            be set.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_SetHomePositionResponse:
      type: object
    ptz_SetPreset:
      properties:
        PresetName:
          description: A requested preset name.
          type: string
        PresetToken:
          description: A requested preset token.
          maxLength: 64
          type: string
        ProfileToken:
          description: A reference to the MediaProfile where the operation should
            take place.
          maxLength: 64
          type: string
      required:
      - ProfileToken
      type: object
    ptz_SetPresetResponse:
      properties:
        PresetToken:
          description: A token to the Preset which has been set.
          maxLength: 64
          type: string
      required:
      - PresetToken
      type: object
    ptz_Stop:
      properties:
        PanTilt:
          description: Set true when we want to stop ongoing pan and tilt movements.If
            PanTilt arguments are not present, this command stops these movements.
          type: boolean
        ProfileToken:
          description: A reference to the MediaProfile that indicate what should be
            stopped.
          maxLength: 64
          type: string
        Zoom:
          description: Set true when we want to stop ongoing zoom movement.If Zoom
            arguments are not present, this command stops ongoing zoom movement.
          type: boolean
      required:
      - ProfileToken
      type: object
    ptz_StopResponse:
      type: object
    Event:
      description: A discrete event containing one or more readings
      properties:
        apiVersion:
          description: A version number shows the API version in DTOs.
          type: string
        id:
          description: The unique identifier for the event
          type: string
          format: uuid
        deviceName:
          description: The name of the device from which the event originated
          type: string
        profileName:
          description: The name of the device profile from which the event originated
          type: string
        sourceName:
          description: The name of the source device resource or command from which
            the event originated
          type: string
        origin:
          description: A Unix timestamp indicating when the event was originated at
            the source device (can support nanoseconds)
          type: integer
        readings:
          description: One or more readings captured at the time of the event
          type: array
          items:
            $ref: '#/components/schemas/BaseReading'
      required:
      - apiVersion
      - id
      - deviceName
      - profileName
      - sourceName
      - origin
      - readings
    BaseEventResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          event:
            $ref: '#/components/schemas/Event'
      description: A response type for returning an Event to the caller.
    ObjectEventResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEventResponse'
      - properties:
          event:
            properties:
              readings:
                items:
                  $ref: '#/components/schemas/ObjectReading'
    BinaryEventResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEventResponse'
      - properties:
          event:
            properties:
              readings:
                items:
                  $ref: '#/components/schemas/BinaryReading'
    StringEventResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEventResponse'
      - properties:
          event:
            properties:
              readings:
                items:
                  $ref: '#/components/schemas/StringReading'
    BoolEventResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEventResponse'
      - properties:
          event:
            properties:
              readings:
                items:
                  $ref: '#/components/schemas/BoolReading'
    BaseResponse:
      description: Defines basic properties which all use-case specific response DTO
        instances should support
      type: object
      properties:
        apiVersion:
          description: A version number shows the API version in DTOs.
          type: string
          example: v2
        statusCode:
          description: A numeric code signifying the operational status of the response.
          type: integer
    BaseReading:
      description: A base reading type containing common properties from which more
        specific reading types inherit. This definition should not be implemented
        but is used elsewhere to indicate support for a mixed list of simple/binary
        readings in a single event.
      type: object
      properties:
        id:
          description: The unique identifier for the reading
          type: string
          format: uuid
        origin:
          description: A Unix timestamp indicating when the reading was originated
            at the source device (can support nanoseconds)
          type: integer
        deviceName:
          description: The name of the device from which the reading originated
          type: string
        resourceName:
          description: The device resource name for the reading
          type: string
        profileName:
          description: The device profile name for the reading
          type: string
        valueType:
          description: Indicates the datatype of the value property
          type: string
          enum:
          - Bool
          - String
          - Object
          - Binary
      required:
      - apiVersion
      - deviceName
      - resourceName
      - profileName
      - origin
      - valueType
    BoolReading:
      description: An event reading for a bool data type
      allOf:
      - $ref: '#/components/schemas/BaseReading'
      - type: object
        properties:
          valueType:
            example: Bool
          value:
            description: A string representation of the reading's value
            type: string
            enum:
            - 'true'
            - 'false'
        required:
        - value
    StringReading:
      description: An event reading for a string data type
      allOf:
      - $ref: '#/components/schemas/BaseReading'
      - type: object
        properties:
          valueType:
            example: String
          value:
            description: A string representation of the reading's value
            type: string
        required:
        - value
    ObjectReading:
      description: An event reading for an object data type
      allOf:
      - $ref: '#/components/schemas/BaseReading'
      - type: object
        properties:
          valueType:
            example: Object
          value:
            description: Use objectValue instead.
            type: string
            example: ''
          objectValue:
            description: Object representation of the reading's value
            type: object
        required:
        - objectValue
    BinaryReading:
      description: An event reading for a binary data type
      allOf:
      - $ref: '#/components/schemas/BaseReading'
      - type: object
        properties:
          valueType:
            description: Indicates the datatype of the value property
            type: string
            example: Binary
            enum:
            - Binary
          binaryValue:
            description: If the value of the reading is binary, it will be found in
              this property as a base64 string
            type: string
            format: base64
          mediaType:
            description: E.g. MIME Type, indicates what the content type of the binaryValue
              property is if it's populated.
            type: string
            example: image/jpeg
          value:
            description: Use binaryValue instead.
            type: string
            example: ''
        required:
        - binaryValue
        - mediaType
    ErrorResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          message:
            description: A field that can contain a free-form message, such as an
              error message.
            type: string
      description: A response type for returning a generic error to the caller.
      type: object
  headers:
    correlatedResponseHeader:
      description: A response header that returns the unique correlation ID used to
        initiate the request.
      schema:
        type: string
        format: uuid
      example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
  examples:
    200Example:
      value:
        apiVersion: v2
        statusCode: 200
    400Example:
      value:
        apiVersion: v2
        statusCode: 400
        message: Bad Request
    404Example:
      value:
        apiVersion: v2
        statusCode: 404
        message: The requested resource does not exist
    416Example:
      value:
        apiVersion: v2
        statusCode: 416
        message: Range Not Satisfiable
    423Example:
      value:
        apiVersion: v2
        statusCode: 423
        message: The device is locked (AdminState)
    500Example:
      value:
        apiVersion: v2
        statusCode: 500
        message: Internal Server Error
    503Example:
      value:
        apiVersion: v2
        statusCode: 503
        message: HTTP request timeout
